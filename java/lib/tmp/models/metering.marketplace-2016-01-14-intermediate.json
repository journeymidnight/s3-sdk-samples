{
  "metadata" : {
    "apiVersion" : "2016-01-14",
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<fullname>AWS Marketplace Metering Service</fullname> <p>This reference provides descriptions of the low-level AWS Marketplace Metering Service API. </p> <p>AWS Marketplace sellers can use this API to submit usage data for custom usage dimensions.</p> <p><b>Submitting Metering Records</b></p> <ul> <li> <p><i>MeterUsage</i>- Submits the metering record for a Marketplace product.</p> </li> </ul>",
    "defaultEndpoint" : "https://metering.marketplace.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "metering.marketplace.us-east-1.amazonaws.com",
    "syncInterface" : "AWSMarketplaceMetering",
    "syncClient" : "AWSMarketplaceMeteringClient",
    "asyncInterface" : "AWSMarketplaceMeteringAsync",
    "asyncClient" : "AWSMarketplaceMeteringAsyncClient",
    "packageName" : "com.amazonaws.services.marketplacemetering",
    "packagePath" : "com/amazonaws/services/marketplacemetering",
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWSMarketplace Metering",
    "hasApiWithStreamInput" : false,
    "contentType" : null,
    "jsonVersion" : "1.1",
    "endpointPrefix" : "metering.marketplace",
    "signingName" : "aws-marketplace",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "jsonProtocol" : true,
    "syncClientBuilderClassName" : "AWSMarketplaceMeteringClientBuilder",
    "asyncClientBuilderClassName" : "AWSMarketplaceMeteringAsyncClientBuilder",
    "cucumberModuleInjectorClassName" : "AWSMarketplaceMeteringModuleInjector",
    "smokeTestsPackageName" : "com.amazonaws.services.marketplacemetering.smoketests",
    "serviceName" : "AWSMarketplace Metering",
    "cborProtocol" : false,
    "xmlProtocol" : false,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller"
  },
  "operations" : {
    "MeterUsage" : {
      "documentation" : "<p>API to emit metering records. For identical requests, the API is idempotent. It simply returns the metering record ID. </p>",
      "operationName" : "MeterUsage",
      "deprecated" : false,
      "input" : {
        "variableName" : "meterUsageRequest",
        "variableType" : "MeterUsageRequest",
        "variableDeclarationType" : "MeterUsageRequest",
        "documentation" : "",
        "simpleType" : "MeterUsageRequest",
        "variableSetterType" : "MeterUsageRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "MeterUsageResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InternalServiceErrorException",
        "documentation" : "<p>An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.</p>"
      }, {
        "exceptionName" : "InvalidProductCodeException",
        "documentation" : "<p>The product code passed does not match the product code used for publishing the product.</p>"
      }, {
        "exceptionName" : "InvalidUsageDimensionException",
        "documentation" : "<p>The usage dimension does not match one of the UsageDimensions associated with products.</p>"
      }, {
        "exceptionName" : "InvalidEndpointRegionException",
        "documentation" : "<p>The endpoint being called is in a region different from your EC2 instance. The region of the Metering service endpoint and the region of the EC2 instance must match.</p>"
      }, {
        "exceptionName" : "TimestampOutOfBoundsException",
        "documentation" : "<p>The timestamp value passed in the meterUsage() is out of allowed range.</p>"
      }, {
        "exceptionName" : "DuplicateRequestException",
        "documentation" : "<p>A metering record has already been emitted by the same EC2 instance for the given {usageDimension, timestamp} with a different usageQuantity. </p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The calls to the MeterUsage API are throttled.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "MeterUsageResult",
      "asyncReturnType" : "MeterUsageResult",
      "asyncFutureType" : "java.util.concurrent.Future<MeterUsageResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<MeterUsageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<MeterUsageRequest, MeterUsageResult>",
      "authenticated" : true,
      "methodName" : "meterUsage"
    }
  },
  "shapes" : {
    "TimestampOutOfBoundsException" : {
      "c2jName" : "TimestampOutOfBoundsException",
      "documentation" : "<p>The timestamp value passed in the meterUsage() is out of allowed range.</p>",
      "shapeName" : "TimestampOutOfBoundsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "timestampOutOfBoundsException",
        "variableType" : "TimestampOutOfBoundsException",
        "variableDeclarationType" : "TimestampOutOfBoundsException",
        "documentation" : null,
        "simpleType" : "TimestampOutOfBoundsException",
        "variableSetterType" : "TimestampOutOfBoundsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TimestampOutOfBoundsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InternalServiceErrorException" : {
      "c2jName" : "InternalServiceErrorException",
      "documentation" : "<p>An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.</p>",
      "shapeName" : "InternalServiceErrorException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "internalServiceErrorException",
        "variableType" : "InternalServiceErrorException",
        "variableDeclarationType" : "InternalServiceErrorException",
        "documentation" : null,
        "simpleType" : "InternalServiceErrorException",
        "variableSetterType" : "InternalServiceErrorException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InternalServiceErrorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidUsageDimensionException" : {
      "c2jName" : "InvalidUsageDimensionException",
      "documentation" : "<p>The usage dimension does not match one of the UsageDimensions associated with products.</p>",
      "shapeName" : "InvalidUsageDimensionException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidUsageDimensionException",
        "variableType" : "InvalidUsageDimensionException",
        "variableDeclarationType" : "InvalidUsageDimensionException",
        "documentation" : null,
        "simpleType" : "InvalidUsageDimensionException",
        "variableSetterType" : "InvalidUsageDimensionException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidUsageDimensionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "documentation" : "<p>The calls to the MeterUsage API are throttled.</p>",
      "shapeName" : "ThrottlingException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "variableDeclarationType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "MeterUsageRequest" : {
      "c2jName" : "MeterUsageRequest",
      "documentation" : "",
      "shapeName" : "MeterUsageRequest",
      "deprecated" : false,
      "required" : [ "ProductCode", "Timestamp", "UsageDimension", "UsageQuantity", "DryRun" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>",
        "name" : "ProductCode",
        "c2jName" : "ProductCode",
        "c2jShape" : "ProductCode",
        "variable" : {
          "variableName" : "productCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "productCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ProductCode",
          "marshallLocationName" : "ProductCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.*/",
        "getterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@return Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.*/",
        "fluentSetterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>",
        "name" : "Timestamp",
        "c2jName" : "Timestamp",
        "c2jShape" : "Timestamp",
        "variable" : {
          "variableName" : "timestamp",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "timestamp",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Timestamp",
          "marshallLocationName" : "Timestamp",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.*/",
        "getterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@return Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.*/",
        "fluentSetterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>",
        "name" : "UsageDimension",
        "c2jName" : "UsageDimension",
        "c2jShape" : "UsageDimension",
        "variable" : {
          "variableName" : "usageDimension",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "usageDimension",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "UsageDimension",
          "marshallLocationName" : "UsageDimension",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.*/",
        "getterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@return It will be one of the 'fcp dimension name' provided during the publishing of the product.*/",
        "fluentSetterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Consumption value for the hour.</p>",
        "name" : "UsageQuantity",
        "c2jName" : "UsageQuantity",
        "c2jShape" : "UsageQuantity",
        "variable" : {
          "variableName" : "usageQuantity",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>Consumption value for the hour.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "usageQuantity",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "UsageQuantity",
          "marshallLocationName" : "UsageQuantity",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.*/",
        "getterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@return Consumption value for the hour.*/",
        "fluentSetterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>",
        "name" : "DryRun",
        "c2jName" : "DryRun",
        "c2jShape" : "Boolean",
        "variable" : {
          "variableName" : "dryRun",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "dryRun",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DryRun",
          "marshallLocationName" : "DryRun",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.*/",
        "getterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@return Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.*/",
        "fluentSetterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "meterUsageRequest",
        "variableType" : "MeterUsageRequest",
        "variableDeclarationType" : "MeterUsageRequest",
        "documentation" : null,
        "simpleType" : "MeterUsageRequest",
        "variableSetterType" : "MeterUsageRequest"
      },
      "marshaller" : {
        "action" : "MeterUsage",
        "verb" : "POST",
        "target" : "AWSMPMeteringService.MeterUsage",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ProductCode" : {
          "documentation" : "<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>",
          "name" : "ProductCode",
          "c2jName" : "ProductCode",
          "c2jShape" : "ProductCode",
          "variable" : {
            "variableName" : "productCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "productCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ProductCode",
            "marshallLocationName" : "ProductCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.*/",
          "getterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@return Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.*/",
          "fluentSetterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p>\n@param productCode Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DryRun" : {
          "documentation" : "<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>",
          "name" : "DryRun",
          "c2jName" : "DryRun",
          "c2jShape" : "Boolean",
          "variable" : {
            "variableName" : "dryRun",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "dryRun",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DryRun",
            "marshallLocationName" : "DryRun",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.*/",
          "getterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@return Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.*/",
          "fluentSetterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. </p>\n@param dryRun Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "UsageQuantity" : {
          "documentation" : "<p>Consumption value for the hour.</p>",
          "name" : "UsageQuantity",
          "c2jName" : "UsageQuantity",
          "c2jShape" : "UsageQuantity",
          "variable" : {
            "variableName" : "usageQuantity",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>Consumption value for the hour.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "usageQuantity",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "UsageQuantity",
            "marshallLocationName" : "UsageQuantity",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.*/",
          "getterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@return Consumption value for the hour.*/",
          "fluentSetterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Consumption value for the hour.</p>\n@param usageQuantity Consumption value for the hour.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Timestamp" : {
          "documentation" : "<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>",
          "name" : "Timestamp",
          "c2jName" : "Timestamp",
          "c2jShape" : "Timestamp",
          "variable" : {
            "variableName" : "timestamp",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "timestamp",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Timestamp",
            "marshallLocationName" : "Timestamp",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.*/",
          "getterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@return Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.*/",
          "fluentSetterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored. </p>\n@param timestamp Timestamp of the hour, recorded in UTC. The seconds and milliseconds portions of the timestamp will be ignored.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "UsageDimension" : {
          "documentation" : "<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>",
          "name" : "UsageDimension",
          "c2jName" : "UsageDimension",
          "c2jShape" : "UsageDimension",
          "variable" : {
            "variableName" : "usageDimension",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "usageDimension",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "UsageDimension",
            "marshallLocationName" : "UsageDimension",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.*/",
          "getterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@return It will be one of the 'fcp dimension name' provided during the publishing of the product.*/",
          "fluentSetterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>It will be one of the 'fcp dimension name' provided during the publishing of the product.</p>\n@param usageDimension It will be one of the 'fcp dimension name' provided during the publishing of the product.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MeterUsageResult" : {
      "c2jName" : "MeterUsageResult",
      "documentation" : "",
      "shapeName" : "MeterUsageResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "MeteringRecordId",
        "c2jName" : "MeteringRecordId",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "meteringRecordId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "meteringRecordId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MeteringRecordId",
          "marshallLocationName" : "MeteringRecordId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param meteringRecordId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param meteringRecordId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param meteringRecordId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "meterUsageResult",
        "variableType" : "MeterUsageResult",
        "variableDeclarationType" : "MeterUsageResult",
        "documentation" : null,
        "simpleType" : "MeterUsageResult",
        "variableSetterType" : "MeterUsageResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "MeteringRecordId" : {
          "documentation" : "",
          "name" : "MeteringRecordId",
          "c2jName" : "MeteringRecordId",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "meteringRecordId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "meteringRecordId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MeteringRecordId",
            "marshallLocationName" : "MeteringRecordId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param meteringRecordId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param meteringRecordId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param meteringRecordId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DuplicateRequestException" : {
      "c2jName" : "DuplicateRequestException",
      "documentation" : "<p>A metering record has already been emitted by the same EC2 instance for the given {usageDimension, timestamp} with a different usageQuantity. </p>",
      "shapeName" : "DuplicateRequestException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "duplicateRequestException",
        "variableType" : "DuplicateRequestException",
        "variableDeclarationType" : "DuplicateRequestException",
        "documentation" : null,
        "simpleType" : "DuplicateRequestException",
        "variableSetterType" : "DuplicateRequestException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DuplicateRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidEndpointRegionException" : {
      "c2jName" : "InvalidEndpointRegionException",
      "documentation" : "<p>The endpoint being called is in a region different from your EC2 instance. The region of the Metering service endpoint and the region of the EC2 instance must match.</p>",
      "shapeName" : "InvalidEndpointRegionException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidEndpointRegionException",
        "variableType" : "InvalidEndpointRegionException",
        "variableDeclarationType" : "InvalidEndpointRegionException",
        "documentation" : null,
        "simpleType" : "InvalidEndpointRegionException",
        "variableSetterType" : "InvalidEndpointRegionException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidEndpointRegionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidProductCodeException" : {
      "c2jName" : "InvalidProductCodeException",
      "documentation" : "<p>The product code passed does not match the product code used for publishing the product.</p>",
      "shapeName" : "InvalidProductCodeException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidProductCodeException",
        "variableType" : "InvalidProductCodeException",
        "variableDeclarationType" : "InvalidProductCodeException",
        "documentation" : null,
        "simpleType" : "InvalidProductCodeException",
        "variableSetterType" : "InvalidProductCodeException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidProductCodeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfigFactory" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : null,
    "renameShapes" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customServiceMetadata" : null,
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null,
    "customErrorCodeFieldName" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "customSignerProvider" : null,
    "calculateCRC32FromCompressedData" : false,
    "customFileHeader" : null,
    "convenienceTypeOverloads" : [ ],
    "skipSmokeTests" : false
  },
  "examples" : {
    "version" : "1.0",
    "operationExamples" : { }
  },
  "fileHeader" : "/*\n * Copyright 2011-2016 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "clientConfigFactory" : "ClientConfigurationFactory",
  "exceptionUnmarshallerImpl" : null,
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.marketplacemetering.model.AWSMarketplaceMeteringException",
  "sdkModeledExceptionBaseClassName" : "AWSMarketplaceMeteringException"
}