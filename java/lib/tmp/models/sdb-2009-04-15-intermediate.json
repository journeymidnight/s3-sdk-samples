{
  "metadata" : {
    "apiVersion" : "2009-04-15",
    "protocol" : "query",
    "checksumFormat" : null,
    "documentation" : "Amazon SimpleDB is a web service providing the core database functions of data indexing and querying in the cloud. By offloading the time and effort associated with building and operating a web-scale database, SimpleDB provides developers the freedom to focus on application development. <p> A traditional, clustered relational database requires a sizable upfront capital outlay, is complex to design, and often requires extensive and repetitive database administration. Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing your data and providing a simple API for storage and access. This approach eliminates the administrative burden of data modeling, index maintenance, and performance tuning. Developers gain access to this functionality within Amazon's proven computing environment, are able to scale instantly, and pay only for what they use. </p> <p> Visit <a href=\"http://aws.amazon.com/simpledb/\">http://aws.amazon.com/simpledb/</a> for more information. </p>",
    "defaultEndpoint" : "sdb.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "sdb.amazonaws.com",
    "syncInterface" : "AmazonSimpleDB",
    "syncClient" : "AmazonSimpleDBClient",
    "asyncInterface" : "AmazonSimpleDBAsync",
    "asyncClient" : "AmazonSimpleDBAsyncClient",
    "packageName" : "com.amazonaws.services.simpledb",
    "packagePath" : "com/amazonaws/services/simpledb",
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon SimpleDB",
    "hasApiWithStreamInput" : false,
    "contentType" : null,
    "jsonVersion" : null,
    "endpointPrefix" : "sdb",
    "signingName" : "sdb",
    "jsonProtocol" : false,
    "xmlProtocol" : true,
    "cborProtocol" : false,
    "unmarshallerContextClassName" : "StaxUnmarshallerContext",
    "unmarshallerClassSuffix" : "StaxUnmarshaller",
    "syncClientBuilderClassName" : "AmazonSimpleDBClientBuilder",
    "asyncClientBuilderClassName" : "AmazonSimpleDBAsyncClientBuilder",
    "cucumberModuleInjectorClassName" : "AmazonSimpleDBModuleInjector",
    "smokeTestsPackageName" : "com.amazonaws.services.simpledb.smoketests",
    "serviceName" : "Amazon SimpleDB",
    "protocolDefaultExceptionUmarshallerImpl" : "StandardErrorUnmarshaller"
  },
  "operations" : {
    "BatchDeleteAttributes" : {
      "documentation" : "<p> Performs multiple DeleteAttributes operations in a single call, which reduces round trips and latencies. This enables Amazon SimpleDB to optimize requests, which generally yields better throughput. </p> <p> The following limitations are enforced for this operation: <ul> <li>1 MB request size</li> <li>25 item limit per BatchDeleteAttributes operation</li> </ul> </p>",
      "operationName" : "BatchDeleteAttributes",
      "deprecated" : false,
      "input" : {
        "variableName" : "batchDeleteAttributesRequest",
        "variableType" : "BatchDeleteAttributesRequest",
        "variableDeclarationType" : "BatchDeleteAttributesRequest",
        "documentation" : "",
        "simpleType" : "BatchDeleteAttributesRequest",
        "variableSetterType" : "BatchDeleteAttributesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "BatchDeleteAttributesResult",
        "documentation" : null
      },
      "exceptions" : null,
      "hasBlobMemberAsPayload" : false,
      "methodName" : "batchDeleteAttributes",
      "syncReturnType" : "BatchDeleteAttributesResult",
      "asyncReturnType" : "BatchDeleteAttributesResult",
      "asyncFutureType" : "java.util.concurrent.Future<BatchDeleteAttributesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<BatchDeleteAttributesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchDeleteAttributesRequest, BatchDeleteAttributesResult>",
      "authenticated" : true
    },
    "BatchPutAttributes" : {
      "documentation" : "<p> The <code>BatchPutAttributes</code> operation creates or replaces attributes within one or more items. By using this operation, the client can perform multiple <a>PutAttribute</a> operation with a single call. This helps yield savings in round trips and latencies, enabling Amazon SimpleDB to optimize requests and generally produce better throughput. </p> <p> The client may specify the item name with the <code>Item.X.ItemName</code> parameter. The client may specify new attributes using a combination of the <code>Item.X.Attribute.Y.Name</code> and <code>Item.X.Attribute.Y.Value</code> parameters. The client may specify the first attribute for the first item using the parameters <code>Item.0.Attribute.0.Name</code> and <code>Item.0.Attribute.0.Value</code>, and for the second attribute for the first item by the parameters <code>Item.0.Attribute.1.Name</code> and <code>Item.0.Attribute.1.Value</code>, and so on. </p> <p> Attributes are uniquely identified within an item by their name/value combination. For example, a single item can have the attributes <code>{ \"first_name\", \"first_value\" }</code> and <code>{ \"first_name\", \"second_value\" }</code>. However, it cannot have two attribute instances where both the <code>Item.X.Attribute.Y.Name</code> and <code>Item.X.Attribute.Y.Value</code> are the same. </p> <p> Optionally, the requester can supply the <code>Replace</code> parameter for each individual value. Setting this value to <code>true</code> will cause the new attribute values to replace the existing attribute values. For example, if an item <code>I</code> has the attributes <code>{ 'a', '1' }, { 'b', '2'}</code> and <code>{ 'b', '3' }</code> and the requester does a BatchPutAttributes of <code>{'I', 'b', '4' }</code> with the Replace parameter set to true, the final attributes of the item will be <code>{ 'a', '1' }</code> and <code>{ 'b', '4' }</code>, replacing the previous values of the 'b' attribute with the new value. </p> <important> This operation is vulnerable to exceeding the maximum URL size when making a REST request using the HTTP GET method. This operation does not support conditions using <code>Expected.X.Name</code>, <code>Expected.X.Value</code>, or <code>Expected.X.Exists</code>. </important> <p> You can execute multiple <code>BatchPutAttributes</code> operations and other operations in parallel. However, large numbers of concurrent <code>BatchPutAttributes</code> calls can result in Service Unavailable (503) responses. </p> <p> The following limitations are enforced for this operation: <ul> <li>256 attribute name-value pairs per item</li> <li>1 MB request size</li> <li>1 billion attributes per domain</li> <li>10 GB of total user data storage per domain</li> <li>25 item limit per <code>BatchPutAttributes</code> operation</li> </ul> </p>",
      "operationName" : "BatchPutAttributes",
      "deprecated" : false,
      "input" : {
        "variableName" : "batchPutAttributesRequest",
        "variableType" : "BatchPutAttributesRequest",
        "variableDeclarationType" : "BatchPutAttributesRequest",
        "documentation" : "",
        "simpleType" : "BatchPutAttributesRequest",
        "variableSetterType" : "BatchPutAttributesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "BatchPutAttributesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "DuplicateItemNameException",
        "documentation" : "<p>The item name was specified more than once. </p>"
      }, {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      }, {
        "exceptionName" : "NumberItemAttributesExceededException",
        "documentation" : "<p>Too many attributes in this item.</p>"
      }, {
        "exceptionName" : "NumberDomainAttributesExceededException",
        "documentation" : "<p>Too many attributes in this domain.</p>"
      }, {
        "exceptionName" : "NumberDomainBytesExceededException",
        "documentation" : "<p>Too many bytes in this domain.</p>"
      }, {
        "exceptionName" : "NumberSubmittedItemsExceededException",
        "documentation" : "<p>Too many items exist in a single call.</p>"
      }, {
        "exceptionName" : "NumberSubmittedAttributesExceededException",
        "documentation" : "<p>Too many attributes exist in a single call.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "batchPutAttributes",
      "syncReturnType" : "BatchPutAttributesResult",
      "asyncReturnType" : "BatchPutAttributesResult",
      "asyncFutureType" : "java.util.concurrent.Future<BatchPutAttributesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<BatchPutAttributesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchPutAttributesRequest, BatchPutAttributesResult>",
      "authenticated" : true
    },
    "CreateDomain" : {
      "documentation" : "<p> The <code>CreateDomain</code> operation creates a new domain. The domain name should be unique among the domains associated with the Access Key ID provided in the request. The <code>CreateDomain</code> operation may take 10 or more seconds to complete. </p> <p> The client can create up to 100 domains per account. </p> <p> If the client requires additional domains, go to <a href=\"http://aws.amazon.com/contact-us/simpledb-limit-request/\"> http://aws.amazon.com/contact-us/simpledb-limit-request/</a>. </p>",
      "operationName" : "CreateDomain",
      "deprecated" : false,
      "input" : {
        "variableName" : "createDomainRequest",
        "variableType" : "CreateDomainRequest",
        "variableDeclarationType" : "CreateDomainRequest",
        "documentation" : "",
        "simpleType" : "CreateDomainRequest",
        "variableSetterType" : "CreateDomainRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateDomainResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NumberDomainsExceededException",
        "documentation" : "<p>Too many domains exist per this account.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "createDomain",
      "syncReturnType" : "CreateDomainResult",
      "asyncReturnType" : "CreateDomainResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateDomainResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateDomainResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateDomainRequest, CreateDomainResult>",
      "authenticated" : true
    },
    "DeleteAttributes" : {
      "documentation" : "<p> Deletes one or more attributes associated with an item. If all attributes of the item are deleted, the item is deleted. </p> <p> <code>DeleteAttributes</code> is an idempotent operation; running it multiple times on the same item or attribute does not result in an error response. </p> <p> Because Amazon SimpleDB makes multiple copies of item data and uses an eventual consistency update model, performing a <a>GetAttributes</a> or <a>Select</a> operation (read) immediately after a <code>DeleteAttributes</code> or <a>PutAttributes</a> operation (write) might not return updated item data. </p>",
      "operationName" : "DeleteAttributes",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteAttributesRequest",
        "variableType" : "DeleteAttributesRequest",
        "variableDeclarationType" : "DeleteAttributesRequest",
        "documentation" : "",
        "simpleType" : "DeleteAttributesRequest",
        "variableSetterType" : "DeleteAttributesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteAttributesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      }, {
        "exceptionName" : "AttributeDoesNotExistException",
        "documentation" : "<p>The specified attribute does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "deleteAttributes",
      "syncReturnType" : "DeleteAttributesResult",
      "asyncReturnType" : "DeleteAttributesResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteAttributesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteAttributesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteAttributesRequest, DeleteAttributesResult>",
      "authenticated" : true
    },
    "DeleteDomain" : {
      "documentation" : "<p> The <code>DeleteDomain</code> operation deletes a domain. Any items (and their attributes) in the domain are deleted as well. The <code>DeleteDomain</code> operation might take 10 or more seconds to complete. </p>",
      "operationName" : "DeleteDomain",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteDomainRequest",
        "variableType" : "DeleteDomainRequest",
        "variableDeclarationType" : "DeleteDomainRequest",
        "documentation" : "",
        "simpleType" : "DeleteDomainRequest",
        "variableSetterType" : "DeleteDomainRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteDomainResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "deleteDomain",
      "syncReturnType" : "DeleteDomainResult",
      "asyncReturnType" : "DeleteDomainResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteDomainResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteDomainResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteDomainRequest, DeleteDomainResult>",
      "authenticated" : true
    },
    "DomainMetadata" : {
      "documentation" : "<p> Returns information about the domain, including when the domain was created, the number of items and attributes in the domain, and the size of the attribute names and values. </p>",
      "operationName" : "DomainMetadata",
      "deprecated" : false,
      "input" : {
        "variableName" : "domainMetadataRequest",
        "variableType" : "DomainMetadataRequest",
        "variableDeclarationType" : "DomainMetadataRequest",
        "documentation" : "",
        "simpleType" : "DomainMetadataRequest",
        "variableSetterType" : "DomainMetadataRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DomainMetadataResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "domainMetadata",
      "syncReturnType" : "DomainMetadataResult",
      "asyncReturnType" : "DomainMetadataResult",
      "asyncFutureType" : "java.util.concurrent.Future<DomainMetadataResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DomainMetadataResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DomainMetadataRequest, DomainMetadataResult>",
      "authenticated" : true
    },
    "GetAttributes" : {
      "documentation" : "<p> Returns all of the attributes associated with the specified item. Optionally, the attributes returned can be limited to one or more attributes by specifying an attribute name parameter. </p> <p> If the item does not exist on the replica that was accessed for this operation, an empty set is returned. The system does not return an error as it cannot guarantee the item does not exist on other replicas. </p>",
      "operationName" : "GetAttributes",
      "deprecated" : false,
      "input" : {
        "variableName" : "getAttributesRequest",
        "variableType" : "GetAttributesRequest",
        "variableDeclarationType" : "GetAttributesRequest",
        "documentation" : "",
        "simpleType" : "GetAttributesRequest",
        "variableSetterType" : "GetAttributesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetAttributesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "getAttributes",
      "syncReturnType" : "GetAttributesResult",
      "asyncReturnType" : "GetAttributesResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetAttributesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetAttributesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetAttributesRequest, GetAttributesResult>",
      "authenticated" : true
    },
    "ListDomains" : {
      "documentation" : "<p> The <code>ListDomains</code> operation lists all domains associated with the Access Key ID. It returns domain names up to the limit set by <a href=\"#MaxNumberOfDomains\">MaxNumberOfDomains</a>. A <a href=\"#NextToken\">NextToken</a> is returned if there are more than <code>MaxNumberOfDomains</code> domains. Calling <code>ListDomains</code> successive times with the <code>NextToken</code> provided by the operation returns up to <code>MaxNumberOfDomains</code> more domain names with each successive operation call. </p>",
      "operationName" : "ListDomains",
      "deprecated" : false,
      "input" : {
        "variableName" : "listDomainsRequest",
        "variableType" : "ListDomainsRequest",
        "variableDeclarationType" : "ListDomainsRequest",
        "documentation" : "",
        "simpleType" : "ListDomainsRequest",
        "variableSetterType" : "ListDomainsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListDomainsResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The specified NextToken is not valid. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "listDomains",
      "syncReturnType" : "ListDomainsResult",
      "asyncReturnType" : "ListDomainsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListDomainsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListDomainsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListDomainsRequest, ListDomainsResult>",
      "authenticated" : true
    },
    "PutAttributes" : {
      "documentation" : "<p> The PutAttributes operation creates or replaces attributes in an item. The client may specify new attributes using a combination of the <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> parameters. The client specifies the first attribute by the parameters <code>Attribute.0.Name</code> and <code>Attribute.0.Value</code>, the second attribute by the parameters <code>Attribute.1.Name</code> and <code>Attribute.1.Value</code>, and so on. </p> <p> Attributes are uniquely identified in an item by their name/value combination. For example, a single item can have the attributes <code>{ \"first_name\", \"first_value\" }</code> and <code>{ \"first_name\", second_value\" }</code>. However, it cannot have two attribute instances where both the <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> are the same. </p> <p> Optionally, the requestor can supply the <code>Replace</code> parameter for each individual attribute. Setting this value to <code>true</code> causes the new attribute value to replace the existing attribute value(s). For example, if an item has the attributes <code>{ 'a', '1' }</code>, <code>{ 'b', '2'}</code> and <code>{ 'b', '3' }</code> and the requestor calls <code>PutAttributes</code> using the attributes <code>{ 'b', '4' }</code> with the <code>Replace</code> parameter set to true, the final attributes of the item are changed to <code>{ 'a', '1' }</code> and <code>{ 'b', '4' }</code>, which replaces the previous values of the 'b' attribute with the new value. </p> <p> You cannot specify an empty string as an attribute name. </p> <p> Because Amazon SimpleDB makes multiple copies of client data and uses an eventual consistency update model, an immediate <a>GetAttributes</a> or <a>Select</a> operation (read) immediately after a <a>PutAttributes</a> or <a>DeleteAttributes</a> operation (write) might not return the updated data. </p> <p> The following limitations are enforced for this operation: <ul> <li>256 total attribute name-value pairs per item</li> <li>One billion attributes per domain</li> <li>10 GB of total user data storage per domain</li> </ul> </p>",
      "operationName" : "PutAttributes",
      "deprecated" : false,
      "input" : {
        "variableName" : "putAttributesRequest",
        "variableType" : "PutAttributesRequest",
        "variableDeclarationType" : "PutAttributesRequest",
        "documentation" : "",
        "simpleType" : "PutAttributesRequest",
        "variableSetterType" : "PutAttributesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "PutAttributesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      }, {
        "exceptionName" : "NumberDomainAttributesExceededException",
        "documentation" : "<p>Too many attributes in this domain.</p>"
      }, {
        "exceptionName" : "NumberDomainBytesExceededException",
        "documentation" : "<p>Too many bytes in this domain.</p>"
      }, {
        "exceptionName" : "NumberItemAttributesExceededException",
        "documentation" : "<p>Too many attributes in this item.</p>"
      }, {
        "exceptionName" : "AttributeDoesNotExistException",
        "documentation" : "<p>The specified attribute does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "putAttributes",
      "syncReturnType" : "PutAttributesResult",
      "asyncReturnType" : "PutAttributesResult",
      "asyncFutureType" : "java.util.concurrent.Future<PutAttributesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<PutAttributesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutAttributesRequest, PutAttributesResult>",
      "authenticated" : true
    },
    "Select" : {
      "documentation" : "<p> The <code>Select</code> operation returns a set of attributes for <code>ItemNames</code> that match the select expression. <code>Select</code> is similar to the standard SQL SELECT statement. </p> <p> The total size of the response cannot exceed 1 MB in total size. Amazon SimpleDB automatically adjusts the number of items returned per page to enforce this limit. For example, if the client asks to retrieve 2500 items, but each individual item is 10 kB in size, the system returns 100 items and an appropriate <code>NextToken</code> so the client can access the next page of results. </p> <p> For information on how to construct select expressions, see Using Select to Create Amazon SimpleDB Queries in the Developer Guide. </p>",
      "operationName" : "Select",
      "deprecated" : false,
      "input" : {
        "variableName" : "selectRequest",
        "variableType" : "SelectRequest",
        "variableDeclarationType" : "SelectRequest",
        "documentation" : "",
        "simpleType" : "SelectRequest",
        "variableSetterType" : "SelectRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "SelectResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterValueException",
        "documentation" : "<p>The value for a parameter is invalid.</p>"
      }, {
        "exceptionName" : "InvalidNextTokenException",
        "documentation" : "<p>The specified NextToken is not valid. </p>"
      }, {
        "exceptionName" : "InvalidNumberPredicatesException",
        "documentation" : "<p>Too many predicates exist in the query expression.</p>"
      }, {
        "exceptionName" : "InvalidNumberValueTestsException",
        "documentation" : "<p>Too many predicates exist in the query expression.</p>"
      }, {
        "exceptionName" : "InvalidQueryExpressionException",
        "documentation" : "<p>The specified query expression syntax is not valid.</p>"
      }, {
        "exceptionName" : "MissingParameterException",
        "documentation" : "<p>The request must contain the specified missing parameter.</p>"
      }, {
        "exceptionName" : "NoSuchDomainException",
        "documentation" : "<p>The specified domain does not exist.</p>"
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>A timeout occurred when attempting to query the specified domain with specified query expression.</p>"
      }, {
        "exceptionName" : "TooManyRequestedAttributesException",
        "documentation" : "<p>Too many attributes requested.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "methodName" : "select",
      "syncReturnType" : "SelectResult",
      "asyncReturnType" : "SelectResult",
      "asyncFutureType" : "java.util.concurrent.Future<SelectResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<SelectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SelectRequest, SelectResult>",
      "authenticated" : true
    }
  },
  "shapes" : {
    "NumberItemAttributesExceededException" : {
      "c2jName" : "NumberItemAttributesExceeded",
      "documentation" : "<p>Too many attributes in this item.</p>",
      "shapeName" : "NumberItemAttributesExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberItemAttributesExceededException",
        "variableType" : "NumberItemAttributesExceededException",
        "variableDeclarationType" : "NumberItemAttributesExceededException",
        "documentation" : null,
        "simpleType" : "NumberItemAttributesExceededException",
        "variableSetterType" : "NumberItemAttributesExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberItemAttributesExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutAttributesResult" : {
      "c2jName" : "PutAttributesResult",
      "documentation" : null,
      "shapeName" : "PutAttributesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "putAttributesResult",
        "variableType" : "PutAttributesResult",
        "variableDeclarationType" : "PutAttributesResult",
        "documentation" : null,
        "simpleType" : "PutAttributesResult",
        "variableSetterType" : "PutAttributesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListDomainsResult" : {
      "c2jName" : "ListDomainsResult",
      "documentation" : "",
      "shapeName" : "ListDomainsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "A list of domain names that match the expression.",
        "name" : "DomainNames",
        "c2jName" : "DomainNames",
        "c2jShape" : "DomainNameList",
        "variable" : {
          "variableName" : "domainNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "A list of domain names that match the expression.",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "domainNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainNames",
          "marshallLocationName" : "DomainNames",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : "DomainName",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "String",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "DomainName",
              "marshallLocationName" : "DomainName",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : true,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "simpleType" : "String",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of domain names that match the expression.\n@param domainNames A list of domain names that match the expression.*/",
        "getterDocumentation" : "/**A list of domain names that match the expression.\n@return A list of domain names that match the expression.*/",
        "fluentSetterDocumentation" : "/**A list of domain names that match the expression.\n@param domainNames A list of domain names that match the expression.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of domain names that match the expression.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDomainNames(java.util.Collection)} or {@link #withDomainNames(java.util.Collection)} if you want to override the existing values.</p>\n@param domainNames A list of domain names that match the expression.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.*/",
        "getterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.*/",
        "fluentSetterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listDomainsResult",
        "variableType" : "ListDomainsResult",
        "variableDeclarationType" : "ListDomainsResult",
        "documentation" : null,
        "simpleType" : "ListDomainsResult",
        "variableSetterType" : "ListDomainsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : "ListDomainsResult",
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.*/",
          "getterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.*/",
          "fluentSetterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@param nextToken An opaque token indicating that there are more domains than the specified <code>MaxNumberOfDomains</code> still available.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DomainNames" : {
          "documentation" : "A list of domain names that match the expression.",
          "name" : "DomainNames",
          "c2jName" : "DomainNames",
          "c2jShape" : "DomainNameList",
          "variable" : {
            "variableName" : "domainNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "A list of domain names that match the expression.",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "domainNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainNames",
            "marshallLocationName" : "DomainNames",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : "DomainName",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "String",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "DomainName",
                "marshallLocationName" : "DomainName",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : true,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "simpleType" : "String",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of domain names that match the expression.\n@param domainNames A list of domain names that match the expression.*/",
          "getterDocumentation" : "/**A list of domain names that match the expression.\n@return A list of domain names that match the expression.*/",
          "fluentSetterDocumentation" : "/**A list of domain names that match the expression.\n@param domainNames A list of domain names that match the expression.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of domain names that match the expression.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDomainNames(java.util.Collection)} or {@link #withDomainNames(java.util.Collection)} if you want to override the existing values.</p>\n@param domainNames A list of domain names that match the expression.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteAttributesResult" : {
      "c2jName" : "DeleteAttributesResult",
      "documentation" : null,
      "shapeName" : "DeleteAttributesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "deleteAttributesResult",
        "variableType" : "DeleteAttributesResult",
        "variableDeclarationType" : "DeleteAttributesResult",
        "documentation" : null,
        "simpleType" : "DeleteAttributesResult",
        "variableSetterType" : "DeleteAttributesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "Attribute" : {
      "c2jName" : "Attribute",
      "documentation" : "<p></p>",
      "shapeName" : "Attribute",
      "deprecated" : false,
      "required" : [ "Name", "Value" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the attribute.",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the attribute.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name",
          "marshallLocationName" : "Name",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.*/",
        "getterDocumentation" : "/**The name of the attribute.\n@return The name of the attribute.*/",
        "fluentSetterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p></p>",
        "name" : "AlternateNameEncoding",
        "c2jName" : "AlternateNameEncoding",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "alternateNameEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p></p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "alternateNameEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name/@encoding",
          "marshallLocationName" : "AlternateNameEncoding",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p></p>\n@param alternateNameEncoding */",
        "getterDocumentation" : "/**<p></p>\n@return */",
        "fluentSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The value of the attribute.",
        "name" : "Value",
        "c2jName" : "Value",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The value of the attribute.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Value",
          "marshallLocationName" : "Value",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.*/",
        "getterDocumentation" : "/**The value of the attribute.\n@return The value of the attribute.*/",
        "fluentSetterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p></p>",
        "name" : "AlternateValueEncoding",
        "c2jName" : "AlternateValueEncoding",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "alternateValueEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p></p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "alternateValueEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Value/@encoding",
          "marshallLocationName" : "AlternateValueEncoding",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p></p>\n@param alternateValueEncoding */",
        "getterDocumentation" : "/**<p></p>\n@return */",
        "fluentSetterDocumentation" : "/**<p></p>\n@param alternateValueEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p></p>\n@param alternateValueEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attribute",
        "variableType" : "Attribute",
        "variableDeclarationType" : "Attribute",
        "documentation" : null,
        "simpleType" : "Attribute",
        "variableSetterType" : "Attribute"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AlternateValueEncoding" : {
          "documentation" : "<p></p>",
          "name" : "AlternateValueEncoding",
          "c2jName" : "AlternateValueEncoding",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "alternateValueEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p></p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "alternateValueEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Value/@encoding",
            "marshallLocationName" : "AlternateValueEncoding",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p></p>\n@param alternateValueEncoding */",
          "getterDocumentation" : "/**<p></p>\n@return */",
          "fluentSetterDocumentation" : "/**<p></p>\n@param alternateValueEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p></p>\n@param alternateValueEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AlternateNameEncoding" : {
          "documentation" : "<p></p>",
          "name" : "AlternateNameEncoding",
          "c2jName" : "AlternateNameEncoding",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "alternateNameEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p></p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "alternateNameEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name/@encoding",
            "marshallLocationName" : "AlternateNameEncoding",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p></p>\n@param alternateNameEncoding */",
          "getterDocumentation" : "/**<p></p>\n@return */",
          "fluentSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Value" : {
          "documentation" : "The value of the attribute.",
          "name" : "Value",
          "c2jName" : "Value",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The value of the attribute.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Value",
            "marshallLocationName" : "Value",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.*/",
          "getterDocumentation" : "/**The value of the attribute.\n@return The value of the attribute.*/",
          "fluentSetterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The value of the attribute.\n@param value The value of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "The name of the attribute.",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the attribute.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name",
            "marshallLocationName" : "Name",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.*/",
          "getterDocumentation" : "/**The name of the attribute.\n@return The name of the attribute.*/",
          "fluentSetterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the attribute.\n@param name The name of the attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NumberSubmittedItemsExceededException" : {
      "c2jName" : "NumberSubmittedItemsExceeded",
      "documentation" : "<p>Too many items exist in a single call.</p>",
      "shapeName" : "NumberSubmittedItemsExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberSubmittedItemsExceededException",
        "variableType" : "NumberSubmittedItemsExceededException",
        "variableDeclarationType" : "NumberSubmittedItemsExceededException",
        "documentation" : null,
        "simpleType" : "NumberSubmittedItemsExceededException",
        "variableSetterType" : "NumberSubmittedItemsExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberSubmittedItemsExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidNumberPredicatesException" : {
      "c2jName" : "InvalidNumberPredicates",
      "documentation" : "<p>Too many predicates exist in the query expression.</p>",
      "shapeName" : "InvalidNumberPredicatesException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidNumberPredicatesException",
        "variableType" : "InvalidNumberPredicatesException",
        "variableDeclarationType" : "InvalidNumberPredicatesException",
        "documentation" : null,
        "simpleType" : "InvalidNumberPredicatesException",
        "variableSetterType" : "InvalidNumberPredicatesException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidNumberPredicates",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateDomainResult" : {
      "c2jName" : "CreateDomainResult",
      "documentation" : null,
      "shapeName" : "CreateDomainResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "createDomainResult",
        "variableType" : "CreateDomainResult",
        "variableDeclarationType" : "CreateDomainResult",
        "documentation" : null,
        "simpleType" : "CreateDomainResult",
        "variableSetterType" : "CreateDomainResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "BatchDeleteAttributesResult" : {
      "c2jName" : "BatchDeleteAttributesResult",
      "documentation" : null,
      "shapeName" : "BatchDeleteAttributesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "batchDeleteAttributesResult",
        "variableType" : "BatchDeleteAttributesResult",
        "variableDeclarationType" : "BatchDeleteAttributesResult",
        "documentation" : null,
        "simpleType" : "BatchDeleteAttributesResult",
        "variableSetterType" : "BatchDeleteAttributesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "NumberDomainBytesExceededException" : {
      "c2jName" : "NumberDomainBytesExceeded",
      "documentation" : "<p>Too many bytes in this domain.</p>",
      "shapeName" : "NumberDomainBytesExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberDomainBytesExceededException",
        "variableType" : "NumberDomainBytesExceededException",
        "variableDeclarationType" : "NumberDomainBytesExceededException",
        "documentation" : null,
        "simpleType" : "NumberDomainBytesExceededException",
        "variableSetterType" : "NumberDomainBytesExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberDomainBytesExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "BatchDeleteAttributesRequest" : {
      "c2jName" : "BatchDeleteAttributesRequest",
      "documentation" : "",
      "shapeName" : "BatchDeleteAttributesRequest",
      "deprecated" : false,
      "required" : [ "DomainName", "Items" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain in which the attributes are being deleted.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain in which the attributes are being deleted.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.*/",
        "getterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@return The name of the domain in which the attributes are being deleted.*/",
        "fluentSetterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A list of items on which to perform the operation.",
        "name" : "Items",
        "c2jName" : "Items",
        "c2jShape" : "DeletableItemList",
        "variable" : {
          "variableName" : "items",
          "variableType" : "java.util.List<DeletableItem>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>",
          "documentation" : "A list of items on which to perform the operation.",
          "simpleType" : "List<DeletableItem>",
          "variableSetterType" : "java.util.Collection<DeletableItem>"
        },
        "setterModel" : {
          "variableName" : "items",
          "variableType" : "java.util.List<DeletableItem>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>",
          "documentation" : "",
          "simpleType" : "List<DeletableItem>",
          "variableSetterType" : "java.util.Collection<DeletableItem>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<DeletableItem>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Items",
          "marshallLocationName" : "Items",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "DeletableItem",
          "memberLocationName" : "Item",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "DeletableItem",
            "variable" : {
              "variableName" : "member",
              "variableType" : "DeletableItem",
              "variableDeclarationType" : "DeletableItem",
              "documentation" : "",
              "simpleType" : "DeletableItem",
              "variableSetterType" : "DeletableItem"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "DeletableItem",
              "variableDeclarationType" : "DeletableItem",
              "documentation" : "",
              "simpleType" : "DeletableItem",
              "variableSetterType" : "DeletableItem"
            },
            "getterModel" : {
              "returnType" : "DeletableItem",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Item",
              "marshallLocationName" : "Item",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<DeletableItem>",
          "simpleType" : "DeletableItem",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.*/",
        "getterDocumentation" : "/**A list of items on which to perform the operation.\n@return A list of items on which to perform the operation.*/",
        "fluentSetterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of items on which to perform the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchDeleteAttributesRequest",
        "variableType" : "BatchDeleteAttributesRequest",
        "variableDeclarationType" : "BatchDeleteAttributesRequest",
        "documentation" : null,
        "simpleType" : "BatchDeleteAttributesRequest",
        "variableSetterType" : "BatchDeleteAttributesRequest"
      },
      "marshaller" : {
        "action" : "BatchDeleteAttributes",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain in which the attributes are being deleted.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain in which the attributes are being deleted.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.*/",
          "getterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@return The name of the domain in which the attributes are being deleted.*/",
          "fluentSetterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain in which the attributes are being deleted.\n@param domainName The name of the domain in which the attributes are being deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Items" : {
          "documentation" : "A list of items on which to perform the operation.",
          "name" : "Items",
          "c2jName" : "Items",
          "c2jShape" : "DeletableItemList",
          "variable" : {
            "variableName" : "items",
            "variableType" : "java.util.List<DeletableItem>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>",
            "documentation" : "A list of items on which to perform the operation.",
            "simpleType" : "List<DeletableItem>",
            "variableSetterType" : "java.util.Collection<DeletableItem>"
          },
          "setterModel" : {
            "variableName" : "items",
            "variableType" : "java.util.List<DeletableItem>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>",
            "documentation" : "",
            "simpleType" : "List<DeletableItem>",
            "variableSetterType" : "java.util.Collection<DeletableItem>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<DeletableItem>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Items",
            "marshallLocationName" : "Items",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "DeletableItem",
            "memberLocationName" : "Item",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "DeletableItem",
              "variable" : {
                "variableName" : "member",
                "variableType" : "DeletableItem",
                "variableDeclarationType" : "DeletableItem",
                "documentation" : "",
                "simpleType" : "DeletableItem",
                "variableSetterType" : "DeletableItem"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "DeletableItem",
                "variableDeclarationType" : "DeletableItem",
                "documentation" : "",
                "simpleType" : "DeletableItem",
                "variableSetterType" : "DeletableItem"
              },
              "getterModel" : {
                "returnType" : "DeletableItem",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Item",
                "marshallLocationName" : "Item",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<DeletableItem>",
            "simpleType" : "DeletableItem",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<DeletableItem>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.*/",
          "getterDocumentation" : "/**A list of items on which to perform the operation.\n@return A list of items on which to perform the operation.*/",
          "fluentSetterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of items on which to perform the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateDomainRequest" : {
      "c2jName" : "CreateDomainRequest",
      "documentation" : "",
      "shapeName" : "CreateDomainRequest",
      "deprecated" : false,
      "required" : [ "DomainName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.*/",
        "getterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.*/",
        "fluentSetterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createDomainRequest",
        "variableType" : "CreateDomainRequest",
        "variableDeclarationType" : "CreateDomainRequest",
        "documentation" : null,
        "simpleType" : "CreateDomainRequest",
        "variableSetterType" : "CreateDomainRequest"
      },
      "marshaller" : {
        "action" : "CreateDomain",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.*/",
          "getterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.*/",
          "fluentSetterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@param domainName The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AttributeDoesNotExistException" : {
      "c2jName" : "AttributeDoesNotExist",
      "documentation" : "<p>The specified attribute does not exist.</p>",
      "shapeName" : "AttributeDoesNotExistException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attributeDoesNotExistException",
        "variableType" : "AttributeDoesNotExistException",
        "variableDeclarationType" : "AttributeDoesNotExistException",
        "documentation" : null,
        "simpleType" : "AttributeDoesNotExistException",
        "variableSetterType" : "AttributeDoesNotExistException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "AttributeDoesNotExist",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NumberDomainsExceededException" : {
      "c2jName" : "NumberDomainsExceeded",
      "documentation" : "<p>Too many domains exist per this account.</p>",
      "shapeName" : "NumberDomainsExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberDomainsExceededException",
        "variableType" : "NumberDomainsExceededException",
        "variableDeclarationType" : "NumberDomainsExceededException",
        "documentation" : null,
        "simpleType" : "NumberDomainsExceededException",
        "variableSetterType" : "NumberDomainsExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberDomainsExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NoSuchDomainException" : {
      "c2jName" : "NoSuchDomain",
      "documentation" : "<p>The specified domain does not exist.</p>",
      "shapeName" : "NoSuchDomainException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "noSuchDomainException",
        "variableType" : "NoSuchDomainException",
        "variableDeclarationType" : "NoSuchDomainException",
        "documentation" : null,
        "simpleType" : "NoSuchDomainException",
        "variableSetterType" : "NoSuchDomainException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NoSuchDomain",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ReplaceableAttribute" : {
      "c2jName" : "ReplaceableAttribute",
      "documentation" : "<p></p>",
      "shapeName" : "ReplaceableAttribute",
      "deprecated" : false,
      "required" : [ "Name", "Value" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the replaceable attribute.",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the replaceable attribute.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name",
          "marshallLocationName" : "Name",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.*/",
        "getterDocumentation" : "/**The name of the replaceable attribute.\n@return The name of the replaceable attribute.*/",
        "fluentSetterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The value of the replaceable attribute.",
        "name" : "Value",
        "c2jName" : "Value",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The value of the replaceable attribute.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Value",
          "marshallLocationName" : "Value",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.*/",
        "getterDocumentation" : "/**The value of the replaceable attribute.\n@return The value of the replaceable attribute.*/",
        "fluentSetterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.",
        "name" : "Replace",
        "c2jName" : "Replace",
        "c2jShape" : "Boolean",
        "variable" : {
          "variableName" : "replace",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "replace",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Replace",
          "marshallLocationName" : "Replace",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.*/",
        "getterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.*/",
        "fluentSetterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "replaceableAttribute",
        "variableType" : "ReplaceableAttribute",
        "variableDeclarationType" : "ReplaceableAttribute",
        "documentation" : null,
        "simpleType" : "ReplaceableAttribute",
        "variableSetterType" : "ReplaceableAttribute"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Replace" : {
          "documentation" : "A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.",
          "name" : "Replace",
          "c2jName" : "Replace",
          "c2jShape" : "Boolean",
          "variable" : {
            "variableName" : "replace",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "replace",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Replace",
            "marshallLocationName" : "Replace",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.*/",
          "getterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.*/",
          "fluentSetterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@param replace A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Value" : {
          "documentation" : "The value of the replaceable attribute.",
          "name" : "Value",
          "c2jName" : "Value",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The value of the replaceable attribute.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Value",
            "marshallLocationName" : "Value",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.*/",
          "getterDocumentation" : "/**The value of the replaceable attribute.\n@return The value of the replaceable attribute.*/",
          "fluentSetterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The value of the replaceable attribute.\n@param value The value of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "The name of the replaceable attribute.",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the replaceable attribute.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name",
            "marshallLocationName" : "Name",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.*/",
          "getterDocumentation" : "/**The name of the replaceable attribute.\n@return The name of the replaceable attribute.*/",
          "fluentSetterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the replaceable attribute.\n@param name The name of the replaceable attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Item" : {
      "c2jName" : "Item",
      "documentation" : "<p></p>",
      "shapeName" : "Item",
      "deprecated" : false,
      "required" : [ "Name", "Attributes" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the item.",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the item.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name",
          "marshallLocationName" : "Name",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the item.\n@param name The name of the item.*/",
        "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
        "fluentSetterDocumentation" : "/**The name of the item.\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the item.\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p></p>",
        "name" : "AlternateNameEncoding",
        "c2jName" : "AlternateNameEncoding",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "alternateNameEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p></p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "alternateNameEncoding",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name/@encoding",
          "marshallLocationName" : "AlternateNameEncoding",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p></p>\n@param alternateNameEncoding */",
        "getterDocumentation" : "/**<p></p>\n@return */",
        "fluentSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A list of attributes.",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "AttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "A list of attributes.",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Attribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Attribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "getterModel" : {
              "returnType" : "Attribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Attribute>",
          "simpleType" : "Attribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of attributes.\n@param attributes A list of attributes.*/",
        "getterDocumentation" : "/**A list of attributes.\n@return A list of attributes.*/",
        "fluentSetterDocumentation" : "/**A list of attributes.\n@param attributes A list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "item",
        "variableType" : "Item",
        "variableDeclarationType" : "Item",
        "documentation" : null,
        "simpleType" : "Item",
        "variableSetterType" : "Item"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AlternateNameEncoding" : {
          "documentation" : "<p></p>",
          "name" : "AlternateNameEncoding",
          "c2jName" : "AlternateNameEncoding",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "alternateNameEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p></p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "alternateNameEncoding",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name/@encoding",
            "marshallLocationName" : "AlternateNameEncoding",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p></p>\n@param alternateNameEncoding */",
          "getterDocumentation" : "/**<p></p>\n@return */",
          "fluentSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p></p>\n@param alternateNameEncoding \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Attributes" : {
          "documentation" : "A list of attributes.",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "AttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "A list of attributes.",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Attribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Attribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "getterModel" : {
                "returnType" : "Attribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Attribute>",
            "simpleType" : "Attribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of attributes.\n@param attributes A list of attributes.*/",
          "getterDocumentation" : "/**A list of attributes.\n@return A list of attributes.*/",
          "fluentSetterDocumentation" : "/**A list of attributes.\n@param attributes A list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "The name of the item.",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the item.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name",
            "marshallLocationName" : "Name",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the item.\n@param name The name of the item.*/",
          "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
          "fluentSetterDocumentation" : "/**The name of the item.\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the item.\n@param name The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "RequestTimeoutException" : {
      "c2jName" : "RequestTimeout",
      "documentation" : "<p>A timeout occurred when attempting to query the specified domain with specified query expression.</p>",
      "shapeName" : "RequestTimeoutException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "requestTimeoutException",
        "variableType" : "RequestTimeoutException",
        "variableDeclarationType" : "RequestTimeoutException",
        "documentation" : null,
        "simpleType" : "RequestTimeoutException",
        "variableSetterType" : "RequestTimeoutException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "RequestTimeout",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidParameterValueException" : {
      "c2jName" : "InvalidParameterValue",
      "documentation" : "<p>The value for a parameter is invalid.</p>",
      "shapeName" : "InvalidParameterValueException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidParameterValueException",
        "variableType" : "InvalidParameterValueException",
        "variableDeclarationType" : "InvalidParameterValueException",
        "documentation" : null,
        "simpleType" : "InvalidParameterValueException",
        "variableSetterType" : "InvalidParameterValueException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidParameterValue",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListDomainsRequest" : {
      "c2jName" : "ListDomainsRequest",
      "documentation" : "",
      "shapeName" : "ListDomainsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.",
        "name" : "MaxNumberOfDomains",
        "c2jName" : "MaxNumberOfDomains",
        "c2jShape" : "Integer",
        "variable" : {
          "variableName" : "maxNumberOfDomains",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxNumberOfDomains",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MaxNumberOfDomains",
          "marshallLocationName" : "MaxNumberOfDomains",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.*/",
        "getterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.*/",
        "fluentSetterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A string informing Amazon SimpleDB where to start the next list of domain names.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A string informing Amazon SimpleDB where to start the next list of domain names.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.*/",
        "getterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@return A string informing Amazon SimpleDB where to start the next list of domain names.*/",
        "fluentSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listDomainsRequest",
        "variableType" : "ListDomainsRequest",
        "variableDeclarationType" : "ListDomainsRequest",
        "documentation" : null,
        "simpleType" : "ListDomainsRequest",
        "variableSetterType" : "ListDomainsRequest"
      },
      "marshaller" : {
        "action" : "ListDomains",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A string informing Amazon SimpleDB where to start the next list of domain names.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A string informing Amazon SimpleDB where to start the next list of domain names.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.*/",
          "getterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@return A string informing Amazon SimpleDB where to start the next list of domain names.*/",
          "fluentSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of domain names.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of domain names.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxNumberOfDomains" : {
          "documentation" : "The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.",
          "name" : "MaxNumberOfDomains",
          "c2jName" : "MaxNumberOfDomains",
          "c2jShape" : "Integer",
          "variable" : {
            "variableName" : "maxNumberOfDomains",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxNumberOfDomains",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MaxNumberOfDomains",
            "marshallLocationName" : "MaxNumberOfDomains",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.*/",
          "getterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.*/",
          "fluentSetterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@param maxNumberOfDomains The maximum number of domain names you want returned. The range is 1 to 100. The default setting is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteAttributesRequest" : {
      "c2jName" : "DeleteAttributesRequest",
      "documentation" : "",
      "shapeName" : "DeleteAttributesRequest",
      "deprecated" : false,
      "required" : [ "DomainName", "ItemName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain in which to perform the operation.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain in which to perform the operation.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
        "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
        "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.",
        "name" : "ItemName",
        "c2jName" : "ItemName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemName",
          "marshallLocationName" : "ItemName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.*/",
        "getterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.*/",
        "fluentSetterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "AttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Attribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Attribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "getterModel" : {
              "returnType" : "Attribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Attribute>",
          "simpleType" : "Attribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.*/",
        "getterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.*/",
        "fluentSetterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.",
        "name" : "Expected",
        "c2jName" : "Expected",
        "c2jShape" : "UpdateCondition",
        "variable" : {
          "variableName" : "expected",
          "variableType" : "UpdateCondition",
          "variableDeclarationType" : "UpdateCondition",
          "documentation" : "The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.",
          "simpleType" : "UpdateCondition",
          "variableSetterType" : "UpdateCondition"
        },
        "setterModel" : {
          "variableName" : "expected",
          "variableType" : "UpdateCondition",
          "variableDeclarationType" : "UpdateCondition",
          "documentation" : "",
          "simpleType" : "UpdateCondition",
          "variableSetterType" : "UpdateCondition"
        },
        "getterModel" : {
          "returnType" : "UpdateCondition",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Expected",
          "marshallLocationName" : "Expected",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.*/",
        "getterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.*/",
        "fluentSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteAttributesRequest",
        "variableType" : "DeleteAttributesRequest",
        "variableDeclarationType" : "DeleteAttributesRequest",
        "documentation" : null,
        "simpleType" : "DeleteAttributesRequest",
        "variableSetterType" : "DeleteAttributesRequest"
      },
      "marshaller" : {
        "action" : "DeleteAttributes",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Expected" : {
          "documentation" : "The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.",
          "name" : "Expected",
          "c2jName" : "Expected",
          "c2jShape" : "UpdateCondition",
          "variable" : {
            "variableName" : "expected",
            "variableType" : "UpdateCondition",
            "variableDeclarationType" : "UpdateCondition",
            "documentation" : "The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.",
            "simpleType" : "UpdateCondition",
            "variableSetterType" : "UpdateCondition"
          },
          "setterModel" : {
            "variableName" : "expected",
            "variableType" : "UpdateCondition",
            "variableDeclarationType" : "UpdateCondition",
            "documentation" : "",
            "simpleType" : "UpdateCondition",
            "variableSetterType" : "UpdateCondition"
          },
          "getterModel" : {
            "returnType" : "UpdateCondition",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Expected",
            "marshallLocationName" : "Expected",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.*/",
          "getterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.*/",
          "fluentSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@param expected The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DomainName" : {
          "documentation" : "The name of the domain in which to perform the operation.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain in which to perform the operation.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
          "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
          "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Attributes" : {
          "documentation" : "A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "AttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Attribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Attribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "getterModel" : {
                "returnType" : "Attribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Attribute>",
            "simpleType" : "Attribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.*/",
          "getterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.*/",
          "fluentSetterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ItemName" : {
          "documentation" : "The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.",
          "name" : "ItemName",
          "c2jName" : "ItemName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemName",
            "marshallLocationName" : "ItemName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.*/",
          "getterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.*/",
          "fluentSetterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@param itemName The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DuplicateItemNameException" : {
      "c2jName" : "DuplicateItemName",
      "documentation" : "<p>The item name was specified more than once. </p>",
      "shapeName" : "DuplicateItemNameException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "duplicateItemNameException",
        "variableType" : "DuplicateItemNameException",
        "variableDeclarationType" : "DuplicateItemNameException",
        "documentation" : null,
        "simpleType" : "DuplicateItemNameException",
        "variableSetterType" : "DuplicateItemNameException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DuplicateItemName",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "TooManyRequestedAttributesException" : {
      "c2jName" : "TooManyRequestedAttributes",
      "documentation" : "<p>Too many attributes requested.</p>",
      "shapeName" : "TooManyRequestedAttributesException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "tooManyRequestedAttributesException",
        "variableType" : "TooManyRequestedAttributesException",
        "variableDeclarationType" : "TooManyRequestedAttributesException",
        "documentation" : null,
        "simpleType" : "TooManyRequestedAttributesException",
        "variableSetterType" : "TooManyRequestedAttributesException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TooManyRequestedAttributes",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NumberSubmittedAttributesExceededException" : {
      "c2jName" : "NumberSubmittedAttributesExceeded",
      "documentation" : "<p>Too many attributes exist in a single call.</p>",
      "shapeName" : "NumberSubmittedAttributesExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberSubmittedAttributesExceededException",
        "variableType" : "NumberSubmittedAttributesExceededException",
        "variableDeclarationType" : "NumberSubmittedAttributesExceededException",
        "documentation" : null,
        "simpleType" : "NumberSubmittedAttributesExceededException",
        "variableSetterType" : "NumberSubmittedAttributesExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberSubmittedAttributesExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "BatchPutAttributesResult" : {
      "c2jName" : "BatchPutAttributesResult",
      "documentation" : null,
      "shapeName" : "BatchPutAttributesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "batchPutAttributesResult",
        "variableType" : "BatchPutAttributesResult",
        "variableDeclarationType" : "BatchPutAttributesResult",
        "documentation" : null,
        "simpleType" : "BatchPutAttributesResult",
        "variableSetterType" : "BatchPutAttributesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "SelectRequest" : {
      "c2jName" : "SelectRequest",
      "documentation" : "",
      "shapeName" : "SelectRequest",
      "deprecated" : false,
      "required" : [ "SelectExpression" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The expression used to query the domain.",
        "name" : "SelectExpression",
        "c2jName" : "SelectExpression",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "selectExpression",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The expression used to query the domain.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "selectExpression",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SelectExpression",
          "marshallLocationName" : "SelectExpression",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.*/",
        "getterDocumentation" : "/**The expression used to query the domain.\n@return The expression used to query the domain.*/",
        "fluentSetterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.*/",
        "getterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.*/",
        "fluentSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
        "name" : "ConsistentRead",
        "c2jName" : "ConsistentRead",
        "c2jShape" : "Boolean",
        "variable" : {
          "variableName" : "consistentRead",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "consistentRead",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ConsistentRead",
          "marshallLocationName" : "ConsistentRead",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
        "getterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
        "fluentSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "selectRequest",
        "variableType" : "SelectRequest",
        "variableDeclarationType" : "SelectRequest",
        "documentation" : null,
        "simpleType" : "SelectRequest",
        "variableSetterType" : "SelectRequest"
      },
      "marshaller" : {
        "action" : "Select",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.*/",
          "getterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.*/",
          "fluentSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@param nextToken A string informing Amazon SimpleDB where to start the next list of <code>ItemNames</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SelectExpression" : {
          "documentation" : "The expression used to query the domain.",
          "name" : "SelectExpression",
          "c2jName" : "SelectExpression",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "selectExpression",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The expression used to query the domain.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "selectExpression",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SelectExpression",
            "marshallLocationName" : "SelectExpression",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.*/",
          "getterDocumentation" : "/**The expression used to query the domain.\n@return The expression used to query the domain.*/",
          "fluentSetterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The expression used to query the domain.\n@param selectExpression The expression used to query the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConsistentRead" : {
          "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
          "name" : "ConsistentRead",
          "c2jName" : "ConsistentRead",
          "c2jShape" : "Boolean",
          "variable" : {
            "variableName" : "consistentRead",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "consistentRead",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ConsistentRead",
            "marshallLocationName" : "ConsistentRead",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
          "getterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
          "fluentSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateCondition" : {
      "c2jName" : "UpdateCondition",
      "documentation" : "<p> Specifies the conditions under which data should be updated. If an update condition is specified for a request, the data will only be updated if the condition is satisfied. For example, if an attribute with a specific name and value exists, or if a specific attribute doesn't exist. </p>",
      "shapeName" : "UpdateCondition",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The name of the attribute involved in the condition.</p>",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the attribute involved in the condition.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Name",
          "marshallLocationName" : "Name",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.*/",
        "getterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@return The name of the attribute involved in the condition.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>",
        "name" : "Value",
        "c2jName" : "Value",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Value",
          "marshallLocationName" : "Value",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.*/",
        "getterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@return The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>",
        "name" : "Exists",
        "c2jName" : "Exists",
        "c2jShape" : "Boolean",
        "variable" : {
          "variableName" : "exists",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "exists",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Exists",
          "marshallLocationName" : "Exists",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.*/",
        "getterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@return A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.*/",
        "fluentSetterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "updateCondition",
        "variableType" : "UpdateCondition",
        "variableDeclarationType" : "UpdateCondition",
        "documentation" : null,
        "simpleType" : "UpdateCondition",
        "variableSetterType" : "UpdateCondition"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Exists" : {
          "documentation" : "<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>",
          "name" : "Exists",
          "c2jName" : "Exists",
          "c2jShape" : "Boolean",
          "variable" : {
            "variableName" : "exists",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "exists",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Exists",
            "marshallLocationName" : "Exists",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.*/",
          "getterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@return A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.*/",
          "fluentSetterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</p>\n@param exists A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Value" : {
          "documentation" : "<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>",
          "name" : "Value",
          "c2jName" : "Value",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Value",
            "marshallLocationName" : "Value",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.*/",
          "getterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@return The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</p>\n@param value The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "<p>The name of the attribute involved in the condition.</p>",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the attribute involved in the condition.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Name",
            "marshallLocationName" : "Name",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.*/",
          "getterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@return The name of the attribute involved in the condition.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the attribute involved in the condition.</p>\n@param name The name of the attribute involved in the condition.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DomainMetadataResult" : {
      "c2jName" : "DomainMetadataResult",
      "documentation" : "",
      "shapeName" : "DomainMetadataResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The number of all items in the domain.",
        "name" : "ItemCount",
        "c2jName" : "ItemCount",
        "c2jShape" : "Integer",
        "variable" : {
          "variableName" : "itemCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The number of all items in the domain.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "itemCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemCount",
          "marshallLocationName" : "ItemCount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.*/",
        "getterDocumentation" : "/**The number of all items in the domain.\n@return The number of all items in the domain.*/",
        "fluentSetterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The total size of all item names in the domain, in bytes.",
        "name" : "ItemNamesSizeBytes",
        "c2jName" : "ItemNamesSizeBytes",
        "c2jShape" : "Long",
        "variable" : {
          "variableName" : "itemNamesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "The total size of all item names in the domain, in bytes.",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "itemNamesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemNamesSizeBytes",
          "marshallLocationName" : "ItemNamesSizeBytes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.*/",
        "getterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@return The total size of all item names in the domain, in bytes.*/",
        "fluentSetterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The number of unique attribute names in the domain.",
        "name" : "AttributeNameCount",
        "c2jName" : "AttributeNameCount",
        "c2jShape" : "Integer",
        "variable" : {
          "variableName" : "attributeNameCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The number of unique attribute names in the domain.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "attributeNameCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeNameCount",
          "marshallLocationName" : "AttributeNameCount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.*/",
        "getterDocumentation" : "/**The number of unique attribute names in the domain.\n@return The number of unique attribute names in the domain.*/",
        "fluentSetterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The total size of all unique attribute names in the domain, in bytes.",
        "name" : "AttributeNamesSizeBytes",
        "c2jName" : "AttributeNamesSizeBytes",
        "c2jShape" : "Long",
        "variable" : {
          "variableName" : "attributeNamesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "The total size of all unique attribute names in the domain, in bytes.",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "attributeNamesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeNamesSizeBytes",
          "marshallLocationName" : "AttributeNamesSizeBytes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.*/",
        "getterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@return The total size of all unique attribute names in the domain, in bytes.*/",
        "fluentSetterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The number of all attribute name/value pairs in the domain.",
        "name" : "AttributeValueCount",
        "c2jName" : "AttributeValueCount",
        "c2jShape" : "Integer",
        "variable" : {
          "variableName" : "attributeValueCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The number of all attribute name/value pairs in the domain.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "attributeValueCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeValueCount",
          "marshallLocationName" : "AttributeValueCount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.*/",
        "getterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@return The number of all attribute name/value pairs in the domain.*/",
        "fluentSetterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The total size of all attribute values in the domain, in bytes.",
        "name" : "AttributeValuesSizeBytes",
        "c2jName" : "AttributeValuesSizeBytes",
        "c2jShape" : "Long",
        "variable" : {
          "variableName" : "attributeValuesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "The total size of all attribute values in the domain, in bytes.",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "attributeValuesSizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeValuesSizeBytes",
          "marshallLocationName" : "AttributeValuesSizeBytes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.*/",
        "getterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@return The total size of all attribute values in the domain, in bytes.*/",
        "fluentSetterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The data and time when metadata was calculated, in Epoch (UNIX) seconds.",
        "name" : "Timestamp",
        "c2jName" : "Timestamp",
        "c2jShape" : "Integer",
        "variable" : {
          "variableName" : "timestamp",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The data and time when metadata was calculated, in Epoch (UNIX) seconds.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "timestamp",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Timestamp",
          "marshallLocationName" : "Timestamp",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.*/",
        "getterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return The data and time when metadata was calculated, in Epoch (UNIX) seconds.*/",
        "fluentSetterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "domainMetadataResult",
        "variableType" : "DomainMetadataResult",
        "variableDeclarationType" : "DomainMetadataResult",
        "documentation" : null,
        "simpleType" : "DomainMetadataResult",
        "variableSetterType" : "DomainMetadataResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : "DomainMetadataResult",
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AttributeValueCount" : {
          "documentation" : "The number of all attribute name/value pairs in the domain.",
          "name" : "AttributeValueCount",
          "c2jName" : "AttributeValueCount",
          "c2jShape" : "Integer",
          "variable" : {
            "variableName" : "attributeValueCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The number of all attribute name/value pairs in the domain.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "attributeValueCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeValueCount",
            "marshallLocationName" : "AttributeValueCount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.*/",
          "getterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@return The number of all attribute name/value pairs in the domain.*/",
          "fluentSetterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The number of all attribute name/value pairs in the domain.\n@param attributeValueCount The number of all attribute name/value pairs in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ItemNamesSizeBytes" : {
          "documentation" : "The total size of all item names in the domain, in bytes.",
          "name" : "ItemNamesSizeBytes",
          "c2jName" : "ItemNamesSizeBytes",
          "c2jShape" : "Long",
          "variable" : {
            "variableName" : "itemNamesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "The total size of all item names in the domain, in bytes.",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "itemNamesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemNamesSizeBytes",
            "marshallLocationName" : "ItemNamesSizeBytes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.*/",
          "getterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@return The total size of all item names in the domain, in bytes.*/",
          "fluentSetterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The total size of all item names in the domain, in bytes.\n@param itemNamesSizeBytes The total size of all item names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeNameCount" : {
          "documentation" : "The number of unique attribute names in the domain.",
          "name" : "AttributeNameCount",
          "c2jName" : "AttributeNameCount",
          "c2jShape" : "Integer",
          "variable" : {
            "variableName" : "attributeNameCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The number of unique attribute names in the domain.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "attributeNameCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeNameCount",
            "marshallLocationName" : "AttributeNameCount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.*/",
          "getterDocumentation" : "/**The number of unique attribute names in the domain.\n@return The number of unique attribute names in the domain.*/",
          "fluentSetterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The number of unique attribute names in the domain.\n@param attributeNameCount The number of unique attribute names in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ItemCount" : {
          "documentation" : "The number of all items in the domain.",
          "name" : "ItemCount",
          "c2jName" : "ItemCount",
          "c2jShape" : "Integer",
          "variable" : {
            "variableName" : "itemCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The number of all items in the domain.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "itemCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemCount",
            "marshallLocationName" : "ItemCount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.*/",
          "getterDocumentation" : "/**The number of all items in the domain.\n@return The number of all items in the domain.*/",
          "fluentSetterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The number of all items in the domain.\n@param itemCount The number of all items in the domain.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeNamesSizeBytes" : {
          "documentation" : "The total size of all unique attribute names in the domain, in bytes.",
          "name" : "AttributeNamesSizeBytes",
          "c2jName" : "AttributeNamesSizeBytes",
          "c2jShape" : "Long",
          "variable" : {
            "variableName" : "attributeNamesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "The total size of all unique attribute names in the domain, in bytes.",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "attributeNamesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeNamesSizeBytes",
            "marshallLocationName" : "AttributeNamesSizeBytes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.*/",
          "getterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@return The total size of all unique attribute names in the domain, in bytes.*/",
          "fluentSetterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The total size of all unique attribute names in the domain, in bytes.\n@param attributeNamesSizeBytes The total size of all unique attribute names in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeValuesSizeBytes" : {
          "documentation" : "The total size of all attribute values in the domain, in bytes.",
          "name" : "AttributeValuesSizeBytes",
          "c2jName" : "AttributeValuesSizeBytes",
          "c2jShape" : "Long",
          "variable" : {
            "variableName" : "attributeValuesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "The total size of all attribute values in the domain, in bytes.",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "attributeValuesSizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeValuesSizeBytes",
            "marshallLocationName" : "AttributeValuesSizeBytes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.*/",
          "getterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@return The total size of all attribute values in the domain, in bytes.*/",
          "fluentSetterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The total size of all attribute values in the domain, in bytes.\n@param attributeValuesSizeBytes The total size of all attribute values in the domain, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Timestamp" : {
          "documentation" : "The data and time when metadata was calculated, in Epoch (UNIX) seconds.",
          "name" : "Timestamp",
          "c2jName" : "Timestamp",
          "c2jShape" : "Integer",
          "variable" : {
            "variableName" : "timestamp",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The data and time when metadata was calculated, in Epoch (UNIX) seconds.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "timestamp",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Timestamp",
            "marshallLocationName" : "Timestamp",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.*/",
          "getterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return The data and time when metadata was calculated, in Epoch (UNIX) seconds.*/",
          "fluentSetterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@param timestamp The data and time when metadata was calculated, in Epoch (UNIX) seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidQueryExpressionException" : {
      "c2jName" : "InvalidQueryExpression",
      "documentation" : "<p>The specified query expression syntax is not valid.</p>",
      "shapeName" : "InvalidQueryExpressionException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidQueryExpressionException",
        "variableType" : "InvalidQueryExpressionException",
        "variableDeclarationType" : "InvalidQueryExpressionException",
        "documentation" : null,
        "simpleType" : "InvalidQueryExpressionException",
        "variableSetterType" : "InvalidQueryExpressionException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidQueryExpression",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeletableItem" : {
      "c2jName" : "DeletableItem",
      "documentation" : "",
      "shapeName" : "DeletableItem",
      "deprecated" : false,
      "required" : [ "Name" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemName",
          "marshallLocationName" : "ItemName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param name */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param name \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param name \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "AttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Attribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Attribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "getterModel" : {
              "returnType" : "Attribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Attribute>",
          "simpleType" : "Attribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param attributes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param attributes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deletableItem",
        "variableType" : "DeletableItem",
        "variableDeclarationType" : "DeletableItem",
        "documentation" : null,
        "simpleType" : "DeletableItem",
        "variableSetterType" : "DeletableItem"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "AttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Attribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Attribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "getterModel" : {
                "returnType" : "Attribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Attribute>",
            "simpleType" : "Attribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param attributes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param attributes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemName",
            "marshallLocationName" : "ItemName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param name */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param name \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param name \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "BatchPutAttributesRequest" : {
      "c2jName" : "BatchPutAttributesRequest",
      "documentation" : "",
      "shapeName" : "BatchPutAttributesRequest",
      "deprecated" : false,
      "required" : [ "DomainName", "Items" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain in which the attributes are being stored.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain in which the attributes are being stored.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.*/",
        "getterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@return The name of the domain in which the attributes are being stored.*/",
        "fluentSetterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A list of items on which to perform the operation.",
        "name" : "Items",
        "c2jName" : "Items",
        "c2jShape" : "ReplaceableItemList",
        "variable" : {
          "variableName" : "items",
          "variableType" : "java.util.List<ReplaceableItem>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>",
          "documentation" : "A list of items on which to perform the operation.",
          "simpleType" : "List<ReplaceableItem>",
          "variableSetterType" : "java.util.Collection<ReplaceableItem>"
        },
        "setterModel" : {
          "variableName" : "items",
          "variableType" : "java.util.List<ReplaceableItem>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>",
          "documentation" : "",
          "simpleType" : "List<ReplaceableItem>",
          "variableSetterType" : "java.util.Collection<ReplaceableItem>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ReplaceableItem>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Items",
          "marshallLocationName" : "Items",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ReplaceableItem",
          "memberLocationName" : "Item",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ReplaceableItem",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ReplaceableItem",
              "variableDeclarationType" : "ReplaceableItem",
              "documentation" : "",
              "simpleType" : "ReplaceableItem",
              "variableSetterType" : "ReplaceableItem"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ReplaceableItem",
              "variableDeclarationType" : "ReplaceableItem",
              "documentation" : "",
              "simpleType" : "ReplaceableItem",
              "variableSetterType" : "ReplaceableItem"
            },
            "getterModel" : {
              "returnType" : "ReplaceableItem",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Item",
              "marshallLocationName" : "Item",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ReplaceableItem>",
          "simpleType" : "ReplaceableItem",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.*/",
        "getterDocumentation" : "/**A list of items on which to perform the operation.\n@return A list of items on which to perform the operation.*/",
        "fluentSetterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of items on which to perform the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchPutAttributesRequest",
        "variableType" : "BatchPutAttributesRequest",
        "variableDeclarationType" : "BatchPutAttributesRequest",
        "documentation" : null,
        "simpleType" : "BatchPutAttributesRequest",
        "variableSetterType" : "BatchPutAttributesRequest"
      },
      "marshaller" : {
        "action" : "BatchPutAttributes",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain in which the attributes are being stored.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain in which the attributes are being stored.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.*/",
          "getterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@return The name of the domain in which the attributes are being stored.*/",
          "fluentSetterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain in which the attributes are being stored.\n@param domainName The name of the domain in which the attributes are being stored.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Items" : {
          "documentation" : "A list of items on which to perform the operation.",
          "name" : "Items",
          "c2jName" : "Items",
          "c2jShape" : "ReplaceableItemList",
          "variable" : {
            "variableName" : "items",
            "variableType" : "java.util.List<ReplaceableItem>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>",
            "documentation" : "A list of items on which to perform the operation.",
            "simpleType" : "List<ReplaceableItem>",
            "variableSetterType" : "java.util.Collection<ReplaceableItem>"
          },
          "setterModel" : {
            "variableName" : "items",
            "variableType" : "java.util.List<ReplaceableItem>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>",
            "documentation" : "",
            "simpleType" : "List<ReplaceableItem>",
            "variableSetterType" : "java.util.Collection<ReplaceableItem>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ReplaceableItem>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Items",
            "marshallLocationName" : "Items",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ReplaceableItem",
            "memberLocationName" : "Item",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ReplaceableItem",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ReplaceableItem",
                "variableDeclarationType" : "ReplaceableItem",
                "documentation" : "",
                "simpleType" : "ReplaceableItem",
                "variableSetterType" : "ReplaceableItem"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ReplaceableItem",
                "variableDeclarationType" : "ReplaceableItem",
                "documentation" : "",
                "simpleType" : "ReplaceableItem",
                "variableSetterType" : "ReplaceableItem"
              },
              "getterModel" : {
                "returnType" : "ReplaceableItem",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Item",
                "marshallLocationName" : "Item",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ReplaceableItem>",
            "simpleType" : "ReplaceableItem",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableItem>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.*/",
          "getterDocumentation" : "/**A list of items on which to perform the operation.\n@return A list of items on which to perform the operation.*/",
          "fluentSetterDocumentation" : "/**A list of items on which to perform the operation.\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of items on which to perform the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items on which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ReplaceableItem" : {
      "c2jName" : "ReplaceableItem",
      "documentation" : "<p></p>",
      "shapeName" : "ReplaceableItem",
      "deprecated" : false,
      "required" : [ "Name", "Attributes" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the replaceable item.",
        "name" : "Name",
        "c2jName" : "Name",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the replaceable item.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "name",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemName",
          "marshallLocationName" : "ItemName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.*/",
        "getterDocumentation" : "/**The name of the replaceable item.\n@return The name of the replaceable item.*/",
        "fluentSetterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The list of attributes for a replaceable item.",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "ReplaceableAttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<ReplaceableAttribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
          "documentation" : "The list of attributes for a replaceable item.",
          "simpleType" : "List<ReplaceableAttribute>",
          "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<ReplaceableAttribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
          "documentation" : "",
          "simpleType" : "List<ReplaceableAttribute>",
          "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ReplaceableAttribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ReplaceableAttribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ReplaceableAttribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ReplaceableAttribute",
              "variableDeclarationType" : "ReplaceableAttribute",
              "documentation" : "",
              "simpleType" : "ReplaceableAttribute",
              "variableSetterType" : "ReplaceableAttribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ReplaceableAttribute",
              "variableDeclarationType" : "ReplaceableAttribute",
              "documentation" : "",
              "simpleType" : "ReplaceableAttribute",
              "variableSetterType" : "ReplaceableAttribute"
            },
            "getterModel" : {
              "returnType" : "ReplaceableAttribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ReplaceableAttribute>",
          "simpleType" : "ReplaceableAttribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**The list of attributes for a replaceable item.\n@param attributes The list of attributes for a replaceable item.*/",
        "getterDocumentation" : "/**The list of attributes for a replaceable item.\n@return The list of attributes for a replaceable item.*/",
        "fluentSetterDocumentation" : "/**The list of attributes for a replaceable item.\n@param attributes The list of attributes for a replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The list of attributes for a replaceable item.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes for a replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "replaceableItem",
        "variableType" : "ReplaceableItem",
        "variableDeclarationType" : "ReplaceableItem",
        "documentation" : null,
        "simpleType" : "ReplaceableItem",
        "variableSetterType" : "ReplaceableItem"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "The list of attributes for a replaceable item.",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "ReplaceableAttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<ReplaceableAttribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
            "documentation" : "The list of attributes for a replaceable item.",
            "simpleType" : "List<ReplaceableAttribute>",
            "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<ReplaceableAttribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
            "documentation" : "",
            "simpleType" : "List<ReplaceableAttribute>",
            "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ReplaceableAttribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ReplaceableAttribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ReplaceableAttribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ReplaceableAttribute",
                "variableDeclarationType" : "ReplaceableAttribute",
                "documentation" : "",
                "simpleType" : "ReplaceableAttribute",
                "variableSetterType" : "ReplaceableAttribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ReplaceableAttribute",
                "variableDeclarationType" : "ReplaceableAttribute",
                "documentation" : "",
                "simpleType" : "ReplaceableAttribute",
                "variableSetterType" : "ReplaceableAttribute"
              },
              "getterModel" : {
                "returnType" : "ReplaceableAttribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ReplaceableAttribute>",
            "simpleType" : "ReplaceableAttribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**The list of attributes for a replaceable item.\n@param attributes The list of attributes for a replaceable item.*/",
          "getterDocumentation" : "/**The list of attributes for a replaceable item.\n@return The list of attributes for a replaceable item.*/",
          "fluentSetterDocumentation" : "/**The list of attributes for a replaceable item.\n@param attributes The list of attributes for a replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The list of attributes for a replaceable item.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes for a replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Name" : {
          "documentation" : "The name of the replaceable item.",
          "name" : "Name",
          "c2jName" : "Name",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the replaceable item.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "name",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemName",
            "marshallLocationName" : "ItemName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.*/",
          "getterDocumentation" : "/**The name of the replaceable item.\n@return The name of the replaceable item.*/",
          "fluentSetterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the replaceable item.\n@param name The name of the replaceable item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetAttributesResult" : {
      "c2jName" : "GetAttributesResult",
      "documentation" : "",
      "shapeName" : "GetAttributesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The list of attributes returned by the operation.",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "AttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "The list of attributes returned by the operation.",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<Attribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
          "documentation" : "",
          "simpleType" : "List<Attribute>",
          "variableSetterType" : "java.util.Collection<Attribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Attribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Attribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Attribute",
              "variableDeclarationType" : "Attribute",
              "documentation" : "",
              "simpleType" : "Attribute",
              "variableSetterType" : "Attribute"
            },
            "getterModel" : {
              "returnType" : "Attribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Attribute>",
          "simpleType" : "Attribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**The list of attributes returned by the operation.\n@param attributes The list of attributes returned by the operation.*/",
        "getterDocumentation" : "/**The list of attributes returned by the operation.\n@return The list of attributes returned by the operation.*/",
        "fluentSetterDocumentation" : "/**The list of attributes returned by the operation.\n@param attributes The list of attributes returned by the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The list of attributes returned by the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes returned by the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getAttributesResult",
        "variableType" : "GetAttributesResult",
        "variableDeclarationType" : "GetAttributesResult",
        "documentation" : null,
        "simpleType" : "GetAttributesResult",
        "variableSetterType" : "GetAttributesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : "GetAttributesResult",
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "The list of attributes returned by the operation.",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "AttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "The list of attributes returned by the operation.",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<Attribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Attribute>",
            "documentation" : "",
            "simpleType" : "List<Attribute>",
            "variableSetterType" : "java.util.Collection<Attribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Attribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Attribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Attribute",
                "variableDeclarationType" : "Attribute",
                "documentation" : "",
                "simpleType" : "Attribute",
                "variableSetterType" : "Attribute"
              },
              "getterModel" : {
                "returnType" : "Attribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Attribute>",
            "simpleType" : "Attribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Attribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**The list of attributes returned by the operation.\n@param attributes The list of attributes returned by the operation.*/",
          "getterDocumentation" : "/**The list of attributes returned by the operation.\n@return The list of attributes returned by the operation.*/",
          "fluentSetterDocumentation" : "/**The list of attributes returned by the operation.\n@param attributes The list of attributes returned by the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The list of attributes returned by the operation.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes returned by the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DomainMetadataRequest" : {
      "c2jName" : "DomainMetadataRequest",
      "documentation" : "",
      "shapeName" : "DomainMetadataRequest",
      "deprecated" : false,
      "required" : [ "DomainName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain for which to display the metadata of.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain for which to display the metadata of.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.*/",
        "getterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@return The name of the domain for which to display the metadata of.*/",
        "fluentSetterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "domainMetadataRequest",
        "variableType" : "DomainMetadataRequest",
        "variableDeclarationType" : "DomainMetadataRequest",
        "documentation" : null,
        "simpleType" : "DomainMetadataRequest",
        "variableSetterType" : "DomainMetadataRequest"
      },
      "marshaller" : {
        "action" : "DomainMetadata",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain for which to display the metadata of.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain for which to display the metadata of.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.*/",
          "getterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@return The name of the domain for which to display the metadata of.*/",
          "fluentSetterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain for which to display the metadata of.\n@param domainName The name of the domain for which to display the metadata of.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NumberDomainAttributesExceededException" : {
      "c2jName" : "NumberDomainAttributesExceeded",
      "documentation" : "<p>Too many attributes in this domain.</p>",
      "shapeName" : "NumberDomainAttributesExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "numberDomainAttributesExceededException",
        "variableType" : "NumberDomainAttributesExceededException",
        "variableDeclarationType" : "NumberDomainAttributesExceededException",
        "documentation" : null,
        "simpleType" : "NumberDomainAttributesExceededException",
        "variableSetterType" : "NumberDomainAttributesExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NumberDomainAttributesExceeded",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SelectResult" : {
      "c2jName" : "SelectResult",
      "documentation" : "",
      "shapeName" : "SelectResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "A list of items that match the select expression.",
        "name" : "Items",
        "c2jName" : "Items",
        "c2jShape" : "ItemList",
        "variable" : {
          "variableName" : "items",
          "variableType" : "java.util.List<Item>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Item>",
          "documentation" : "A list of items that match the select expression.",
          "simpleType" : "List<Item>",
          "variableSetterType" : "java.util.Collection<Item>"
        },
        "setterModel" : {
          "variableName" : "items",
          "variableType" : "java.util.List<Item>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Item>",
          "documentation" : "",
          "simpleType" : "List<Item>",
          "variableSetterType" : "java.util.Collection<Item>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Item>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Items",
          "marshallLocationName" : "Items",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Item",
          "memberLocationName" : "Item",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Item",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Item",
              "variableDeclarationType" : "Item",
              "documentation" : "",
              "simpleType" : "Item",
              "variableSetterType" : "Item"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Item",
              "variableDeclarationType" : "Item",
              "documentation" : "",
              "simpleType" : "Item",
              "variableSetterType" : "Item"
            },
            "getterModel" : {
              "returnType" : "Item",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Item",
              "marshallLocationName" : "Item",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Item>",
          "simpleType" : "Item",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Item>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A list of items that match the select expression.\n@param items A list of items that match the select expression.*/",
        "getterDocumentation" : "/**A list of items that match the select expression.\n@return A list of items that match the select expression.*/",
        "fluentSetterDocumentation" : "/**A list of items that match the select expression.\n@param items A list of items that match the select expression.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A list of items that match the select expression.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items that match the select expression.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.*/",
        "getterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.*/",
        "fluentSetterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "selectResult",
        "variableType" : "SelectResult",
        "variableDeclarationType" : "SelectResult",
        "documentation" : null,
        "simpleType" : "SelectResult",
        "variableSetterType" : "SelectResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : "SelectResult",
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.*/",
          "getterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.*/",
          "fluentSetterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@param nextToken An opaque token indicating that more items than <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Items" : {
          "documentation" : "A list of items that match the select expression.",
          "name" : "Items",
          "c2jName" : "Items",
          "c2jShape" : "ItemList",
          "variable" : {
            "variableName" : "items",
            "variableType" : "java.util.List<Item>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Item>",
            "documentation" : "A list of items that match the select expression.",
            "simpleType" : "List<Item>",
            "variableSetterType" : "java.util.Collection<Item>"
          },
          "setterModel" : {
            "variableName" : "items",
            "variableType" : "java.util.List<Item>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Item>",
            "documentation" : "",
            "simpleType" : "List<Item>",
            "variableSetterType" : "java.util.Collection<Item>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Item>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Items",
            "marshallLocationName" : "Items",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Item",
            "memberLocationName" : "Item",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Item",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Item",
                "variableDeclarationType" : "Item",
                "documentation" : "",
                "simpleType" : "Item",
                "variableSetterType" : "Item"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Item",
                "variableDeclarationType" : "Item",
                "documentation" : "",
                "simpleType" : "Item",
                "variableSetterType" : "Item"
              },
              "getterModel" : {
                "returnType" : "Item",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Item",
                "marshallLocationName" : "Item",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Item>",
            "simpleType" : "Item",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Item>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A list of items that match the select expression.\n@param items A list of items that match the select expression.*/",
          "getterDocumentation" : "/**A list of items that match the select expression.\n@return A list of items that match the select expression.*/",
          "fluentSetterDocumentation" : "/**A list of items that match the select expression.\n@param items A list of items that match the select expression.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A list of items that match the select expression.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setItems(java.util.Collection)} or {@link #withItems(java.util.Collection)} if you want to override the existing values.</p>\n@param items A list of items that match the select expression.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidNumberValueTestsException" : {
      "c2jName" : "InvalidNumberValueTests",
      "documentation" : "<p>Too many predicates exist in the query expression.</p>",
      "shapeName" : "InvalidNumberValueTestsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidNumberValueTestsException",
        "variableType" : "InvalidNumberValueTestsException",
        "variableDeclarationType" : "InvalidNumberValueTestsException",
        "documentation" : null,
        "simpleType" : "InvalidNumberValueTestsException",
        "variableSetterType" : "InvalidNumberValueTestsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidNumberValueTests",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteDomainResult" : {
      "c2jName" : "DeleteDomainResult",
      "documentation" : null,
      "shapeName" : "DeleteDomainResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "deleteDomainResult",
        "variableType" : "DeleteDomainResult",
        "variableDeclarationType" : "DeleteDomainResult",
        "documentation" : null,
        "simpleType" : "DeleteDomainResult",
        "variableSetterType" : "DeleteDomainResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeleteDomainRequest" : {
      "c2jName" : "DeleteDomainRequest",
      "documentation" : "",
      "shapeName" : "DeleteDomainRequest",
      "deprecated" : false,
      "required" : [ "DomainName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain to delete.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain to delete.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.*/",
        "getterDocumentation" : "/**The name of the domain to delete.\n@return The name of the domain to delete.*/",
        "fluentSetterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteDomainRequest",
        "variableType" : "DeleteDomainRequest",
        "variableDeclarationType" : "DeleteDomainRequest",
        "documentation" : null,
        "simpleType" : "DeleteDomainRequest",
        "variableSetterType" : "DeleteDomainRequest"
      },
      "marshaller" : {
        "action" : "DeleteDomain",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain to delete.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain to delete.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.*/",
          "getterDocumentation" : "/**The name of the domain to delete.\n@return The name of the domain to delete.*/",
          "fluentSetterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain to delete.\n@param domainName The name of the domain to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidNextTokenException" : {
      "c2jName" : "InvalidNextToken",
      "documentation" : "<p>The specified NextToken is not valid. </p>",
      "shapeName" : "InvalidNextTokenException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidNextTokenException",
        "variableType" : "InvalidNextTokenException",
        "variableDeclarationType" : "InvalidNextTokenException",
        "documentation" : null,
        "simpleType" : "InvalidNextTokenException",
        "variableSetterType" : "InvalidNextTokenException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidNextToken",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MissingParameterException" : {
      "c2jName" : "MissingParameter",
      "documentation" : "<p>The request must contain the specified missing parameter.</p>",
      "shapeName" : "MissingParameterException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "BoxUsage",
        "c2jName" : "BoxUsage",
        "c2jShape" : "Float",
        "variable" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "setterModel" : {
          "variableName" : "boxUsage",
          "variableType" : "Float",
          "variableDeclarationType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BoxUsage",
          "marshallLocationName" : "BoxUsage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param boxUsage */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "missingParameterException",
        "variableType" : "MissingParameterException",
        "variableDeclarationType" : "MissingParameterException",
        "documentation" : null,
        "simpleType" : "MissingParameterException",
        "variableSetterType" : "MissingParameterException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "MissingParameter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "BoxUsage" : {
          "documentation" : "",
          "name" : "BoxUsage",
          "c2jName" : "BoxUsage",
          "c2jShape" : "Float",
          "variable" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "setterModel" : {
            "variableName" : "boxUsage",
            "variableType" : "Float",
            "variableDeclarationType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BoxUsage",
            "marshallLocationName" : "BoxUsage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param boxUsage */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param boxUsage \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutAttributesRequest" : {
      "c2jName" : "PutAttributesRequest",
      "documentation" : "",
      "shapeName" : "PutAttributesRequest",
      "deprecated" : false,
      "required" : [ "DomainName", "ItemName", "Attributes" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain in which to perform the operation.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain in which to perform the operation.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
        "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
        "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The name of the item.",
        "name" : "ItemName",
        "c2jName" : "ItemName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the item.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemName",
          "marshallLocationName" : "ItemName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.*/",
        "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
        "fluentSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The list of attributes.",
        "name" : "Attributes",
        "c2jName" : "Attributes",
        "c2jShape" : "ReplaceableAttributeList",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<ReplaceableAttribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
          "documentation" : "The list of attributes.",
          "simpleType" : "List<ReplaceableAttribute>",
          "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.List<ReplaceableAttribute>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
          "documentation" : "",
          "simpleType" : "List<ReplaceableAttribute>",
          "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ReplaceableAttribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Attributes",
          "marshallLocationName" : "Attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ReplaceableAttribute",
          "memberLocationName" : "Attribute",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ReplaceableAttribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ReplaceableAttribute",
              "variableDeclarationType" : "ReplaceableAttribute",
              "documentation" : "",
              "simpleType" : "ReplaceableAttribute",
              "variableSetterType" : "ReplaceableAttribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ReplaceableAttribute",
              "variableDeclarationType" : "ReplaceableAttribute",
              "documentation" : "",
              "simpleType" : "ReplaceableAttribute",
              "variableSetterType" : "ReplaceableAttribute"
            },
            "getterModel" : {
              "returnType" : "ReplaceableAttribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "Attribute",
              "marshallLocationName" : "Attribute",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ReplaceableAttribute>",
          "simpleType" : "ReplaceableAttribute",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**The list of attributes.\n@param attributes The list of attributes.*/",
        "getterDocumentation" : "/**The list of attributes.\n@return The list of attributes.*/",
        "fluentSetterDocumentation" : "/**The list of attributes.\n@param attributes The list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The list of attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.",
        "name" : "Expected",
        "c2jName" : "Expected",
        "c2jShape" : "UpdateCondition",
        "variable" : {
          "variableName" : "expected",
          "variableType" : "UpdateCondition",
          "variableDeclarationType" : "UpdateCondition",
          "documentation" : "The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.",
          "simpleType" : "UpdateCondition",
          "variableSetterType" : "UpdateCondition"
        },
        "setterModel" : {
          "variableName" : "expected",
          "variableType" : "UpdateCondition",
          "variableDeclarationType" : "UpdateCondition",
          "documentation" : "",
          "simpleType" : "UpdateCondition",
          "variableSetterType" : "UpdateCondition"
        },
        "getterModel" : {
          "returnType" : "UpdateCondition",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Expected",
          "marshallLocationName" : "Expected",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.*/",
        "getterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.*/",
        "fluentSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putAttributesRequest",
        "variableType" : "PutAttributesRequest",
        "variableDeclarationType" : "PutAttributesRequest",
        "documentation" : null,
        "simpleType" : "PutAttributesRequest",
        "variableSetterType" : "PutAttributesRequest"
      },
      "marshaller" : {
        "action" : "PutAttributes",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Expected" : {
          "documentation" : "The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.",
          "name" : "Expected",
          "c2jName" : "Expected",
          "c2jShape" : "UpdateCondition",
          "variable" : {
            "variableName" : "expected",
            "variableType" : "UpdateCondition",
            "variableDeclarationType" : "UpdateCondition",
            "documentation" : "The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.",
            "simpleType" : "UpdateCondition",
            "variableSetterType" : "UpdateCondition"
          },
          "setterModel" : {
            "variableName" : "expected",
            "variableType" : "UpdateCondition",
            "variableDeclarationType" : "UpdateCondition",
            "documentation" : "",
            "simpleType" : "UpdateCondition",
            "variableSetterType" : "UpdateCondition"
          },
          "getterModel" : {
            "returnType" : "UpdateCondition",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Expected",
            "marshallLocationName" : "Expected",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.*/",
          "getterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.*/",
          "fluentSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@param expected The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DomainName" : {
          "documentation" : "The name of the domain in which to perform the operation.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain in which to perform the operation.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
          "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
          "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Attributes" : {
          "documentation" : "The list of attributes.",
          "name" : "Attributes",
          "c2jName" : "Attributes",
          "c2jShape" : "ReplaceableAttributeList",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<ReplaceableAttribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
            "documentation" : "The list of attributes.",
            "simpleType" : "List<ReplaceableAttribute>",
            "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.List<ReplaceableAttribute>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>",
            "documentation" : "",
            "simpleType" : "List<ReplaceableAttribute>",
            "variableSetterType" : "java.util.Collection<ReplaceableAttribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ReplaceableAttribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Attributes",
            "marshallLocationName" : "Attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ReplaceableAttribute",
            "memberLocationName" : "Attribute",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ReplaceableAttribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ReplaceableAttribute",
                "variableDeclarationType" : "ReplaceableAttribute",
                "documentation" : "",
                "simpleType" : "ReplaceableAttribute",
                "variableSetterType" : "ReplaceableAttribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ReplaceableAttribute",
                "variableDeclarationType" : "ReplaceableAttribute",
                "documentation" : "",
                "simpleType" : "ReplaceableAttribute",
                "variableSetterType" : "ReplaceableAttribute"
              },
              "getterModel" : {
                "returnType" : "ReplaceableAttribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "Attribute",
                "marshallLocationName" : "Attribute",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ReplaceableAttribute>",
            "simpleType" : "ReplaceableAttribute",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<ReplaceableAttribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**The list of attributes.\n@param attributes The list of attributes.*/",
          "getterDocumentation" : "/**The list of attributes.\n@return The list of attributes.*/",
          "fluentSetterDocumentation" : "/**The list of attributes.\n@param attributes The list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The list of attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes The list of attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ItemName" : {
          "documentation" : "The name of the item.",
          "name" : "ItemName",
          "c2jName" : "ItemName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the item.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemName",
            "marshallLocationName" : "ItemName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.*/",
          "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
          "fluentSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetAttributesRequest" : {
      "c2jName" : "GetAttributesRequest",
      "documentation" : "",
      "shapeName" : "GetAttributesRequest",
      "deprecated" : false,
      "required" : [ "DomainName", "ItemName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "The name of the domain in which to perform the operation.",
        "name" : "DomainName",
        "c2jName" : "DomainName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the domain in which to perform the operation.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "domainName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DomainName",
          "marshallLocationName" : "DomainName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
        "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
        "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The name of the item.",
        "name" : "ItemName",
        "c2jName" : "ItemName",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "The name of the item.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "itemName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ItemName",
          "marshallLocationName" : "ItemName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.*/",
        "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
        "fluentSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The names of the attributes.",
        "name" : "AttributeNames",
        "c2jName" : "AttributeNames",
        "c2jShape" : "AttributeNameList",
        "variable" : {
          "variableName" : "attributeNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "The names of the attributes.",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "attributeNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeNames",
          "marshallLocationName" : "AttributeNames",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : true,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : "AttributeName",
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "String",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "AttributeName",
              "marshallLocationName" : "AttributeName",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "simple" : true,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "simpleType" : "String",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**The names of the attributes.\n@param attributeNames The names of the attributes.*/",
        "getterDocumentation" : "/**The names of the attributes.\n@return The names of the attributes.*/",
        "fluentSetterDocumentation" : "/**The names of the attributes.\n@param attributeNames The names of the attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The names of the attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributeNames(java.util.Collection)} or {@link #withAttributeNames(java.util.Collection)} if you want to override the existing values.</p>\n@param attributeNames The names of the attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
        "name" : "ConsistentRead",
        "c2jName" : "ConsistentRead",
        "c2jShape" : "Boolean",
        "variable" : {
          "variableName" : "consistentRead",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "consistentRead",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ConsistentRead",
          "marshallLocationName" : "ConsistentRead",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
        "getterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
        "fluentSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getAttributesRequest",
        "variableType" : "GetAttributesRequest",
        "variableDeclarationType" : "GetAttributesRequest",
        "documentation" : null,
        "simpleType" : "GetAttributesRequest",
        "variableSetterType" : "GetAttributesRequest"
      },
      "marshaller" : {
        "action" : "GetAttributes",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DomainName" : {
          "documentation" : "The name of the domain in which to perform the operation.",
          "name" : "DomainName",
          "c2jName" : "DomainName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the domain in which to perform the operation.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "domainName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DomainName",
            "marshallLocationName" : "DomainName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.*/",
          "getterDocumentation" : "/**The name of the domain in which to perform the operation.\n@return The name of the domain in which to perform the operation.*/",
          "fluentSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the domain in which to perform the operation.\n@param domainName The name of the domain in which to perform the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ItemName" : {
          "documentation" : "The name of the item.",
          "name" : "ItemName",
          "c2jName" : "ItemName",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "The name of the item.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "itemName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ItemName",
            "marshallLocationName" : "ItemName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.*/",
          "getterDocumentation" : "/**The name of the item.\n@return The name of the item.*/",
          "fluentSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The name of the item.\n@param itemName The name of the item.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeNames" : {
          "documentation" : "The names of the attributes.",
          "name" : "AttributeNames",
          "c2jName" : "AttributeNames",
          "c2jShape" : "AttributeNameList",
          "variable" : {
            "variableName" : "attributeNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "The names of the attributes.",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "attributeNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeNames",
            "marshallLocationName" : "AttributeNames",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : true,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : "AttributeName",
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "String",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "AttributeName",
                "marshallLocationName" : "AttributeName",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "simple" : true,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "simpleType" : "String",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**The names of the attributes.\n@param attributeNames The names of the attributes.*/",
          "getterDocumentation" : "/**The names of the attributes.\n@return The names of the attributes.*/",
          "fluentSetterDocumentation" : "/**The names of the attributes.\n@param attributeNames The names of the attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The names of the attributes.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributeNames(java.util.Collection)} or {@link #withAttributeNames(java.util.Collection)} if you want to override the existing values.</p>\n@param attributeNames The names of the attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConsistentRead" : {
          "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
          "name" : "ConsistentRead",
          "c2jName" : "ConsistentRead",
          "c2jShape" : "Boolean",
          "variable" : {
            "variableName" : "consistentRead",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "consistentRead",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ConsistentRead",
            "marshallLocationName" : "ConsistentRead",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
          "getterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.*/",
          "fluentSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@param consistentRead Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : true,
    "useAutoConstructMap" : true,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : "LegacyErrorUnmarshaller",
    "customClientConfigFactory" : null,
    "customResponseMetadataClassName" : "SimpleDBResponseMetadata",
    "skipInterfaceAdditions" : true,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : {
      "BatchPutAttributesRequest" : {
        "constructorForms" : [ [ "DomainName", "Items" ] ]
      },
      "BatchDeleteAttributesRequest" : {
        "constructorForms" : [ [ "DomainName", "Items" ] ]
      },
      "CreateDomainRequest" : {
        "constructorForms" : [ [ "DomainName" ] ]
      },
      "DeleteDomainRequest" : {
        "constructorForms" : [ [ "DomainName" ] ]
      },
      "Attribute" : {
        "constructorForms" : [ [ "Name", "Value" ] ]
      },
      "Item" : {
        "constructorForms" : [ [ "Name", "Attributes" ] ]
      },
      "DeletableItem" : {
        "constructorForms" : [ [ "Name", "Attributes" ] ]
      },
      "GetAttributesRequest" : {
        "constructorForms" : [ [ "DomainName", "ItemName" ] ]
      },
      "SelectRequest" : {
        "constructorForms" : [ [ "SelectExpression" ], [ "SelectExpression", "ConsistentRead" ] ]
      },
      "DomainMetadataRequest" : {
        "constructorForms" : [ [ "DomainName" ] ]
      },
      "PutAttributesRequest" : {
        "constructorForms" : [ [ "DomainName", "ItemName", "Attributes" ], [ "DomainName", "ItemName", "Attributes", "Expected" ] ]
      },
      "ReplaceableAttribute" : {
        "constructorForms" : [ [ "Name", "Value", "Replace" ] ]
      },
      "ReplaceableItem" : {
        "constructorForms" : [ [ "Name" ], [ "Name", "Attributes" ] ]
      },
      "UpdateCondition" : {
        "constructorForms" : [ [ "Name", "Value", "Exists" ] ]
      },
      "DeleteAttributesRequest" : {
        "constructorForms" : [ [ "DomainName", "ItemName" ], [ "DomainName", "ItemName", "Attributes" ], [ "DomainName", "ItemName", "Attributes", "Expected" ] ]
      }
    },
    "simpleMethods" : {
      "ListDomains" : {
        "methodForms" : [ [ ] ]
      }
    },
    "renameShapes" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "authPolicyActions" : {
      "skip" : false,
      "actionPrefix" : null,
      "fileNamePrefix" : "SimpleDB"
    },
    "customServiceMetadata" : null,
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : {
      "Attribute" : {
        "excludeShape" : false,
        "exclude" : null,
        "modify" : [ {
          "AlternateNameEncoding" : {
            "emitPropertyName" : null,
            "emitEnumName" : null,
            "marshallLocationName" : null,
            "unmarshallLocationName" : "Name/@encoding"
          }
        }, {
          "AlternateValueEncoding" : {
            "emitPropertyName" : null,
            "emitEnumName" : null,
            "marshallLocationName" : null,
            "unmarshallLocationName" : "Value/@encoding"
          }
        } ],
        "inject" : null
      },
      "Item" : {
        "excludeShape" : false,
        "exclude" : null,
        "modify" : [ {
          "AlternateNameEncoding" : {
            "emitPropertyName" : null,
            "emitEnumName" : null,
            "marshallLocationName" : null,
            "unmarshallLocationName" : "Name/@encoding"
          }
        } ],
        "inject" : null
      }
    },
    "customErrorCodeFieldName" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "customSignerProvider" : null,
    "calculateCRC32FromCompressedData" : false,
    "customFileHeader" : null,
    "convenienceTypeOverloads" : [ ],
    "skipSmokeTests" : false
  },
  "examples" : {
    "version" : "1.0",
    "operationExamples" : { }
  },
  "exceptionUnmarshallerImpl" : "LegacyErrorUnmarshaller",
  "clientConfigFactory" : "ClientConfigurationFactory",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.simpledb.model.AmazonSimpleDBException",
  "fileHeader" : "/*\n * Copyright 2011-2016 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "sdkModeledExceptionBaseClassName" : "AmazonSimpleDBException"
}