{
  "metadata" : {
    "apiVersion" : "2015-09-21",
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<p>Amazon EC2 Container Registry (Amazon ECR) is a managed AWS Docker registry service. Customers can use the familiar Docker CLI to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry. Amazon ECR supports private Docker repositories with resource-based permissions using AWS IAM so that specific users or Amazon EC2 instances can access repositories and images. Developers can use the Docker CLI to author and manage images.</p>",
    "defaultEndpoint" : "ecr.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "ecr.us-east-1.amazonaws.com",
    "syncInterface" : "AmazonECR",
    "syncClient" : "AmazonECRClient",
    "asyncInterface" : "AmazonECRAsync",
    "asyncClient" : "AmazonECRAsyncClient",
    "packageName" : "com.amazonaws.services.ecr",
    "packagePath" : "com/amazonaws/services/ecr",
    "serviceAbbreviation" : "Amazon ECR",
    "serviceFullName" : "Amazon EC2 Container Registry",
    "hasApiWithStreamInput" : false,
    "contentType" : null,
    "jsonVersion" : "1.1",
    "endpointPrefix" : "ecr",
    "signingName" : "ecr",
    "xmlProtocol" : false,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "jsonProtocol" : true,
    "syncClientBuilderClassName" : "AmazonECRClientBuilder",
    "asyncClientBuilderClassName" : "AmazonECRAsyncClientBuilder",
    "cucumberModuleInjectorClassName" : "AmazonECRModuleInjector",
    "smokeTestsPackageName" : "com.amazonaws.services.ecr.smoketests",
    "serviceName" : "Amazon ECR",
    "cborProtocol" : false,
    "protocolDefaultExceptionUmarshallerImpl" : null
  },
  "operations" : {
    "BatchCheckLayerAvailability" : {
      "documentation" : "<p>Check the availability of multiple image layers in a specified registry and repository.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "BatchCheckLayerAvailability",
      "deprecated" : false,
      "input" : {
        "variableName" : "batchCheckLayerAvailabilityRequest",
        "variableType" : "BatchCheckLayerAvailabilityRequest",
        "variableDeclarationType" : "BatchCheckLayerAvailabilityRequest",
        "documentation" : "",
        "simpleType" : "BatchCheckLayerAvailabilityRequest",
        "variableSetterType" : "BatchCheckLayerAvailabilityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "BatchCheckLayerAvailabilityResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "BatchCheckLayerAvailabilityResult",
      "asyncReturnType" : "BatchCheckLayerAvailabilityResult",
      "asyncFutureType" : "java.util.concurrent.Future<BatchCheckLayerAvailabilityResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<BatchCheckLayerAvailabilityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchCheckLayerAvailabilityRequest, BatchCheckLayerAvailabilityResult>",
      "authenticated" : true,
      "methodName" : "batchCheckLayerAvailability"
    },
    "BatchDeleteImage" : {
      "documentation" : "<p>Deletes a list of specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "operationName" : "BatchDeleteImage",
      "deprecated" : false,
      "input" : {
        "variableName" : "batchDeleteImageRequest",
        "variableType" : "BatchDeleteImageRequest",
        "variableDeclarationType" : "BatchDeleteImageRequest",
        "documentation" : "<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>",
        "simpleType" : "BatchDeleteImageRequest",
        "variableSetterType" : "BatchDeleteImageRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "BatchDeleteImageResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "BatchDeleteImageResult",
      "asyncReturnType" : "BatchDeleteImageResult",
      "asyncFutureType" : "java.util.concurrent.Future<BatchDeleteImageResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<BatchDeleteImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchDeleteImageRequest, BatchDeleteImageResult>",
      "authenticated" : true,
      "methodName" : "batchDeleteImage"
    },
    "BatchGetImage" : {
      "documentation" : "<p>Gets detailed information for specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "operationName" : "BatchGetImage",
      "deprecated" : false,
      "input" : {
        "variableName" : "batchGetImageRequest",
        "variableType" : "BatchGetImageRequest",
        "variableDeclarationType" : "BatchGetImageRequest",
        "documentation" : "",
        "simpleType" : "BatchGetImageRequest",
        "variableSetterType" : "BatchGetImageRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "BatchGetImageResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "BatchGetImageResult",
      "asyncReturnType" : "BatchGetImageResult",
      "asyncFutureType" : "java.util.concurrent.Future<BatchGetImageResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<BatchGetImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchGetImageRequest, BatchGetImageResult>",
      "authenticated" : true,
      "methodName" : "batchGetImage"
    },
    "CompleteLayerUpload" : {
      "documentation" : "<p>Inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed. You can optionally provide a <code>sha256</code> digest of the image layer for data validation purposes.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "CompleteLayerUpload",
      "deprecated" : false,
      "input" : {
        "variableName" : "completeLayerUploadRequest",
        "variableType" : "CompleteLayerUploadRequest",
        "variableDeclarationType" : "CompleteLayerUploadRequest",
        "documentation" : "",
        "simpleType" : "CompleteLayerUploadRequest",
        "variableSetterType" : "CompleteLayerUploadRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CompleteLayerUploadResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "UploadNotFoundException",
        "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>"
      }, {
        "exceptionName" : "InvalidLayerException",
        "documentation" : "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>"
      }, {
        "exceptionName" : "LayerPartTooSmallException",
        "documentation" : "<p>Layer parts must be at least 5 MiB in size.</p>"
      }, {
        "exceptionName" : "LayerAlreadyExistsException",
        "documentation" : "<p>The image layer already exists in the associated repository.</p>"
      }, {
        "exceptionName" : "EmptyUploadException",
        "documentation" : "<p>The specified layer upload does not contain any layer parts.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "CompleteLayerUploadResult",
      "asyncReturnType" : "CompleteLayerUploadResult",
      "asyncFutureType" : "java.util.concurrent.Future<CompleteLayerUploadResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CompleteLayerUploadResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CompleteLayerUploadRequest, CompleteLayerUploadResult>",
      "authenticated" : true,
      "methodName" : "completeLayerUpload"
    },
    "CreateRepository" : {
      "documentation" : "<p>Creates an image repository.</p>",
      "operationName" : "CreateRepository",
      "deprecated" : false,
      "input" : {
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "variableDeclarationType" : "CreateRepositoryRequest",
        "documentation" : "",
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateRepositoryResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryAlreadyExistsException",
        "documentation" : "<p>The specified repository already exists in the specified registry.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "CreateRepositoryResult",
      "asyncReturnType" : "CreateRepositoryResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateRepositoryResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateRepositoryRequest, CreateRepositoryResult>",
      "authenticated" : true,
      "methodName" : "createRepository"
    },
    "DeleteRepository" : {
      "documentation" : "<p>Deletes an existing image repository. If a repository contains images, you must use the <code>force</code> option to delete it.</p>",
      "operationName" : "DeleteRepository",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "documentation" : "",
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteRepositoryResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "RepositoryNotEmptyException",
        "documentation" : "<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "DeleteRepositoryResult",
      "asyncReturnType" : "DeleteRepositoryResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryRequest, DeleteRepositoryResult>",
      "authenticated" : true,
      "methodName" : "deleteRepository"
    },
    "DeleteRepositoryPolicy" : {
      "documentation" : "<p>Deletes the repository policy from a specified repository.</p>",
      "operationName" : "DeleteRepositoryPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteRepositoryPolicyRequest",
        "variableType" : "DeleteRepositoryPolicyRequest",
        "variableDeclarationType" : "DeleteRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "DeleteRepositoryPolicyRequest",
        "variableSetterType" : "DeleteRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteRepositoryPolicyResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "RepositoryPolicyNotFoundException",
        "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "DeleteRepositoryPolicyResult",
      "asyncReturnType" : "DeleteRepositoryPolicyResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryPolicyResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryPolicyRequest, DeleteRepositoryPolicyResult>",
      "authenticated" : true,
      "methodName" : "deleteRepositoryPolicy"
    },
    "DescribeRepositories" : {
      "documentation" : "<p>Describes image repositories in a registry.</p>",
      "operationName" : "DescribeRepositories",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeRepositoriesRequest",
        "variableType" : "DescribeRepositoriesRequest",
        "variableDeclarationType" : "DescribeRepositoriesRequest",
        "documentation" : "",
        "simpleType" : "DescribeRepositoriesRequest",
        "variableSetterType" : "DescribeRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeRepositoriesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "DescribeRepositoriesResult",
      "asyncReturnType" : "DescribeRepositoriesResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeRepositoriesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeRepositoriesRequest, DescribeRepositoriesResult>",
      "authenticated" : true,
      "methodName" : "describeRepositories"
    },
    "GetAuthorizationToken" : {
      "documentation" : "<p>Retrieves a token that is valid for a specified registry for 12 hours. This command allows you to use the <code>docker</code> CLI to push and pull images with Amazon ECR. If you do not specify a registry, the default registry is assumed.</p> <p>The <code>authorizationToken</code> returned for each registry specified is a base64 encoded string that can be decoded and used in a <code>docker login</code> command to authenticate to a registry. The AWS CLI offers an <code>aws ecr get-login</code> command that simplifies the login process.</p>",
      "operationName" : "GetAuthorizationToken",
      "deprecated" : false,
      "input" : {
        "variableName" : "getAuthorizationTokenRequest",
        "variableType" : "GetAuthorizationTokenRequest",
        "variableDeclarationType" : "GetAuthorizationTokenRequest",
        "documentation" : "",
        "simpleType" : "GetAuthorizationTokenRequest",
        "variableSetterType" : "GetAuthorizationTokenRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetAuthorizationTokenResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "GetAuthorizationTokenResult",
      "asyncReturnType" : "GetAuthorizationTokenResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetAuthorizationTokenResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetAuthorizationTokenResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetAuthorizationTokenRequest, GetAuthorizationTokenResult>",
      "authenticated" : true,
      "methodName" : "getAuthorizationToken"
    },
    "GetDownloadUrlForLayer" : {
      "documentation" : "<p>Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "GetDownloadUrlForLayer",
      "deprecated" : false,
      "input" : {
        "variableName" : "getDownloadUrlForLayerRequest",
        "variableType" : "GetDownloadUrlForLayerRequest",
        "variableDeclarationType" : "GetDownloadUrlForLayerRequest",
        "documentation" : "",
        "simpleType" : "GetDownloadUrlForLayerRequest",
        "variableSetterType" : "GetDownloadUrlForLayerRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetDownloadUrlForLayerResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "LayersNotFoundException",
        "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>"
      }, {
        "exceptionName" : "LayerInaccessibleException",
        "documentation" : "<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "GetDownloadUrlForLayerResult",
      "asyncReturnType" : "GetDownloadUrlForLayerResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetDownloadUrlForLayerResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetDownloadUrlForLayerResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetDownloadUrlForLayerRequest, GetDownloadUrlForLayerResult>",
      "authenticated" : true,
      "methodName" : "getDownloadUrlForLayer"
    },
    "GetRepositoryPolicy" : {
      "documentation" : "<p>Retrieves the repository policy for a specified repository.</p>",
      "operationName" : "GetRepositoryPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "getRepositoryPolicyRequest",
        "variableType" : "GetRepositoryPolicyRequest",
        "variableDeclarationType" : "GetRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "GetRepositoryPolicyRequest",
        "variableSetterType" : "GetRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetRepositoryPolicyResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "RepositoryPolicyNotFoundException",
        "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "GetRepositoryPolicyResult",
      "asyncReturnType" : "GetRepositoryPolicyResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryPolicyResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryPolicyRequest, GetRepositoryPolicyResult>",
      "authenticated" : true,
      "methodName" : "getRepositoryPolicy"
    },
    "InitiateLayerUpload" : {
      "documentation" : "<p>Notify Amazon ECR that you intend to upload an image layer.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "InitiateLayerUpload",
      "deprecated" : false,
      "input" : {
        "variableName" : "initiateLayerUploadRequest",
        "variableType" : "InitiateLayerUploadRequest",
        "variableDeclarationType" : "InitiateLayerUploadRequest",
        "documentation" : "",
        "simpleType" : "InitiateLayerUploadRequest",
        "variableSetterType" : "InitiateLayerUploadRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "InitiateLayerUploadResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "InitiateLayerUploadResult",
      "asyncReturnType" : "InitiateLayerUploadResult",
      "asyncFutureType" : "java.util.concurrent.Future<InitiateLayerUploadResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<InitiateLayerUploadResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<InitiateLayerUploadRequest, InitiateLayerUploadResult>",
      "authenticated" : true,
      "methodName" : "initiateLayerUpload"
    },
    "ListImages" : {
      "documentation" : "<p>Lists all the image IDs for a given repository.</p>",
      "operationName" : "ListImages",
      "deprecated" : false,
      "input" : {
        "variableName" : "listImagesRequest",
        "variableType" : "ListImagesRequest",
        "variableDeclarationType" : "ListImagesRequest",
        "documentation" : "",
        "simpleType" : "ListImagesRequest",
        "variableSetterType" : "ListImagesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListImagesResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "ListImagesResult",
      "asyncReturnType" : "ListImagesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListImagesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListImagesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListImagesRequest, ListImagesResult>",
      "authenticated" : true,
      "methodName" : "listImages"
    },
    "PutImage" : {
      "documentation" : "<p>Creates or updates the image manifest associated with an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "PutImage",
      "deprecated" : false,
      "input" : {
        "variableName" : "putImageRequest",
        "variableType" : "PutImageRequest",
        "variableDeclarationType" : "PutImageRequest",
        "documentation" : "",
        "simpleType" : "PutImageRequest",
        "variableSetterType" : "PutImageRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "PutImageResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "ImageAlreadyExistsException",
        "documentation" : "<p>The specified image has already been pushed, and there are no changes to the manifest or image tag since the last push.</p>"
      }, {
        "exceptionName" : "LayersNotFoundException",
        "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "PutImageResult",
      "asyncReturnType" : "PutImageResult",
      "asyncFutureType" : "java.util.concurrent.Future<PutImageResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<PutImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutImageRequest, PutImageResult>",
      "authenticated" : true,
      "methodName" : "putImage"
    },
    "SetRepositoryPolicy" : {
      "documentation" : "<p>Applies a repository policy on a specified repository to control access permissions.</p>",
      "operationName" : "SetRepositoryPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "setRepositoryPolicyRequest",
        "variableType" : "SetRepositoryPolicyRequest",
        "variableDeclarationType" : "SetRepositoryPolicyRequest",
        "documentation" : "",
        "simpleType" : "SetRepositoryPolicyRequest",
        "variableSetterType" : "SetRepositoryPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "SetRepositoryPolicyResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "SetRepositoryPolicyResult",
      "asyncReturnType" : "SetRepositoryPolicyResult",
      "asyncFutureType" : "java.util.concurrent.Future<SetRepositoryPolicyResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<SetRepositoryPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetRepositoryPolicyRequest, SetRepositoryPolicyResult>",
      "authenticated" : true,
      "methodName" : "setRepositoryPolicy"
    },
    "UploadLayerPart" : {
      "documentation" : "<p>Uploads an image layer part to Amazon ECR.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "operationName" : "UploadLayerPart",
      "deprecated" : false,
      "input" : {
        "variableName" : "uploadLayerPartRequest",
        "variableType" : "UploadLayerPartRequest",
        "variableDeclarationType" : "UploadLayerPartRequest",
        "documentation" : "",
        "simpleType" : "UploadLayerPartRequest",
        "variableSetterType" : "UploadLayerPartRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "UploadLayerPartResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "ServerException",
        "documentation" : "<p>These errors are usually caused by a server-side issue.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>"
      }, {
        "exceptionName" : "InvalidLayerPartException",
        "documentation" : "<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>"
      }, {
        "exceptionName" : "RepositoryNotFoundException",
        "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>"
      }, {
        "exceptionName" : "UploadNotFoundException",
        "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncReturnType" : "UploadLayerPartResult",
      "asyncReturnType" : "UploadLayerPartResult",
      "asyncFutureType" : "java.util.concurrent.Future<UploadLayerPartResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<UploadLayerPartResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UploadLayerPartRequest, UploadLayerPartResult>",
      "authenticated" : true,
      "methodName" : "uploadLayerPart"
    }
  },
  "shapes" : {
    "GetAuthorizationTokenRequest" : {
      "c2jName" : "GetAuthorizationTokenRequest",
      "documentation" : "",
      "shapeName" : "GetAuthorizationTokenRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryIds",
        "c2jName" : "registryIds",
        "c2jShape" : "GetAuthorizationTokenRegistryIdList",
        "variable" : {
          "variableName" : "registryIds",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "registryIds",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryIds",
          "marshallLocationName" : "registryIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RegistryId",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : true,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@return A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRegistryIds(java.util.Collection)} or {@link #withRegistryIds(java.util.Collection)} if you want to override the existing values.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getAuthorizationTokenRequest",
        "variableType" : "GetAuthorizationTokenRequest",
        "variableDeclarationType" : "GetAuthorizationTokenRequest",
        "documentation" : null,
        "simpleType" : "GetAuthorizationTokenRequest",
        "variableSetterType" : "GetAuthorizationTokenRequest"
      },
      "marshaller" : {
        "action" : "GetAuthorizationToken",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetAuthorizationToken",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryIds" : {
          "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryIds",
          "c2jName" : "registryIds",
          "c2jShape" : "GetAuthorizationTokenRegistryIdList",
          "variable" : {
            "variableName" : "registryIds",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "registryIds",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryIds",
            "marshallLocationName" : "registryIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RegistryId",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : true,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@return A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRegistryIds(java.util.Collection)} or {@link #withRegistryIds(java.util.Collection)} if you want to override the existing values.</p>\n@param registryIds A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "DeleteRepositoryResult" : {
      "c2jName" : "DeleteRepositoryResponse",
      "documentation" : "",
      "shapeName" : "DeleteRepositoryResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Repository",
        "c2jName" : "repository",
        "c2jShape" : "Repository",
        "variable" : {
          "variableName" : "repository",
          "variableType" : "Repository",
          "variableDeclarationType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "setterModel" : {
          "variableName" : "repository",
          "variableType" : "Repository",
          "variableDeclarationType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "getterModel" : {
          "returnType" : "Repository",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repository",
          "marshallLocationName" : "repository",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**\n@param repository */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteRepositoryResult",
        "variableType" : "DeleteRepositoryResult",
        "variableDeclarationType" : "DeleteRepositoryResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryResult",
        "variableSetterType" : "DeleteRepositoryResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Repository" : {
          "documentation" : "",
          "name" : "Repository",
          "c2jName" : "repository",
          "c2jShape" : "Repository",
          "variable" : {
            "variableName" : "repository",
            "variableType" : "Repository",
            "variableDeclarationType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "setterModel" : {
            "variableName" : "repository",
            "variableType" : "Repository",
            "variableDeclarationType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "getterModel" : {
            "returnType" : "Repository",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repository",
            "marshallLocationName" : "repository",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**\n@param repository */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayerPartTooSmallException" : {
      "c2jName" : "LayerPartTooSmallException",
      "documentation" : "<p>Layer parts must be at least 5 MiB in size.</p>",
      "shapeName" : "LayerPartTooSmallException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "layerPartTooSmallException",
        "variableType" : "LayerPartTooSmallException",
        "variableDeclarationType" : "LayerPartTooSmallException",
        "documentation" : null,
        "simpleType" : "LayerPartTooSmallException",
        "variableSetterType" : "LayerPartTooSmallException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LayerPartTooSmallException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetDownloadUrlForLayerResult" : {
      "c2jName" : "GetDownloadUrlForLayerResponse",
      "documentation" : "",
      "shapeName" : "GetDownloadUrlForLayerResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
        "name" : "DownloadUrl",
        "c2jName" : "downloadUrl",
        "c2jShape" : "Url",
        "variable" : {
          "variableName" : "downloadUrl",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "downloadUrl",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "downloadUrl",
          "marshallLocationName" : "downloadUrl",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.*/",
        "getterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@return The pre-signed Amazon S3 download URL for the requested layer.*/",
        "fluentSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The digest of the image layer to download.</p>",
        "name" : "LayerDigest",
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "variable" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigest",
          "marshallLocationName" : "layerDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
        "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
        "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getDownloadUrlForLayerResult",
        "variableType" : "GetDownloadUrlForLayerResult",
        "variableDeclarationType" : "GetDownloadUrlForLayerResult",
        "documentation" : null,
        "simpleType" : "GetDownloadUrlForLayerResult",
        "variableSetterType" : "GetDownloadUrlForLayerResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LayerDigest" : {
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "name" : "LayerDigest",
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "variable" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The digest of the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigest",
            "marshallLocationName" : "layerDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
          "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
          "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "DownloadUrl" : {
          "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
          "name" : "DownloadUrl",
          "c2jName" : "downloadUrl",
          "c2jShape" : "Url",
          "variable" : {
            "variableName" : "downloadUrl",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "downloadUrl",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "downloadUrl",
            "marshallLocationName" : "downloadUrl",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.*/",
          "getterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@return The pre-signed Amazon S3 download URL for the requested layer.*/",
          "fluentSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The pre-signed Amazon S3 download URL for the requested layer.</p>\n@param downloadUrl The pre-signed Amazon S3 download URL for the requested layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "UploadLayerPartResult" : {
      "c2jName" : "UploadLayerPartResponse",
      "documentation" : "",
      "shapeName" : "UploadLayerPartResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the request.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The upload ID associated with the request.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@return The upload ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The integer value of the last byte received in the request.</p>",
        "name" : "LastByteReceived",
        "c2jName" : "lastByteReceived",
        "c2jShape" : "PartSize",
        "variable" : {
          "variableName" : "lastByteReceived",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The integer value of the last byte received in the request.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "lastByteReceived",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "lastByteReceived",
          "marshallLocationName" : "lastByteReceived",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.*/",
        "getterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@return The integer value of the last byte received in the request.*/",
        "fluentSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "uploadLayerPartResult",
        "variableType" : "UploadLayerPartResult",
        "variableDeclarationType" : "UploadLayerPartResult",
        "documentation" : null,
        "simpleType" : "UploadLayerPartResult",
        "variableSetterType" : "UploadLayerPartResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the request.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LastByteReceived" : {
          "documentation" : "<p>The integer value of the last byte received in the request.</p>",
          "name" : "LastByteReceived",
          "c2jName" : "lastByteReceived",
          "c2jShape" : "PartSize",
          "variable" : {
            "variableName" : "lastByteReceived",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The integer value of the last byte received in the request.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "lastByteReceived",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "lastByteReceived",
            "marshallLocationName" : "lastByteReceived",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.*/",
          "getterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@return The integer value of the last byte received in the request.*/",
          "fluentSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The integer value of the last byte received in the request.</p>\n@param lastByteReceived The integer value of the last byte received in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID associated with the request.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@return The upload ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the request.</p>\n@param uploadId The upload ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "InvalidLayerPartException" : {
      "c2jName" : "InvalidLayerPartException",
      "documentation" : "<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>",
      "shapeName" : "InvalidLayerPartException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the exception.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@return The registry ID associated with the exception.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the exception.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@return The repository name associated with the exception.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The upload ID associated with the exception.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID associated with the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.*/",
        "getterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@return The upload ID associated with the exception.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
        "name" : "LastValidByteReceived",
        "c2jName" : "lastValidByteReceived",
        "c2jShape" : "PartSize",
        "variable" : {
          "variableName" : "lastValidByteReceived",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "lastValidByteReceived",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "lastValidByteReceived",
          "marshallLocationName" : "lastValidByteReceived",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.*/",
        "getterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@return The last valid byte received from the layer part upload that is associated with the exception.*/",
        "fluentSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidLayerPartException",
        "variableType" : "InvalidLayerPartException",
        "variableDeclarationType" : "InvalidLayerPartException",
        "documentation" : null,
        "simpleType" : "InvalidLayerPartException",
        "variableSetterType" : "InvalidLayerPartException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidLayerPartException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LastValidByteReceived" : {
          "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
          "name" : "LastValidByteReceived",
          "c2jName" : "lastValidByteReceived",
          "c2jShape" : "PartSize",
          "variable" : {
            "variableName" : "lastValidByteReceived",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "lastValidByteReceived",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "lastValidByteReceived",
            "marshallLocationName" : "lastValidByteReceived",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.*/",
          "getterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@return The last valid byte received from the layer part upload that is associated with the exception.*/",
          "fluentSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The last valid byte received from the layer part upload that is associated with the exception.</p>\n@param lastValidByteReceived The last valid byte received from the layer part upload that is associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the exception.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@return The registry ID associated with the exception.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the exception.</p>\n@param registryId The registry ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the exception.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@return The repository name associated with the exception.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the exception.</p>\n@param repositoryName The repository name associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID associated with the exception.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID associated with the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.*/",
          "getterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@return The upload ID associated with the exception.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the exception.</p>\n@param uploadId The upload ID associated with the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "DeleteRepositoryRequest" : {
      "c2jName" : "DeleteRepositoryRequest",
      "documentation" : "",
      "shapeName" : "DeleteRepositoryRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository to delete.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
        "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>Force the deletion of the repository if it contains images.</p>",
        "name" : "Force",
        "c2jName" : "force",
        "c2jShape" : "ForceFlag",
        "variable" : {
          "variableName" : "force",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Force the deletion of the repository if it contains images.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "force",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "force",
          "marshallLocationName" : "force",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.*/",
        "getterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@return Force the deletion of the repository if it contains images.*/",
        "fluentSetterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "marshaller" : {
        "action" : "DeleteRepository",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DeleteRepository",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Force" : {
          "documentation" : "<p>Force the deletion of the repository if it contains images.</p>",
          "name" : "Force",
          "c2jName" : "force",
          "c2jShape" : "ForceFlag",
          "variable" : {
            "variableName" : "force",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Force the deletion of the repository if it contains images.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "force",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "force",
            "marshallLocationName" : "force",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.*/",
          "getterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@return Force the deletion of the repository if it contains images.*/",
          "fluentSetterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Force the deletion of the repository if it contains images.</p>\n@param force Force the deletion of the repository if it contains images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository to delete.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
          "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "DeleteRepositoryPolicyRequest" : {
      "c2jName" : "DeleteRepositoryPolicyRequest",
      "documentation" : "",
      "shapeName" : "DeleteRepositoryPolicyRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.*/",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@return The name of the repository that is associated with the repository policy to delete.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteRepositoryPolicyRequest",
        "variableType" : "DeleteRepositoryPolicyRequest",
        "variableDeclarationType" : "DeleteRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryPolicyRequest",
        "variableSetterType" : "DeleteRepositoryPolicyRequest"
      },
      "marshaller" : {
        "action" : "DeleteRepositoryPolicy",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DeleteRepositoryPolicy",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.*/",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@return The name of the repository that is associated with the repository policy to delete.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the repository policy to delete.</p>\n@param repositoryName The name of the repository that is associated with the repository policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "InitiateLayerUploadRequest" : {
      "c2jName" : "InitiateLayerUploadRequest",
      "documentation" : "",
      "shapeName" : "InitiateLayerUploadRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository that you intend to upload layers to.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository that you intend to upload layers to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.*/",
        "getterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@return The name of the repository that you intend to upload layers to.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "initiateLayerUploadRequest",
        "variableType" : "InitiateLayerUploadRequest",
        "variableDeclarationType" : "InitiateLayerUploadRequest",
        "documentation" : null,
        "simpleType" : "InitiateLayerUploadRequest",
        "variableSetterType" : "InitiateLayerUploadRequest"
      },
      "marshaller" : {
        "action" : "InitiateLayerUpload",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.InitiateLayerUpload",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository that you intend to upload layers to.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository that you intend to upload layers to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.*/",
          "getterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@return The name of the repository that you intend to upload layers to.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository that you intend to upload layers to.</p>\n@param repositoryName The name of the repository that you intend to upload layers to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "Image" : {
      "c2jName" : "Image",
      "documentation" : "<p>Object representing an image.</p>",
      "shapeName" : "Image",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@return The AWS account ID associated with the registry containing the image.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository associated with the image.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository associated with the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.*/",
        "getterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@return The name of the repository associated with the image.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
        "name" : "ImageId",
        "c2jName" : "imageId",
        "c2jShape" : "ImageIdentifier",
        "variable" : {
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "variableDeclarationType" : "ImageIdentifier",
          "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "setterModel" : {
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "variableDeclarationType" : "ImageIdentifier",
          "documentation" : "",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "getterModel" : {
          "returnType" : "ImageIdentifier",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageId",
          "marshallLocationName" : "imageId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.*/",
        "getterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@return An object containing the image tag and image digest associated with an image.*/",
        "fluentSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The image manifest associated with the image.</p>",
        "name" : "ImageManifest",
        "c2jName" : "imageManifest",
        "c2jShape" : "ImageManifest",
        "variable" : {
          "variableName" : "imageManifest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The image manifest associated with the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "imageManifest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageManifest",
          "marshallLocationName" : "imageManifest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.*/",
        "getterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@return The image manifest associated with the image.*/",
        "fluentSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "image",
        "variableType" : "Image",
        "variableDeclarationType" : "Image",
        "documentation" : null,
        "simpleType" : "Image",
        "variableSetterType" : "Image"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageId" : {
          "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
          "name" : "ImageId",
          "c2jName" : "imageId",
          "c2jShape" : "ImageIdentifier",
          "variable" : {
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "variableDeclarationType" : "ImageIdentifier",
            "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "setterModel" : {
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "variableDeclarationType" : "ImageIdentifier",
            "documentation" : "",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "getterModel" : {
            "returnType" : "ImageIdentifier",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageId",
            "marshallLocationName" : "imageId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.*/",
          "getterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@return An object containing the image tag and image digest associated with an image.*/",
          "fluentSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An object containing the image tag and image digest associated with an image.</p>\n@param imageId An object containing the image tag and image digest associated with an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@return The AWS account ID associated with the registry containing the image.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry containing the image.</p>\n@param registryId The AWS account ID associated with the registry containing the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository associated with the image.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository associated with the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.*/",
          "getterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@return The name of the repository associated with the image.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository associated with the image.</p>\n@param repositoryName The name of the repository associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ImageManifest" : {
          "documentation" : "<p>The image manifest associated with the image.</p>",
          "name" : "ImageManifest",
          "c2jName" : "imageManifest",
          "c2jShape" : "ImageManifest",
          "variable" : {
            "variableName" : "imageManifest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The image manifest associated with the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "imageManifest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageManifest",
            "marshallLocationName" : "imageManifest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.*/",
          "getterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@return The image manifest associated with the image.*/",
          "fluentSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The image manifest associated with the image.</p>\n@param imageManifest The image manifest associated with the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "shapeName" : "InvalidParameterException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "variableDeclarationType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "BatchCheckLayerAvailabilityRequest" : {
      "c2jName" : "BatchCheckLayerAvailabilityRequest",
      "documentation" : "",
      "shapeName" : "BatchCheckLayerAvailabilityRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "layerDigests" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.*/",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@return The name of the repository that is associated with the image layers to check.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The digests of the image layers to check.</p>",
        "name" : "LayerDigests",
        "c2jName" : "layerDigests",
        "c2jShape" : "BatchedOperationLayerDigestList",
        "variable" : {
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>The digests of the image layers to check.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigests",
          "marshallLocationName" : "layerDigests",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "BatchedOperationLayerDigest",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : true,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.*/",
        "getterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@return The digests of the image layers to check.*/",
        "fluentSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchCheckLayerAvailabilityRequest",
        "variableType" : "BatchCheckLayerAvailabilityRequest",
        "variableDeclarationType" : "BatchCheckLayerAvailabilityRequest",
        "documentation" : null,
        "simpleType" : "BatchCheckLayerAvailabilityRequest",
        "variableSetterType" : "BatchCheckLayerAvailabilityRequest"
      },
      "marshaller" : {
        "action" : "BatchCheckLayerAvailability",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchCheckLayerAvailability",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.*/",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@return The name of the repository that is associated with the image layers to check.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layers to check.</p>\n@param repositoryName The name of the repository that is associated with the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LayerDigests" : {
          "documentation" : "<p>The digests of the image layers to check.</p>",
          "name" : "LayerDigests",
          "c2jName" : "layerDigests",
          "c2jShape" : "BatchedOperationLayerDigestList",
          "variable" : {
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>The digests of the image layers to check.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigests",
            "marshallLocationName" : "layerDigests",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "BatchedOperationLayerDigest",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : true,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.*/",
          "getterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@return The digests of the image layers to check.*/",
          "fluentSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The digests of the image layers to check.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The digests of the image layers to check.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "BatchDeleteImageResult" : {
      "c2jName" : "BatchDeleteImageResponse",
      "documentation" : "",
      "shapeName" : "BatchDeleteImageResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The image IDs of the deleted images.</p>",
        "name" : "ImageIds",
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "variable" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The image IDs of the deleted images.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "setterModel" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageIds",
          "marshallLocationName" : "imageIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageIdentifier",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageIdentifier",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageIdentifier>",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.*/",
        "getterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@return The image IDs of the deleted images.*/",
        "fluentSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>Any failures associated with the call.</p>",
        "name" : "Failures",
        "c2jName" : "failures",
        "c2jShape" : "ImageFailureList",
        "variable" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "setterModel" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "documentation" : "",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageFailure>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failures",
          "marshallLocationName" : "failures",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageFailure",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageFailure",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "variableDeclarationType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "variableDeclarationType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "getterModel" : {
              "returnType" : "ImageFailure",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageFailure",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageFailure>",
          "templateImplType" : "java.util.ArrayList<ImageFailure>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchDeleteImageResult",
        "variableType" : "BatchDeleteImageResult",
        "variableDeclarationType" : "BatchDeleteImageResult",
        "documentation" : null,
        "simpleType" : "BatchDeleteImageResult",
        "variableSetterType" : "BatchDeleteImageResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageIds" : {
          "documentation" : "<p>The image IDs of the deleted images.</p>",
          "name" : "ImageIds",
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "variable" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The image IDs of the deleted images.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "setterModel" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageIds",
            "marshallLocationName" : "imageIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageIdentifier",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageIdentifier",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageIdentifier>",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.*/",
          "getterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@return The image IDs of the deleted images.*/",
          "fluentSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The image IDs of the deleted images.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The image IDs of the deleted images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "Failures" : {
          "documentation" : "<p>Any failures associated with the call.</p>",
          "name" : "Failures",
          "c2jName" : "failures",
          "c2jShape" : "ImageFailureList",
          "variable" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "setterModel" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "documentation" : "",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageFailure>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failures",
            "marshallLocationName" : "failures",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageFailure",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageFailure",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "variableDeclarationType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "variableDeclarationType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "getterModel" : {
                "returnType" : "ImageFailure",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageFailure",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageFailure>",
            "templateImplType" : "java.util.ArrayList<ImageFailure>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "CreateRepositoryRequest" : {
      "c2jName" : "CreateRepositoryRequest",
      "documentation" : "",
      "shapeName" : "CreateRepositoryRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
        "getterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@return The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
        "fluentSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "variableDeclarationType" : "CreateRepositoryRequest",
        "documentation" : null,
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "marshaller" : {
        "action" : "CreateRepository",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.CreateRepository",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RepositoryName" : {
          "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
          "getterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@return The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).*/",
          "fluentSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>\n@param repositoryName The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "ServerException" : {
      "c2jName" : "ServerException",
      "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
      "shapeName" : "ServerException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "serverException",
        "variableType" : "ServerException",
        "variableDeclarationType" : "ServerException",
        "documentation" : null,
        "simpleType" : "ServerException",
        "variableSetterType" : "ServerException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "AuthorizationData" : {
      "c2jName" : "AuthorizationData",
      "documentation" : "<p>An object representing authorization data for an Amazon ECR registry.</p>",
      "shapeName" : "AuthorizationData",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
        "name" : "AuthorizationToken",
        "c2jName" : "authorizationToken",
        "c2jShape" : "Base64",
        "variable" : {
          "variableName" : "authorizationToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authorizationToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authorizationToken",
          "marshallLocationName" : "authorizationToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
        "getterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@return A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
        "fluentSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
        "name" : "ExpiresAt",
        "c2jName" : "expiresAt",
        "c2jShape" : "ExpirationTimestamp",
        "variable" : {
          "variableName" : "expiresAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "expiresAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "expiresAt",
          "marshallLocationName" : "expiresAt",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
        "getterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@return The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
        "fluentSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
        "name" : "ProxyEndpoint",
        "c2jName" : "proxyEndpoint",
        "c2jShape" : "ProxyEndpoint",
        "variable" : {
          "variableName" : "proxyEndpoint",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "proxyEndpoint",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "proxyEndpoint",
          "marshallLocationName" : "proxyEndpoint",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
        "getterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@return The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
        "fluentSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "authorizationData",
        "variableType" : "AuthorizationData",
        "variableDeclarationType" : "AuthorizationData",
        "documentation" : null,
        "simpleType" : "AuthorizationData",
        "variableSetterType" : "AuthorizationData"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AuthorizationToken" : {
          "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
          "name" : "AuthorizationToken",
          "c2jName" : "authorizationToken",
          "c2jShape" : "Base64",
          "variable" : {
            "variableName" : "authorizationToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authorizationToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authorizationToken",
            "marshallLocationName" : "authorizationToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
          "getterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@return A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.*/",
          "fluentSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>\n@param authorizationToken A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ExpiresAt" : {
          "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
          "name" : "ExpiresAt",
          "c2jName" : "expiresAt",
          "c2jShape" : "ExpirationTimestamp",
          "variable" : {
            "variableName" : "expiresAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "expiresAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "expiresAt",
            "marshallLocationName" : "expiresAt",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
          "getterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@return The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.*/",
          "fluentSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>\n@param expiresAt The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ProxyEndpoint" : {
          "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
          "name" : "ProxyEndpoint",
          "c2jName" : "proxyEndpoint",
          "c2jShape" : "ProxyEndpoint",
          "variable" : {
            "variableName" : "proxyEndpoint",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "proxyEndpoint",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "proxyEndpoint",
            "marshallLocationName" : "proxyEndpoint",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
          "getterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@return The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..*/",
          "fluentSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>\n@param proxyEndpoint The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>..\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "SetRepositoryPolicyRequest" : {
      "c2jName" : "SetRepositoryPolicyRequest",
      "documentation" : "",
      "shapeName" : "SetRepositoryPolicyRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "policyText" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository to receive the policy.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
        "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
        "name" : "PolicyText",
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "variable" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyText",
          "marshallLocationName" : "policyText",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.*/",
        "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
        "name" : "Force",
        "c2jName" : "force",
        "c2jShape" : "ForceFlag",
        "variable" : {
          "variableName" : "force",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "force",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "force",
          "marshallLocationName" : "force",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
        "getterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@return If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
        "fluentSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "setRepositoryPolicyRequest",
        "variableType" : "SetRepositoryPolicyRequest",
        "variableDeclarationType" : "SetRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "SetRepositoryPolicyRequest",
        "variableSetterType" : "SetRepositoryPolicyRequest"
      },
      "marshaller" : {
        "action" : "SetRepositoryPolicy",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.SetRepositoryPolicy",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyText" : {
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "name" : "PolicyText",
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "variable" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyText",
            "marshallLocationName" : "policyText",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.*/",
          "getterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@return The JSON repository policy text to apply to the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text to apply to the repository.</p>\n@param policyText The JSON repository policy text to apply to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "Force" : {
          "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
          "name" : "Force",
          "c2jName" : "force",
          "c2jShape" : "ForceFlag",
          "variable" : {
            "variableName" : "force",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "force",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "force",
            "marshallLocationName" : "force",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
          "getterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@return If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.*/",
          "fluentSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>\n@param force If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository to receive the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.*/",
          "getterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@return The name of the repository to receive the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository to receive the policy.</p>\n@param repositoryName The name of the repository to receive the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "RepositoryNotEmptyException" : {
      "c2jName" : "RepositoryNotEmptyException",
      "documentation" : "<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>",
      "shapeName" : "RepositoryNotEmptyException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "repositoryNotEmptyException",
        "variableType" : "RepositoryNotEmptyException",
        "variableDeclarationType" : "RepositoryNotEmptyException",
        "documentation" : null,
        "simpleType" : "RepositoryNotEmptyException",
        "variableSetterType" : "RepositoryNotEmptyException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "RepositoryNotEmptyException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "SetRepositoryPolicyResult" : {
      "c2jName" : "SetRepositoryPolicyResponse",
      "documentation" : "",
      "shapeName" : "SetRepositoryPolicyResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the request.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
        "name" : "PolicyText",
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "variable" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyText",
          "marshallLocationName" : "policyText",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.*/",
        "getterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@return The JSON repository policy text applied to the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "setRepositoryPolicyResult",
        "variableType" : "SetRepositoryPolicyResult",
        "variableDeclarationType" : "SetRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "SetRepositoryPolicyResult",
        "variableSetterType" : "SetRepositoryPolicyResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyText" : {
          "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
          "name" : "PolicyText",
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "variable" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyText",
            "marshallLocationName" : "policyText",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.*/",
          "getterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@return The JSON repository policy text applied to the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text applied to the repository.</p>\n@param policyText The JSON repository policy text applied to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the request.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "BatchGetImageResult" : {
      "c2jName" : "BatchGetImageResponse",
      "documentation" : "",
      "shapeName" : "BatchGetImageResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
        "name" : "Images",
        "c2jName" : "images",
        "c2jShape" : "ImageList",
        "variable" : {
          "variableName" : "images",
          "variableType" : "java.util.List<Image>",
          "variableDeclarationType" : "java.util.List<Image>",
          "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
          "simpleType" : "List<Image>",
          "variableSetterType" : "java.util.Collection<Image>"
        },
        "setterModel" : {
          "variableName" : "images",
          "variableType" : "java.util.List<Image>",
          "variableDeclarationType" : "java.util.List<Image>",
          "documentation" : "",
          "simpleType" : "List<Image>",
          "variableSetterType" : "java.util.Collection<Image>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Image>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "images",
          "marshallLocationName" : "images",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Image",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Image",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Image",
              "variableDeclarationType" : "Image",
              "documentation" : "",
              "simpleType" : "Image",
              "variableSetterType" : "Image"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Image",
              "variableDeclarationType" : "Image",
              "documentation" : "",
              "simpleType" : "Image",
              "variableSetterType" : "Image"
            },
            "getterModel" : {
              "returnType" : "Image",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "Image",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Image>",
          "templateImplType" : "java.util.ArrayList<Image>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.*/",
        "getterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@return A list of image objects corresponding to the image references in the request.*/",
        "fluentSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImages(java.util.Collection)} or {@link #withImages(java.util.Collection)} if you want to override the existing values.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>Any failures associated with the call.</p>",
        "name" : "Failures",
        "c2jName" : "failures",
        "c2jShape" : "ImageFailureList",
        "variable" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "setterModel" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<ImageFailure>",
          "variableDeclarationType" : "java.util.List<ImageFailure>",
          "documentation" : "",
          "simpleType" : "List<ImageFailure>",
          "variableSetterType" : "java.util.Collection<ImageFailure>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageFailure>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failures",
          "marshallLocationName" : "failures",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageFailure",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageFailure",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "variableDeclarationType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageFailure",
              "variableDeclarationType" : "ImageFailure",
              "documentation" : "",
              "simpleType" : "ImageFailure",
              "variableSetterType" : "ImageFailure"
            },
            "getterModel" : {
              "returnType" : "ImageFailure",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageFailure",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageFailure>",
          "templateImplType" : "java.util.ArrayList<ImageFailure>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchGetImageResult",
        "variableType" : "BatchGetImageResult",
        "variableDeclarationType" : "BatchGetImageResult",
        "documentation" : null,
        "simpleType" : "BatchGetImageResult",
        "variableSetterType" : "BatchGetImageResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Images" : {
          "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
          "name" : "Images",
          "c2jName" : "images",
          "c2jShape" : "ImageList",
          "variable" : {
            "variableName" : "images",
            "variableType" : "java.util.List<Image>",
            "variableDeclarationType" : "java.util.List<Image>",
            "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
            "simpleType" : "List<Image>",
            "variableSetterType" : "java.util.Collection<Image>"
          },
          "setterModel" : {
            "variableName" : "images",
            "variableType" : "java.util.List<Image>",
            "variableDeclarationType" : "java.util.List<Image>",
            "documentation" : "",
            "simpleType" : "List<Image>",
            "variableSetterType" : "java.util.Collection<Image>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Image>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "images",
            "marshallLocationName" : "images",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Image",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Image",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Image",
                "variableDeclarationType" : "Image",
                "documentation" : "",
                "simpleType" : "Image",
                "variableSetterType" : "Image"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Image",
                "variableDeclarationType" : "Image",
                "documentation" : "",
                "simpleType" : "Image",
                "variableSetterType" : "Image"
              },
              "getterModel" : {
                "returnType" : "Image",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "Image",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Image>",
            "templateImplType" : "java.util.ArrayList<Image>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.*/",
          "getterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@return A list of image objects corresponding to the image references in the request.*/",
          "fluentSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of image objects corresponding to the image references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImages(java.util.Collection)} or {@link #withImages(java.util.Collection)} if you want to override the existing values.</p>\n@param images A list of image objects corresponding to the image references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "Failures" : {
          "documentation" : "<p>Any failures associated with the call.</p>",
          "name" : "Failures",
          "c2jName" : "failures",
          "c2jShape" : "ImageFailureList",
          "variable" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "setterModel" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<ImageFailure>",
            "variableDeclarationType" : "java.util.List<ImageFailure>",
            "documentation" : "",
            "simpleType" : "List<ImageFailure>",
            "variableSetterType" : "java.util.Collection<ImageFailure>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageFailure>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failures",
            "marshallLocationName" : "failures",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageFailure",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageFailure",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "variableDeclarationType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageFailure",
                "variableDeclarationType" : "ImageFailure",
                "documentation" : "",
                "simpleType" : "ImageFailure",
                "variableSetterType" : "ImageFailure"
              },
              "getterModel" : {
                "returnType" : "ImageFailure",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageFailure",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageFailure>",
            "templateImplType" : "java.util.ArrayList<ImageFailure>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "InitiateLayerUploadResult" : {
      "c2jName" : "InitiateLayerUploadResponse",
      "documentation" : "",
      "shapeName" : "InitiateLayerUploadResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
        "getterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@return The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
        "name" : "PartSize",
        "c2jName" : "partSize",
        "c2jShape" : "PartSize",
        "variable" : {
          "variableName" : "partSize",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "partSize",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partSize",
          "marshallLocationName" : "partSize",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
        "getterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@return The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
        "fluentSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "initiateLayerUploadResult",
        "variableType" : "InitiateLayerUploadResult",
        "variableDeclarationType" : "InitiateLayerUploadResult",
        "documentation" : null,
        "simpleType" : "InitiateLayerUploadResult",
        "variableSetterType" : "InitiateLayerUploadResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PartSize" : {
          "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
          "name" : "PartSize",
          "c2jName" : "partSize",
          "c2jShape" : "PartSize",
          "variable" : {
            "variableName" : "partSize",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "partSize",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partSize",
            "marshallLocationName" : "partSize",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
          "getterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@return The size, in bytes, that Amazon ECR expects future layer part uploads to be.*/",
          "fluentSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>\n@param partSize The size, in bytes, that Amazon ECR expects future layer part uploads to be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
          "getterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@return The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>\n@param uploadId The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayerAvailability" : {
      "c2jName" : "LayerAvailability",
      "documentation" : "",
      "shapeName" : "LayerAvailability",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : [ {
        "name" : "AVAILABLE",
        "value" : "AVAILABLE"
      }, {
        "name" : "UNAVAILABLE",
        "value" : "UNAVAILABLE"
      } ],
      "variable" : {
        "variableName" : "layerAvailability",
        "variableType" : "LayerAvailability",
        "variableDeclarationType" : "LayerAvailability",
        "documentation" : null,
        "simpleType" : "LayerAvailability",
        "variableSetterType" : "LayerAvailability"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeRepositoriesRequest" : {
      "c2jName" : "DescribeRepositoriesRequest",
      "documentation" : "",
      "shapeName" : "DescribeRepositoriesRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
        "name" : "RepositoryNames",
        "c2jName" : "repositoryNames",
        "c2jShape" : "RepositoryNameList",
        "variable" : {
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryNames",
          "marshallLocationName" : "repositoryNames",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : true,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
        "getterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@return A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
        "fluentSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
        "name" : "MaxResults",
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "maxResults",
          "marshallLocationName" : "maxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeRepositoriesRequest",
        "variableType" : "DescribeRepositoriesRequest",
        "variableDeclarationType" : "DescribeRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "DescribeRepositoriesRequest",
        "variableSetterType" : "DescribeRepositoriesRequest"
      },
      "marshaller" : {
        "action" : "DescribeRepositories",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.DescribeRepositories",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RepositoryNames" : {
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "name" : "RepositoryNames",
          "c2jName" : "repositoryNames",
          "c2jShape" : "RepositoryNameList",
          "variable" : {
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryNames",
            "marshallLocationName" : "repositoryNames",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : true,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
          "getterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@return A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.*/",
          "fluentSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "NextToken" : {
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "MaxResults" : {
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "name" : "MaxResults",
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "maxResults",
            "marshallLocationName" : "maxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "getterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "ListImagesResult" : {
      "c2jName" : "ListImagesResponse",
      "documentation" : "",
      "shapeName" : "ListImagesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The list of image IDs for the requested repository.</p>",
        "name" : "ImageIds",
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "variable" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "setterModel" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageIds",
          "marshallLocationName" : "imageIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageIdentifier",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageIdentifier",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageIdentifier>",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
        "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
        "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listImagesResult",
        "variableType" : "ListImagesResult",
        "variableDeclarationType" : "ListImagesResult",
        "documentation" : null,
        "simpleType" : "ListImagesResult",
        "variableSetterType" : "ListImagesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageIds" : {
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "name" : "ImageIds",
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "variable" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>The list of image IDs for the requested repository.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "setterModel" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageIds",
            "marshallLocationName" : "imageIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageIdentifier",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageIdentifier",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageIdentifier>",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.*/",
          "getterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@return The list of image IDs for the requested repository.*/",
          "fluentSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The list of image IDs for the requested repository.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds The list of image IDs for the requested repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "NextToken" : {
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayerAlreadyExistsException" : {
      "c2jName" : "LayerAlreadyExistsException",
      "documentation" : "<p>The image layer already exists in the associated repository.</p>",
      "shapeName" : "LayerAlreadyExistsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "layerAlreadyExistsException",
        "variableType" : "LayerAlreadyExistsException",
        "variableDeclarationType" : "LayerAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "LayerAlreadyExistsException",
        "variableSetterType" : "LayerAlreadyExistsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LayerAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetDownloadUrlForLayerRequest" : {
      "c2jName" : "GetDownloadUrlForLayerRequest",
      "documentation" : "",
      "shapeName" : "GetDownloadUrlForLayerRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "layerDigest" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.*/",
        "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@return The name of the repository that is associated with the image layer to download.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The digest of the image layer to download.</p>",
        "name" : "LayerDigest",
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "variable" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigest",
          "marshallLocationName" : "layerDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
        "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
        "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getDownloadUrlForLayerRequest",
        "variableType" : "GetDownloadUrlForLayerRequest",
        "variableDeclarationType" : "GetDownloadUrlForLayerRequest",
        "documentation" : null,
        "simpleType" : "GetDownloadUrlForLayerRequest",
        "variableSetterType" : "GetDownloadUrlForLayerRequest"
      },
      "marshaller" : {
        "action" : "GetDownloadUrlForLayer",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LayerDigest" : {
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "name" : "LayerDigest",
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "variable" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The digest of the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigest",
            "marshallLocationName" : "layerDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.*/",
          "getterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@return The digest of the image layer to download.*/",
          "fluentSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The digest of the image layer to download.</p>\n@param layerDigest The digest of the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.*/",
          "getterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@return The name of the repository that is associated with the image layer to download.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository that is associated with the image layer to download.</p>\n@param repositoryName The name of the repository that is associated with the image layer to download.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayerFailure" : {
      "c2jName" : "LayerFailure",
      "documentation" : "",
      "shapeName" : "LayerFailure",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The layer digest associated with the failure.</p>",
        "name" : "LayerDigest",
        "c2jName" : "layerDigest",
        "c2jShape" : "BatchedOperationLayerDigest",
        "variable" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The layer digest associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigest",
          "marshallLocationName" : "layerDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.*/",
        "getterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@return The layer digest associated with the failure.*/",
        "fluentSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The failure code associated with the failure.</p>",
        "name" : "FailureCode",
        "c2jName" : "failureCode",
        "c2jShape" : "LayerFailureCode",
        "variable" : {
          "variableName" : "failureCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The failure code associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "failureCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failureCode",
          "marshallLocationName" : "failureCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "LayerFailureCode",
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@see LayerFailureCode*/",
        "getterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@return The failure code associated with the failure.\n@see LayerFailureCode*/",
        "fluentSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
        "varargSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The reason for the failure.</p>",
        "name" : "FailureReason",
        "c2jName" : "failureReason",
        "c2jShape" : "LayerFailureReason",
        "variable" : {
          "variableName" : "failureReason",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The reason for the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "failureReason",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failureReason",
          "marshallLocationName" : "failureReason",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
        "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
        "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "layerFailure",
        "variableType" : "LayerFailure",
        "variableDeclarationType" : "LayerFailure",
        "documentation" : null,
        "simpleType" : "LayerFailure",
        "variableSetterType" : "LayerFailure"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LayerDigest" : {
          "documentation" : "<p>The layer digest associated with the failure.</p>",
          "name" : "LayerDigest",
          "c2jName" : "layerDigest",
          "c2jShape" : "BatchedOperationLayerDigest",
          "variable" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The layer digest associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigest",
            "marshallLocationName" : "layerDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.*/",
          "getterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@return The layer digest associated with the failure.*/",
          "fluentSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The layer digest associated with the failure.</p>\n@param layerDigest The layer digest associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "FailureReason" : {
          "documentation" : "<p>The reason for the failure.</p>",
          "name" : "FailureReason",
          "c2jName" : "failureReason",
          "c2jShape" : "LayerFailureReason",
          "variable" : {
            "variableName" : "failureReason",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The reason for the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "failureReason",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failureReason",
            "marshallLocationName" : "failureReason",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
          "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
          "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "FailureCode" : {
          "documentation" : "<p>The failure code associated with the failure.</p>",
          "name" : "FailureCode",
          "c2jName" : "failureCode",
          "c2jShape" : "LayerFailureCode",
          "variable" : {
            "variableName" : "failureCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The failure code associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "failureCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failureCode",
            "marshallLocationName" : "failureCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "LayerFailureCode",
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@see LayerFailureCode*/",
          "getterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@return The failure code associated with the failure.\n@see LayerFailureCode*/",
          "fluentSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
          "varargSetterDocumentation" : "/**<p>The failure code associated with the failure.</p>\n@param failureCode The failure code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerFailureCode*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "UploadLayerPartRequest" : {
      "c2jName" : "UploadLayerPartRequest",
      "documentation" : "",
      "shapeName" : "UploadLayerPartRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "uploadId", "partFirstByte", "partLastByte", "layerPartBlob" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository that you are uploading layer parts to.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository that you are uploading layer parts to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.*/",
        "getterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@return The name of the repository that you are uploading layer parts to.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
        "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
        "name" : "PartFirstByte",
        "c2jName" : "partFirstByte",
        "c2jShape" : "PartSize",
        "variable" : {
          "variableName" : "partFirstByte",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "partFirstByte",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partFirstByte",
          "marshallLocationName" : "partFirstByte",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.*/",
        "getterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@return The integer value of the first byte of the layer part.*/",
        "fluentSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
        "name" : "PartLastByte",
        "c2jName" : "partLastByte",
        "c2jShape" : "PartSize",
        "variable" : {
          "variableName" : "partLastByte",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "partLastByte",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partLastByte",
          "marshallLocationName" : "partLastByte",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.*/",
        "getterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@return The integer value of the last byte of the layer part.*/",
        "fluentSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The base64-encoded layer part payload.</p>",
        "name" : "LayerPartBlob",
        "c2jName" : "layerPartBlob",
        "c2jShape" : "LayerPartBlob",
        "variable" : {
          "variableName" : "layerPartBlob",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The base64-encoded layer part payload.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "setterModel" : {
          "variableName" : "layerPartBlob",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerPartBlob",
          "marshallLocationName" : "layerPartBlob",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nAWS SDK for Java performs a Base64 encoding on this field before sending this request to AWS service by default. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.*/",
        "getterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The base64-encoded layer part payload.*/",
        "fluentSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "uploadLayerPartRequest",
        "variableType" : "UploadLayerPartRequest",
        "variableDeclarationType" : "UploadLayerPartRequest",
        "documentation" : null,
        "simpleType" : "UploadLayerPartRequest",
        "variableSetterType" : "UploadLayerPartRequest"
      },
      "marshaller" : {
        "action" : "UploadLayerPart",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.UploadLayerPart",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PartLastByte" : {
          "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
          "name" : "PartLastByte",
          "c2jName" : "partLastByte",
          "c2jShape" : "PartSize",
          "variable" : {
            "variableName" : "partLastByte",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "partLastByte",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partLastByte",
            "marshallLocationName" : "partLastByte",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.*/",
          "getterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@return The integer value of the last byte of the layer part.*/",
          "fluentSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The integer value of the last byte of the layer part.</p>\n@param partLastByte The integer value of the last byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LayerPartBlob" : {
          "documentation" : "<p>The base64-encoded layer part payload.</p>",
          "name" : "LayerPartBlob",
          "c2jName" : "layerPartBlob",
          "c2jShape" : "LayerPartBlob",
          "variable" : {
            "variableName" : "layerPartBlob",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The base64-encoded layer part payload.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "setterModel" : {
            "variableName" : "layerPartBlob",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerPartBlob",
            "marshallLocationName" : "layerPartBlob",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The base64-encoded layer part payload.</p><p>\nAWS SDK for Java performs a Base64 encoding on this field before sending this request to AWS service by default. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param layerPartBlob The base64-encoded layer part payload.*/",
          "getterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The base64-encoded layer part payload.*/",
          "fluentSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The base64-encoded layer part payload.</p>\n@param layerPartBlob The base64-encoded layer part payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository that you are uploading layer parts to.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository that you are uploading layer parts to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.*/",
          "getterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@return The name of the repository that you are uploading layer parts to.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository that you are uploading layer parts to.</p>\n@param repositoryName The name of the repository that you are uploading layer parts to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "PartFirstByte" : {
          "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
          "name" : "PartFirstByte",
          "c2jName" : "partFirstByte",
          "c2jShape" : "PartSize",
          "variable" : {
            "variableName" : "partFirstByte",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "partFirstByte",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partFirstByte",
            "marshallLocationName" : "partFirstByte",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.*/",
          "getterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@return The integer value of the first byte of the layer part.*/",
          "fluentSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The integer value of the first byte of the layer part.</p>\n@param partFirstByte The integer value of the first byte of the layer part.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
          "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "EmptyUploadException" : {
      "c2jName" : "EmptyUploadException",
      "documentation" : "<p>The specified layer upload does not contain any layer parts.</p>",
      "shapeName" : "EmptyUploadException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "emptyUploadException",
        "variableType" : "EmptyUploadException",
        "variableDeclarationType" : "EmptyUploadException",
        "documentation" : null,
        "simpleType" : "EmptyUploadException",
        "variableSetterType" : "EmptyUploadException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "EmptyUploadException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "PutImageResult" : {
      "c2jName" : "PutImageResponse",
      "documentation" : "",
      "shapeName" : "PutImageResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>Details of the image uploaded.</p>",
        "name" : "Image",
        "c2jName" : "image",
        "c2jShape" : "Image",
        "variable" : {
          "variableName" : "image",
          "variableType" : "Image",
          "variableDeclarationType" : "Image",
          "documentation" : "<p>Details of the image uploaded.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "setterModel" : {
          "variableName" : "image",
          "variableType" : "Image",
          "variableDeclarationType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "image",
          "marshallLocationName" : "image",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.*/",
        "getterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@return Details of the image uploaded.*/",
        "fluentSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putImageResult",
        "variableType" : "PutImageResult",
        "variableDeclarationType" : "PutImageResult",
        "documentation" : null,
        "simpleType" : "PutImageResult",
        "variableSetterType" : "PutImageResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Image" : {
          "documentation" : "<p>Details of the image uploaded.</p>",
          "name" : "Image",
          "c2jName" : "image",
          "c2jShape" : "Image",
          "variable" : {
            "variableName" : "image",
            "variableType" : "Image",
            "variableDeclarationType" : "Image",
            "documentation" : "<p>Details of the image uploaded.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "setterModel" : {
            "variableName" : "image",
            "variableType" : "Image",
            "variableDeclarationType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "image",
            "marshallLocationName" : "image",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.*/",
          "getterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@return Details of the image uploaded.*/",
          "fluentSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Details of the image uploaded.</p>\n@param image Details of the image uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : false,
          "map" : false
        }
      }
    },
    "DeleteRepositoryPolicyResult" : {
      "c2jName" : "DeleteRepositoryPolicyResponse",
      "documentation" : "",
      "shapeName" : "DeleteRepositoryPolicyResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the request.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
        "name" : "PolicyText",
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "variable" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyText",
          "marshallLocationName" : "policyText",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.*/",
        "getterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@return The JSON repository policy that was deleted from the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteRepositoryPolicyResult",
        "variableType" : "DeleteRepositoryPolicyResult",
        "variableDeclarationType" : "DeleteRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryPolicyResult",
        "variableSetterType" : "DeleteRepositoryPolicyResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyText" : {
          "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
          "name" : "PolicyText",
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "variable" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyText",
            "marshallLocationName" : "policyText",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.*/",
          "getterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@return The JSON repository policy that was deleted from the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON repository policy that was deleted from the repository.</p>\n@param policyText The JSON repository policy that was deleted from the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the request.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "PutImageRequest" : {
      "c2jName" : "PutImageRequest",
      "documentation" : "",
      "shapeName" : "PutImageRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "imageManifest" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository in which to put the image.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository in which to put the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.*/",
        "getterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@return The name of the repository in which to put the image.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
        "name" : "ImageManifest",
        "c2jName" : "imageManifest",
        "c2jShape" : "ImageManifest",
        "variable" : {
          "variableName" : "imageManifest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "imageManifest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageManifest",
          "marshallLocationName" : "imageManifest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.*/",
        "getterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@return The image manifest corresponding to the image to be uploaded.*/",
        "fluentSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putImageRequest",
        "variableType" : "PutImageRequest",
        "variableDeclarationType" : "PutImageRequest",
        "documentation" : null,
        "simpleType" : "PutImageRequest",
        "variableSetterType" : "PutImageRequest"
      },
      "marshaller" : {
        "action" : "PutImage",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.PutImage",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository in which to put the image.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository in which to put the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.*/",
          "getterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@return The name of the repository in which to put the image.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository in which to put the image.</p>\n@param repositoryName The name of the repository in which to put the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ImageManifest" : {
          "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
          "name" : "ImageManifest",
          "c2jName" : "imageManifest",
          "c2jShape" : "ImageManifest",
          "variable" : {
            "variableName" : "imageManifest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "imageManifest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageManifest",
            "marshallLocationName" : "imageManifest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.*/",
          "getterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@return The image manifest corresponding to the image to be uploaded.*/",
          "fluentSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The image manifest corresponding to the image to be uploaded.</p>\n@param imageManifest The image manifest corresponding to the image to be uploaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayerFailureCode" : {
      "c2jName" : "LayerFailureCode",
      "documentation" : "",
      "shapeName" : "LayerFailureCode",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : [ {
        "name" : "InvalidLayerDigest",
        "value" : "InvalidLayerDigest"
      }, {
        "name" : "MissingLayerDigest",
        "value" : "MissingLayerDigest"
      } ],
      "variable" : {
        "variableName" : "layerFailureCode",
        "variableType" : "LayerFailureCode",
        "variableDeclarationType" : "LayerFailureCode",
        "documentation" : null,
        "simpleType" : "LayerFailureCode",
        "variableSetterType" : "LayerFailureCode"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetRepositoryPolicyRequest" : {
      "c2jName" : "GetRepositoryPolicyRequest",
      "documentation" : "",
      "shapeName" : "GetRepositoryPolicyRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository whose policy you want to retrieve.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository whose policy you want to retrieve.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.*/",
        "getterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@return The name of the repository whose policy you want to retrieve.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRepositoryPolicyRequest",
        "variableType" : "GetRepositoryPolicyRequest",
        "variableDeclarationType" : "GetRepositoryPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryPolicyRequest",
        "variableSetterType" : "GetRepositoryPolicyRequest"
      },
      "marshaller" : {
        "action" : "GetRepositoryPolicy",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.GetRepositoryPolicy",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository whose policy you want to retrieve.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository whose policy you want to retrieve.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.*/",
          "getterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@return The name of the repository whose policy you want to retrieve.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository whose policy you want to retrieve.</p>\n@param repositoryName The name of the repository whose policy you want to retrieve.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "BatchDeleteImageRequest" : {
      "c2jName" : "BatchDeleteImageRequest",
      "documentation" : "<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "shapeName" : "BatchDeleteImageRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "imageIds" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository that contains the image to delete.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository that contains the image to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.*/",
        "getterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@return The repository that contains the image to delete.*/",
        "fluentSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
        "name" : "ImageIds",
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "variable" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "setterModel" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageIds",
          "marshallLocationName" : "imageIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageIdentifier",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageIdentifier",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageIdentifier>",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchDeleteImageRequest",
        "variableType" : "BatchDeleteImageRequest",
        "variableDeclarationType" : "BatchDeleteImageRequest",
        "documentation" : null,
        "simpleType" : "BatchDeleteImageRequest",
        "variableSetterType" : "BatchDeleteImageRequest"
      },
      "marshaller" : {
        "action" : "BatchDeleteImage",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchDeleteImage",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageIds" : {
          "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "name" : "ImageIds",
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "variable" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "setterModel" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageIds",
            "marshallLocationName" : "imageIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageIdentifier",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageIdentifier",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageIdentifier>",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository that contains the image to delete.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository that contains the image to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.*/",
          "getterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@return The repository that contains the image to delete.*/",
          "fluentSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository that contains the image to delete.</p>\n@param repositoryName The repository that contains the image to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "CreateRepositoryResult" : {
      "c2jName" : "CreateRepositoryResponse",
      "documentation" : "",
      "shapeName" : "CreateRepositoryResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Repository",
        "c2jName" : "repository",
        "c2jShape" : "Repository",
        "variable" : {
          "variableName" : "repository",
          "variableType" : "Repository",
          "variableDeclarationType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "setterModel" : {
          "variableName" : "repository",
          "variableType" : "Repository",
          "variableDeclarationType" : "Repository",
          "documentation" : "",
          "simpleType" : "Repository",
          "variableSetterType" : "Repository"
        },
        "getterModel" : {
          "returnType" : "Repository",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repository",
          "marshallLocationName" : "repository",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**\n@param repository */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createRepositoryResult",
        "variableType" : "CreateRepositoryResult",
        "variableDeclarationType" : "CreateRepositoryResult",
        "documentation" : null,
        "simpleType" : "CreateRepositoryResult",
        "variableSetterType" : "CreateRepositoryResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Repository" : {
          "documentation" : "",
          "name" : "Repository",
          "c2jName" : "repository",
          "c2jShape" : "Repository",
          "variable" : {
            "variableName" : "repository",
            "variableType" : "Repository",
            "variableDeclarationType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "setterModel" : {
            "variableName" : "repository",
            "variableType" : "Repository",
            "variableDeclarationType" : "Repository",
            "documentation" : "",
            "simpleType" : "Repository",
            "variableSetterType" : "Repository"
          },
          "getterModel" : {
            "returnType" : "Repository",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repository",
            "marshallLocationName" : "repository",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**\n@param repository */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param repository \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : false,
          "map" : false
        }
      }
    },
    "CompleteLayerUploadRequest" : {
      "c2jName" : "CompleteLayerUploadRequest",
      "documentation" : "",
      "shapeName" : "CompleteLayerUploadRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "uploadId", "layerDigests" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.*/",
        "getterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@return The name of the repository to associate with the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
        "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "name" : "LayerDigests",
        "c2jName" : "layerDigests",
        "c2jShape" : "LayerDigestList",
        "variable" : {
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "layerDigests",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigests",
          "marshallLocationName" : "layerDigests",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "LayerDigest",
            "variable" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "String",
              "variableDeclarationType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : true,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.*/",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "completeLayerUploadRequest",
        "variableType" : "CompleteLayerUploadRequest",
        "variableDeclarationType" : "CompleteLayerUploadRequest",
        "documentation" : null,
        "simpleType" : "CompleteLayerUploadRequest",
        "variableSetterType" : "CompleteLayerUploadRequest"
      },
      "marshaller" : {
        "action" : "CompleteLayerUpload",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.CompleteLayerUpload",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.*/",
          "getterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@return The name of the repository to associate with the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository to associate with the image layer.</p>\n@param repositoryName The name of the repository to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
          "getterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@return The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>\n@param uploadId The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LayerDigests" : {
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "name" : "LayerDigests",
          "c2jName" : "layerDigests",
          "c2jShape" : "LayerDigestList",
          "variable" : {
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "layerDigests",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigests",
            "marshallLocationName" : "layerDigests",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "LayerDigest",
              "variable" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "String",
                "variableDeclarationType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : true,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.*/",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayerDigests(java.util.Collection)} or {@link #withLayerDigests(java.util.Collection)} if you want to override the existing values.</p>\n@param layerDigests The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "GetRepositoryPolicyResult" : {
      "c2jName" : "GetRepositoryPolicyResponse",
      "documentation" : "",
      "shapeName" : "GetRepositoryPolicyResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the request.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
        "name" : "PolicyText",
        "c2jName" : "policyText",
        "c2jShape" : "RepositoryPolicyText",
        "variable" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyText",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyText",
          "marshallLocationName" : "policyText",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.*/",
        "getterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@return The JSON repository policy text associated with the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRepositoryPolicyResult",
        "variableType" : "GetRepositoryPolicyResult",
        "variableDeclarationType" : "GetRepositoryPolicyResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryPolicyResult",
        "variableSetterType" : "GetRepositoryPolicyResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyText" : {
          "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
          "name" : "PolicyText",
          "c2jName" : "policyText",
          "c2jShape" : "RepositoryPolicyText",
          "variable" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyText",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyText",
            "marshallLocationName" : "policyText",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.*/",
          "getterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@return The JSON repository policy text associated with the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON repository policy text associated with the repository.</p>\n@param policyText The JSON repository policy text associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the request.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "BatchGetImageRequest" : {
      "c2jName" : "BatchGetImageRequest",
      "documentation" : "",
      "shapeName" : "BatchGetImageRequest",
      "deprecated" : false,
      "required" : [ "repositoryName", "imageIds" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository that contains the images to describe.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository that contains the images to describe.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.*/",
        "getterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@return The repository that contains the images to describe.*/",
        "fluentSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
        "name" : "ImageIds",
        "c2jName" : "imageIds",
        "c2jShape" : "ImageIdentifierList",
        "variable" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "setterModel" : {
          "variableName" : "imageIds",
          "variableType" : "java.util.List<ImageIdentifier>",
          "variableDeclarationType" : "java.util.List<ImageIdentifier>",
          "documentation" : "",
          "simpleType" : "List<ImageIdentifier>",
          "variableSetterType" : "java.util.Collection<ImageIdentifier>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ImageIdentifier>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageIds",
          "marshallLocationName" : "imageIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ImageIdentifier",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ImageIdentifier",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ImageIdentifier",
              "variableDeclarationType" : "ImageIdentifier",
              "documentation" : "",
              "simpleType" : "ImageIdentifier",
              "variableSetterType" : "ImageIdentifier"
            },
            "getterModel" : {
              "returnType" : "ImageIdentifier",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "ImageIdentifier",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ImageIdentifier>",
          "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
        "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchGetImageRequest",
        "variableType" : "BatchGetImageRequest",
        "variableDeclarationType" : "BatchGetImageRequest",
        "documentation" : null,
        "simpleType" : "BatchGetImageRequest",
        "variableSetterType" : "BatchGetImageRequest"
      },
      "marshaller" : {
        "action" : "BatchGetImage",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.BatchGetImage",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageIds" : {
          "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "name" : "ImageIds",
          "c2jName" : "imageIds",
          "c2jShape" : "ImageIdentifierList",
          "variable" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "setterModel" : {
            "variableName" : "imageIds",
            "variableType" : "java.util.List<ImageIdentifier>",
            "variableDeclarationType" : "java.util.List<ImageIdentifier>",
            "documentation" : "",
            "simpleType" : "List<ImageIdentifier>",
            "variableSetterType" : "java.util.Collection<ImageIdentifier>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ImageIdentifier>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageIds",
            "marshallLocationName" : "imageIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ImageIdentifier",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ImageIdentifier",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ImageIdentifier",
                "variableDeclarationType" : "ImageIdentifier",
                "documentation" : "",
                "simpleType" : "ImageIdentifier",
                "variableSetterType" : "ImageIdentifier"
              },
              "getterModel" : {
                "returnType" : "ImageIdentifier",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "ImageIdentifier",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ImageIdentifier>",
            "templateImplType" : "java.util.ArrayList<ImageIdentifier>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "getterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@return A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.*/",
          "fluentSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setImageIds(java.util.Collection)} or {@link #withImageIds(java.util.Collection)} if you want to override the existing values.</p>\n@param imageIds A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository that contains the images to describe.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository that contains the images to describe.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.*/",
          "getterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@return The repository that contains the images to describe.*/",
          "fluentSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository that contains the images to describe.</p>\n@param repositoryName The repository that contains the images to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "LayersNotFoundException" : {
      "c2jName" : "LayersNotFoundException",
      "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
      "shapeName" : "LayersNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "layersNotFoundException",
        "variableType" : "LayersNotFoundException",
        "variableDeclarationType" : "LayersNotFoundException",
        "documentation" : null,
        "simpleType" : "LayersNotFoundException",
        "variableSetterType" : "LayersNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LayersNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ImageFailureCode" : {
      "c2jName" : "ImageFailureCode",
      "documentation" : "",
      "shapeName" : "ImageFailureCode",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : null,
      "enums" : [ {
        "name" : "InvalidImageDigest",
        "value" : "InvalidImageDigest"
      }, {
        "name" : "InvalidImageTag",
        "value" : "InvalidImageTag"
      }, {
        "name" : "ImageTagDoesNotMatchDigest",
        "value" : "ImageTagDoesNotMatchDigest"
      }, {
        "name" : "ImageNotFound",
        "value" : "ImageNotFound"
      }, {
        "name" : "MissingDigestAndTag",
        "value" : "MissingDigestAndTag"
      } ],
      "variable" : {
        "variableName" : "imageFailureCode",
        "variableType" : "ImageFailureCode",
        "variableDeclarationType" : "ImageFailureCode",
        "documentation" : null,
        "simpleType" : "ImageFailureCode",
        "variableSetterType" : "ImageFailureCode"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidLayerException" : {
      "c2jName" : "InvalidLayerException",
      "documentation" : "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>",
      "shapeName" : "InvalidLayerException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidLayerException",
        "variableType" : "InvalidLayerException",
        "variableDeclarationType" : "InvalidLayerException",
        "documentation" : null,
        "simpleType" : "InvalidLayerException",
        "variableSetterType" : "InvalidLayerException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidLayerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeRepositoriesResult" : {
      "c2jName" : "DescribeRepositoriesResponse",
      "documentation" : "",
      "shapeName" : "DescribeRepositoriesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
        "name" : "Repositories",
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryList",
        "variable" : {
          "variableName" : "repositories",
          "variableType" : "java.util.List<Repository>",
          "variableDeclarationType" : "java.util.List<Repository>",
          "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
          "simpleType" : "List<Repository>",
          "variableSetterType" : "java.util.Collection<Repository>"
        },
        "setterModel" : {
          "variableName" : "repositories",
          "variableType" : "java.util.List<Repository>",
          "variableDeclarationType" : "java.util.List<Repository>",
          "documentation" : "",
          "simpleType" : "List<Repository>",
          "variableSetterType" : "java.util.Collection<Repository>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Repository>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositories",
          "marshallLocationName" : "repositories",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Repository",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Repository",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Repository",
              "variableDeclarationType" : "Repository",
              "documentation" : "",
              "simpleType" : "Repository",
              "variableSetterType" : "Repository"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Repository",
              "variableDeclarationType" : "Repository",
              "documentation" : "",
              "simpleType" : "Repository",
              "variableSetterType" : "Repository"
            },
            "getterModel" : {
              "returnType" : "Repository",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "Repository",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Repository>",
          "templateImplType" : "java.util.ArrayList<Repository>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.*/",
        "getterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@return A list of repository objects corresponding to valid repositories.*/",
        "fluentSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeRepositoriesResult",
        "variableType" : "DescribeRepositoriesResult",
        "variableDeclarationType" : "DescribeRepositoriesResult",
        "documentation" : null,
        "simpleType" : "DescribeRepositoriesResult",
        "variableSetterType" : "DescribeRepositoriesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Repositories" : {
          "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
          "name" : "Repositories",
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryList",
          "variable" : {
            "variableName" : "repositories",
            "variableType" : "java.util.List<Repository>",
            "variableDeclarationType" : "java.util.List<Repository>",
            "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
            "simpleType" : "List<Repository>",
            "variableSetterType" : "java.util.Collection<Repository>"
          },
          "setterModel" : {
            "variableName" : "repositories",
            "variableType" : "java.util.List<Repository>",
            "variableDeclarationType" : "java.util.List<Repository>",
            "documentation" : "",
            "simpleType" : "List<Repository>",
            "variableSetterType" : "java.util.Collection<Repository>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Repository>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositories",
            "marshallLocationName" : "repositories",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Repository",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Repository",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Repository",
                "variableDeclarationType" : "Repository",
                "documentation" : "",
                "simpleType" : "Repository",
                "variableSetterType" : "Repository"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Repository",
                "variableDeclarationType" : "Repository",
                "documentation" : "",
                "simpleType" : "Repository",
                "variableSetterType" : "Repository"
              },
              "getterModel" : {
                "returnType" : "Repository",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "Repository",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Repository>",
            "templateImplType" : "java.util.ArrayList<Repository>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.*/",
          "getterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@return A list of repository objects corresponding to valid repositories.*/",
          "fluentSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of repository objects corresponding to valid repositories.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repository objects corresponding to valid repositories.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "NextToken" : {
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "CompleteLayerUploadResult" : {
      "c2jName" : "CompleteLayerUploadResponse",
      "documentation" : "",
      "shapeName" : "CompleteLayerUploadResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The registry ID associated with the request.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
        "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository name associated with the request.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
        "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The upload ID associated with the layer.</p>",
        "name" : "UploadId",
        "c2jName" : "uploadId",
        "c2jShape" : "UploadId",
        "variable" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The upload ID associated with the layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "uploadId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "uploadId",
          "marshallLocationName" : "uploadId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.*/",
        "getterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@return The upload ID associated with the layer.*/",
        "fluentSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "name" : "LayerDigest",
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "variable" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigest",
          "marshallLocationName" : "layerDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "completeLayerUploadResult",
        "variableType" : "CompleteLayerUploadResult",
        "variableDeclarationType" : "CompleteLayerUploadResult",
        "documentation" : null,
        "simpleType" : "CompleteLayerUploadResult",
        "variableSetterType" : "CompleteLayerUploadResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LayerDigest" : {
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "name" : "LayerDigest",
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "variable" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigest",
            "marshallLocationName" : "layerDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The registry ID associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.*/",
          "getterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@return The registry ID associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The registry ID associated with the request.</p>\n@param registryId The registry ID associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository name associated with the request.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.*/",
          "getterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@return The repository name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository name associated with the request.</p>\n@param repositoryName The repository name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "UploadId" : {
          "documentation" : "<p>The upload ID associated with the layer.</p>",
          "name" : "UploadId",
          "c2jName" : "uploadId",
          "c2jShape" : "UploadId",
          "variable" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The upload ID associated with the layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "uploadId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "uploadId",
            "marshallLocationName" : "uploadId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.*/",
          "getterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@return The upload ID associated with the layer.*/",
          "fluentSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The upload ID associated with the layer.</p>\n@param uploadId The upload ID associated with the layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "RepositoryNotFoundException" : {
      "c2jName" : "RepositoryNotFoundException",
      "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
      "shapeName" : "RepositoryNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "repositoryNotFoundException",
        "variableType" : "RepositoryNotFoundException",
        "variableDeclarationType" : "RepositoryNotFoundException",
        "documentation" : null,
        "simpleType" : "RepositoryNotFoundException",
        "variableSetterType" : "RepositoryNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "RepositoryNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "RepositoryAlreadyExistsException" : {
      "c2jName" : "RepositoryAlreadyExistsException",
      "documentation" : "<p>The specified repository already exists in the specified registry.</p>",
      "shapeName" : "RepositoryAlreadyExistsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "repositoryAlreadyExistsException",
        "variableType" : "RepositoryAlreadyExistsException",
        "variableDeclarationType" : "RepositoryAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "RepositoryAlreadyExistsException",
        "variableSetterType" : "RepositoryAlreadyExistsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "RepositoryAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetAuthorizationTokenResult" : {
      "c2jName" : "GetAuthorizationTokenResponse",
      "documentation" : "",
      "shapeName" : "GetAuthorizationTokenResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
        "name" : "AuthorizationData",
        "c2jName" : "authorizationData",
        "c2jShape" : "AuthorizationDataList",
        "variable" : {
          "variableName" : "authorizationData",
          "variableType" : "java.util.List<AuthorizationData>",
          "variableDeclarationType" : "java.util.List<AuthorizationData>",
          "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
          "simpleType" : "List<AuthorizationData>",
          "variableSetterType" : "java.util.Collection<AuthorizationData>"
        },
        "setterModel" : {
          "variableName" : "authorizationData",
          "variableType" : "java.util.List<AuthorizationData>",
          "variableDeclarationType" : "java.util.List<AuthorizationData>",
          "documentation" : "",
          "simpleType" : "List<AuthorizationData>",
          "variableSetterType" : "java.util.Collection<AuthorizationData>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<AuthorizationData>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authorizationData",
          "marshallLocationName" : "authorizationData",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "AuthorizationData",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "AuthorizationData",
            "variable" : {
              "variableName" : "member",
              "variableType" : "AuthorizationData",
              "variableDeclarationType" : "AuthorizationData",
              "documentation" : "",
              "simpleType" : "AuthorizationData",
              "variableSetterType" : "AuthorizationData"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "AuthorizationData",
              "variableDeclarationType" : "AuthorizationData",
              "documentation" : "",
              "simpleType" : "AuthorizationData",
              "variableSetterType" : "AuthorizationData"
            },
            "getterModel" : {
              "returnType" : "AuthorizationData",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "AuthorizationData",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<AuthorizationData>",
          "templateImplType" : "java.util.ArrayList<AuthorizationData>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
        "getterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@return A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
        "fluentSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAuthorizationData(java.util.Collection)} or {@link #withAuthorizationData(java.util.Collection)} if you want to override the existing values.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getAuthorizationTokenResult",
        "variableType" : "GetAuthorizationTokenResult",
        "variableDeclarationType" : "GetAuthorizationTokenResult",
        "documentation" : null,
        "simpleType" : "GetAuthorizationTokenResult",
        "variableSetterType" : "GetAuthorizationTokenResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AuthorizationData" : {
          "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
          "name" : "AuthorizationData",
          "c2jName" : "authorizationData",
          "c2jShape" : "AuthorizationDataList",
          "variable" : {
            "variableName" : "authorizationData",
            "variableType" : "java.util.List<AuthorizationData>",
            "variableDeclarationType" : "java.util.List<AuthorizationData>",
            "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
            "simpleType" : "List<AuthorizationData>",
            "variableSetterType" : "java.util.Collection<AuthorizationData>"
          },
          "setterModel" : {
            "variableName" : "authorizationData",
            "variableType" : "java.util.List<AuthorizationData>",
            "variableDeclarationType" : "java.util.List<AuthorizationData>",
            "documentation" : "",
            "simpleType" : "List<AuthorizationData>",
            "variableSetterType" : "java.util.Collection<AuthorizationData>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<AuthorizationData>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authorizationData",
            "marshallLocationName" : "authorizationData",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "AuthorizationData",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "AuthorizationData",
              "variable" : {
                "variableName" : "member",
                "variableType" : "AuthorizationData",
                "variableDeclarationType" : "AuthorizationData",
                "documentation" : "",
                "simpleType" : "AuthorizationData",
                "variableSetterType" : "AuthorizationData"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "AuthorizationData",
                "variableDeclarationType" : "AuthorizationData",
                "documentation" : "",
                "simpleType" : "AuthorizationData",
                "variableSetterType" : "AuthorizationData"
              },
              "getterModel" : {
                "returnType" : "AuthorizationData",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "AuthorizationData",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<AuthorizationData>",
            "templateImplType" : "java.util.ArrayList<AuthorizationData>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
          "getterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@return A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.*/",
          "fluentSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAuthorizationData(java.util.Collection)} or {@link #withAuthorizationData(java.util.Collection)} if you want to override the existing values.</p>\n@param authorizationData A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "ListImagesRequest" : {
      "c2jName" : "ListImagesRequest",
      "documentation" : "",
      "shapeName" : "ListImagesRequest",
      "deprecated" : false,
      "required" : [ "repositoryName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The repository whose image IDs are to be listed.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The repository whose image IDs are to be listed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.*/",
        "getterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@return The repository whose image IDs are to be listed.*/",
        "fluentSetterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
        "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
        "name" : "MaxResults",
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "maxResults",
          "marshallLocationName" : "maxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "getterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listImagesRequest",
        "variableType" : "ListImagesRequest",
        "variableDeclarationType" : "ListImagesRequest",
        "documentation" : null,
        "simpleType" : "ListImagesRequest",
        "variableSetterType" : "ListImagesRequest"
      },
      "marshaller" : {
        "action" : "ListImages",
        "verb" : "POST",
        "target" : "AmazonEC2ContainerRegistry_V20150921.ListImages",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
          "getterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@return The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>\n@param nextToken The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "MaxResults" : {
          "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "name" : "MaxResults",
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "maxResults",
            "marshallLocationName" : "maxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "getterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@return The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>\n@param maxResults The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@return The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The repository whose image IDs are to be listed.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The repository whose image IDs are to be listed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.*/",
          "getterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@return The repository whose image IDs are to be listed.*/",
          "fluentSetterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The repository whose image IDs are to be listed.</p>\n@param repositoryName The repository whose image IDs are to be listed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "BatchCheckLayerAvailabilityResult" : {
      "c2jName" : "BatchCheckLayerAvailabilityResponse",
      "documentation" : "",
      "shapeName" : "BatchCheckLayerAvailabilityResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
        "name" : "Layers",
        "c2jName" : "layers",
        "c2jShape" : "LayerList",
        "variable" : {
          "variableName" : "layers",
          "variableType" : "java.util.List<Layer>",
          "variableDeclarationType" : "java.util.List<Layer>",
          "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
          "simpleType" : "List<Layer>",
          "variableSetterType" : "java.util.Collection<Layer>"
        },
        "setterModel" : {
          "variableName" : "layers",
          "variableType" : "java.util.List<Layer>",
          "variableDeclarationType" : "java.util.List<Layer>",
          "documentation" : "",
          "simpleType" : "List<Layer>",
          "variableSetterType" : "java.util.Collection<Layer>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Layer>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layers",
          "marshallLocationName" : "layers",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Layer",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Layer",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Layer",
              "variableDeclarationType" : "Layer",
              "documentation" : "",
              "simpleType" : "Layer",
              "variableSetterType" : "Layer"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Layer",
              "variableDeclarationType" : "Layer",
              "documentation" : "",
              "simpleType" : "Layer",
              "variableSetterType" : "Layer"
            },
            "getterModel" : {
              "returnType" : "Layer",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "Layer",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Layer>",
          "templateImplType" : "java.util.ArrayList<Layer>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.*/",
        "getterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@return A list of image layer objects corresponding to the image layer references in the request.*/",
        "fluentSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayers(java.util.Collection)} or {@link #withLayers(java.util.Collection)} if you want to override the existing values.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      }, {
        "documentation" : "<p>Any failures associated with the call.</p>",
        "name" : "Failures",
        "c2jName" : "failures",
        "c2jShape" : "LayerFailureList",
        "variable" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<LayerFailure>",
          "variableDeclarationType" : "java.util.List<LayerFailure>",
          "documentation" : "<p>Any failures associated with the call.</p>",
          "simpleType" : "List<LayerFailure>",
          "variableSetterType" : "java.util.Collection<LayerFailure>"
        },
        "setterModel" : {
          "variableName" : "failures",
          "variableType" : "java.util.List<LayerFailure>",
          "variableDeclarationType" : "java.util.List<LayerFailure>",
          "documentation" : "",
          "simpleType" : "List<LayerFailure>",
          "variableSetterType" : "java.util.Collection<LayerFailure>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<LayerFailure>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failures",
          "marshallLocationName" : "failures",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "LayerFailure",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "LayerFailure",
            "variable" : {
              "variableName" : "member",
              "variableType" : "LayerFailure",
              "variableDeclarationType" : "LayerFailure",
              "documentation" : "",
              "simpleType" : "LayerFailure",
              "variableSetterType" : "LayerFailure"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "LayerFailure",
              "variableDeclarationType" : "LayerFailure",
              "documentation" : "",
              "simpleType" : "LayerFailure",
              "variableSetterType" : "LayerFailure"
            },
            "getterModel" : {
              "returnType" : "LayerFailure",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "idempotencyToken" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "simple" : false,
            "list" : false,
            "map" : false
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simpleType" : "LayerFailure",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<LayerFailure>",
          "templateImplType" : "java.util.ArrayList<LayerFailure>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
        "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
        "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : true,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "batchCheckLayerAvailabilityResult",
        "variableType" : "BatchCheckLayerAvailabilityResult",
        "variableDeclarationType" : "BatchCheckLayerAvailabilityResult",
        "documentation" : null,
        "simpleType" : "BatchCheckLayerAvailabilityResult",
        "variableSetterType" : "BatchCheckLayerAvailabilityResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Layers" : {
          "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
          "name" : "Layers",
          "c2jName" : "layers",
          "c2jShape" : "LayerList",
          "variable" : {
            "variableName" : "layers",
            "variableType" : "java.util.List<Layer>",
            "variableDeclarationType" : "java.util.List<Layer>",
            "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
            "simpleType" : "List<Layer>",
            "variableSetterType" : "java.util.Collection<Layer>"
          },
          "setterModel" : {
            "variableName" : "layers",
            "variableType" : "java.util.List<Layer>",
            "variableDeclarationType" : "java.util.List<Layer>",
            "documentation" : "",
            "simpleType" : "List<Layer>",
            "variableSetterType" : "java.util.Collection<Layer>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Layer>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layers",
            "marshallLocationName" : "layers",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Layer",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Layer",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Layer",
                "variableDeclarationType" : "Layer",
                "documentation" : "",
                "simpleType" : "Layer",
                "variableSetterType" : "Layer"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Layer",
                "variableDeclarationType" : "Layer",
                "documentation" : "",
                "simpleType" : "Layer",
                "variableSetterType" : "Layer"
              },
              "getterModel" : {
                "returnType" : "Layer",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "Layer",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Layer>",
            "templateImplType" : "java.util.ArrayList<Layer>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.*/",
          "getterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@return A list of image layer objects corresponding to the image layer references in the request.*/",
          "fluentSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of image layer objects corresponding to the image layer references in the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLayers(java.util.Collection)} or {@link #withLayers(java.util.Collection)} if you want to override the existing values.</p>\n@param layers A list of image layer objects corresponding to the image layer references in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        },
        "Failures" : {
          "documentation" : "<p>Any failures associated with the call.</p>",
          "name" : "Failures",
          "c2jName" : "failures",
          "c2jShape" : "LayerFailureList",
          "variable" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<LayerFailure>",
            "variableDeclarationType" : "java.util.List<LayerFailure>",
            "documentation" : "<p>Any failures associated with the call.</p>",
            "simpleType" : "List<LayerFailure>",
            "variableSetterType" : "java.util.Collection<LayerFailure>"
          },
          "setterModel" : {
            "variableName" : "failures",
            "variableType" : "java.util.List<LayerFailure>",
            "variableDeclarationType" : "java.util.List<LayerFailure>",
            "documentation" : "",
            "simpleType" : "List<LayerFailure>",
            "variableSetterType" : "java.util.Collection<LayerFailure>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<LayerFailure>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failures",
            "marshallLocationName" : "failures",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "LayerFailure",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "LayerFailure",
              "variable" : {
                "variableName" : "member",
                "variableType" : "LayerFailure",
                "variableDeclarationType" : "LayerFailure",
                "documentation" : "",
                "simpleType" : "LayerFailure",
                "variableSetterType" : "LayerFailure"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "LayerFailure",
                "variableDeclarationType" : "LayerFailure",
                "documentation" : "",
                "simpleType" : "LayerFailure",
                "variableSetterType" : "LayerFailure"
              },
              "getterModel" : {
                "returnType" : "LayerFailure",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "idempotencyToken" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "simple" : false,
              "list" : false,
              "map" : false
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simpleType" : "LayerFailure",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<LayerFailure>",
            "templateImplType" : "java.util.ArrayList<LayerFailure>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.*/",
          "getterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@return Any failures associated with the call.*/",
          "fluentSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Any failures associated with the call.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailures(java.util.Collection)} or {@link #withFailures(java.util.Collection)} if you want to override the existing values.</p>\n@param failures Any failures associated with the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : true,
          "map" : false
        }
      }
    },
    "Layer" : {
      "c2jName" : "Layer",
      "documentation" : "",
      "shapeName" : "Layer",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
        "name" : "LayerDigest",
        "c2jName" : "layerDigest",
        "c2jShape" : "LayerDigest",
        "variable" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerDigest",
          "marshallLocationName" : "layerDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>",
        "name" : "LayerAvailability",
        "c2jName" : "layerAvailability",
        "c2jShape" : "LayerAvailability",
        "variable" : {
          "variableName" : "layerAvailability",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "layerAvailability",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerAvailability",
          "marshallLocationName" : "layerAvailability",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "LayerAvailability",
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@see LayerAvailability*/",
        "getterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@return The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@see LayerAvailability*/",
        "fluentSetterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
        "varargSetterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The size, in bytes, of the image layer.</p>",
        "name" : "LayerSize",
        "c2jName" : "layerSize",
        "c2jShape" : "LayerSizeInBytes",
        "variable" : {
          "variableName" : "layerSize",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The size, in bytes, of the image layer.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "layerSize",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "layerSize",
          "marshallLocationName" : "layerSize",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.*/",
        "getterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@return The size, in bytes, of the image layer.*/",
        "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "layer",
        "variableType" : "Layer",
        "variableDeclarationType" : "Layer",
        "documentation" : null,
        "simpleType" : "Layer",
        "variableSetterType" : "Layer"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LayerAvailability" : {
          "documentation" : "<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>",
          "name" : "LayerAvailability",
          "c2jName" : "layerAvailability",
          "c2jShape" : "LayerAvailability",
          "variable" : {
            "variableName" : "layerAvailability",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerAvailability",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerAvailability",
            "marshallLocationName" : "layerAvailability",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "LayerAvailability",
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@see LayerAvailability*/",
          "getterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@return The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@see LayerAvailability*/",
          "fluentSetterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
          "varargSetterDocumentation" : "/**<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>\n@param layerAvailability The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LayerAvailability*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LayerDigest" : {
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "name" : "LayerDigest",
          "c2jName" : "layerDigest",
          "c2jShape" : "LayerDigest",
          "variable" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "layerDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerDigest",
            "marshallLocationName" : "layerDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.*/",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@return The <code>sha256</code> digest of the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image layer.</p>\n@param layerDigest The <code>sha256</code> digest of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "LayerSize" : {
          "documentation" : "<p>The size, in bytes, of the image layer.</p>",
          "name" : "LayerSize",
          "c2jName" : "layerSize",
          "c2jShape" : "LayerSizeInBytes",
          "variable" : {
            "variableName" : "layerSize",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The size, in bytes, of the image layer.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "layerSize",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "layerSize",
            "marshallLocationName" : "layerSize",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.*/",
          "getterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@return The size, in bytes, of the image layer.*/",
          "fluentSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The size, in bytes, of the image layer.</p>\n@param layerSize The size, in bytes, of the image layer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "ImageIdentifier" : {
      "c2jName" : "ImageIdentifier",
      "documentation" : "",
      "shapeName" : "ImageIdentifier",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
        "name" : "ImageDigest",
        "c2jName" : "imageDigest",
        "c2jShape" : "ImageDigest",
        "variable" : {
          "variableName" : "imageDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "imageDigest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageDigest",
          "marshallLocationName" : "imageDigest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
        "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
        "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The tag used for the image.</p>",
        "name" : "ImageTag",
        "c2jName" : "imageTag",
        "c2jShape" : "ImageTag",
        "variable" : {
          "variableName" : "imageTag",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The tag used for the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "imageTag",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageTag",
          "marshallLocationName" : "imageTag",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.*/",
        "getterDocumentation" : "/**<p>The tag used for the image.</p>\n@return The tag used for the image.*/",
        "fluentSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "imageIdentifier",
        "variableType" : "ImageIdentifier",
        "variableDeclarationType" : "ImageIdentifier",
        "documentation" : null,
        "simpleType" : "ImageIdentifier",
        "variableSetterType" : "ImageIdentifier"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ImageTag" : {
          "documentation" : "<p>The tag used for the image.</p>",
          "name" : "ImageTag",
          "c2jName" : "imageTag",
          "c2jShape" : "ImageTag",
          "variable" : {
            "variableName" : "imageTag",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The tag used for the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "imageTag",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageTag",
            "marshallLocationName" : "imageTag",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.*/",
          "getterDocumentation" : "/**<p>The tag used for the image.</p>\n@return The tag used for the image.*/",
          "fluentSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The tag used for the image.</p>\n@param imageTag The tag used for the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ImageDigest" : {
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "name" : "ImageDigest",
          "c2jName" : "imageDigest",
          "c2jShape" : "ImageDigest",
          "variable" : {
            "variableName" : "imageDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "imageDigest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageDigest",
            "marshallLocationName" : "imageDigest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.*/",
          "getterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@return The <code>sha256</code> digest of the image manifest.*/",
          "fluentSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The <code>sha256</code> digest of the image manifest.</p>\n@param imageDigest The <code>sha256</code> digest of the image manifest.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "RepositoryPolicyNotFoundException" : {
      "c2jName" : "RepositoryPolicyNotFoundException",
      "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>",
      "shapeName" : "RepositoryPolicyNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "repositoryPolicyNotFoundException",
        "variableType" : "RepositoryPolicyNotFoundException",
        "variableDeclarationType" : "RepositoryPolicyNotFoundException",
        "documentation" : null,
        "simpleType" : "RepositoryPolicyNotFoundException",
        "variableSetterType" : "RepositoryPolicyNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "RepositoryPolicyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "Repository" : {
      "c2jName" : "Repository",
      "documentation" : "<p>Object representing a repository.</p>",
      "shapeName" : "Repository",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
        "name" : "RepositoryArn",
        "c2jName" : "repositoryArn",
        "c2jShape" : "Arn",
        "variable" : {
          "variableName" : "repositoryArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryArn",
          "marshallLocationName" : "repositoryArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@return The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
        "name" : "RegistryId",
        "c2jName" : "registryId",
        "c2jShape" : "RegistryId",
        "variable" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "registryId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "registryId",
          "marshallLocationName" : "registryId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.*/",
        "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@return The AWS account ID associated with the registry that contains the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The name of the repository.</p>",
        "name" : "RepositoryName",
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "variable" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryName",
          "marshallLocationName" : "repositoryName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
        "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>",
        "name" : "RepositoryUri",
        "c2jName" : "repositoryUri",
        "c2jShape" : "Url",
        "variable" : {
          "variableName" : "repositoryUri",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "repositoryUri",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "repositoryUri",
          "marshallLocationName" : "repositoryUri",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.*/",
        "getterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@return The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.*/",
        "fluentSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "repository",
        "variableType" : "Repository",
        "variableDeclarationType" : "Repository",
        "documentation" : null,
        "simpleType" : "Repository",
        "variableSetterType" : "Repository"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RepositoryArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
          "name" : "RepositoryArn",
          "c2jName" : "repositoryArn",
          "c2jShape" : "Arn",
          "variable" : {
            "variableName" : "repositoryArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryArn",
            "marshallLocationName" : "repositoryArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@return The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>\n@param repositoryArn The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RegistryId" : {
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
          "name" : "RegistryId",
          "c2jName" : "registryId",
          "c2jShape" : "RegistryId",
          "variable" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "registryId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "registryId",
            "marshallLocationName" : "registryId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.*/",
          "getterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@return The AWS account ID associated with the registry that contains the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account ID associated with the registry that contains the repository.</p>\n@param registryId The AWS account ID associated with the registry that contains the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryName" : {
          "documentation" : "<p>The name of the repository.</p>",
          "name" : "RepositoryName",
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "variable" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryName",
            "marshallLocationName" : "repositoryName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.*/",
          "getterDocumentation" : "/**<p>The name of the repository.</p>\n@return The name of the repository.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the repository.</p>\n@param repositoryName The name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "RepositoryUri" : {
          "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>",
          "name" : "RepositoryUri",
          "c2jName" : "repositoryUri",
          "c2jShape" : "Url",
          "variable" : {
            "variableName" : "repositoryUri",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "repositoryUri",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "repositoryUri",
            "marshallLocationName" : "repositoryUri",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.*/",
          "getterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@return The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.*/",
          "fluentSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>\n@param repositoryUri The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    },
    "ImageAlreadyExistsException" : {
      "c2jName" : "ImageAlreadyExistsException",
      "documentation" : "<p>The specified image has already been pushed, and there are no changes to the manifest or image tag since the last push.</p>",
      "shapeName" : "ImageAlreadyExistsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "imageAlreadyExistsException",
        "variableType" : "ImageAlreadyExistsException",
        "variableDeclarationType" : "ImageAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ImageAlreadyExistsException",
        "variableSetterType" : "ImageAlreadyExistsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ImageAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "LayerInaccessibleException" : {
      "c2jName" : "LayerInaccessibleException",
      "documentation" : "<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>",
      "shapeName" : "LayerInaccessibleException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "layerInaccessibleException",
        "variableType" : "LayerInaccessibleException",
        "variableDeclarationType" : "LayerInaccessibleException",
        "documentation" : null,
        "simpleType" : "LayerInaccessibleException",
        "variableSetterType" : "LayerInaccessibleException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LayerInaccessibleException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>",
      "shapeName" : "LimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "variableDeclarationType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "UploadNotFoundException" : {
      "c2jName" : "UploadNotFoundException",
      "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
      "shapeName" : "UploadNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "uploadNotFoundException",
        "variableType" : "UploadNotFoundException",
        "variableDeclarationType" : "UploadNotFoundException",
        "documentation" : null,
        "simpleType" : "UploadNotFoundException",
        "variableSetterType" : "UploadNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "UploadNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ImageFailure" : {
      "c2jName" : "ImageFailure",
      "documentation" : "",
      "shapeName" : "ImageFailure",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "wrapper" : false,
      "members" : [ {
        "documentation" : "<p>The image ID associated with the failure.</p>",
        "name" : "ImageId",
        "c2jName" : "imageId",
        "c2jShape" : "ImageIdentifier",
        "variable" : {
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "variableDeclarationType" : "ImageIdentifier",
          "documentation" : "<p>The image ID associated with the failure.</p>",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "setterModel" : {
          "variableName" : "imageId",
          "variableType" : "ImageIdentifier",
          "variableDeclarationType" : "ImageIdentifier",
          "documentation" : "",
          "simpleType" : "ImageIdentifier",
          "variableSetterType" : "ImageIdentifier"
        },
        "getterModel" : {
          "returnType" : "ImageIdentifier",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "imageId",
          "marshallLocationName" : "imageId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.*/",
        "getterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@return The image ID associated with the failure.*/",
        "fluentSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : false,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The code associated with the failure.</p>",
        "name" : "FailureCode",
        "c2jName" : "failureCode",
        "c2jShape" : "ImageFailureCode",
        "variable" : {
          "variableName" : "failureCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The code associated with the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "failureCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failureCode",
          "marshallLocationName" : "failureCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ImageFailureCode",
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@see ImageFailureCode*/",
        "getterDocumentation" : "/**<p>The code associated with the failure.</p>\n@return The code associated with the failure.\n@see ImageFailureCode*/",
        "fluentSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
        "varargSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
        "simple" : true,
        "list" : false,
        "map" : false
      }, {
        "documentation" : "<p>The reason for the failure.</p>",
        "name" : "FailureReason",
        "c2jName" : "failureReason",
        "c2jShape" : "ImageFailureReason",
        "variable" : {
          "variableName" : "failureReason",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The reason for the failure.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "failureReason",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "failureReason",
          "marshallLocationName" : "failureReason",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "idempotencyToken" : false,
        "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
        "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
        "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "simple" : true,
        "list" : false,
        "map" : false
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "imageFailure",
        "variableType" : "ImageFailure",
        "variableDeclarationType" : "ImageFailure",
        "documentation" : null,
        "simpleType" : "ImageFailure",
        "variableSetterType" : "ImageFailure"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "FailureReason" : {
          "documentation" : "<p>The reason for the failure.</p>",
          "name" : "FailureReason",
          "c2jName" : "failureReason",
          "c2jShape" : "ImageFailureReason",
          "variable" : {
            "variableName" : "failureReason",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The reason for the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "failureReason",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failureReason",
            "marshallLocationName" : "failureReason",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.*/",
          "getterDocumentation" : "/**<p>The reason for the failure.</p>\n@return The reason for the failure.*/",
          "fluentSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The reason for the failure.</p>\n@param failureReason The reason for the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : true,
          "list" : false,
          "map" : false
        },
        "ImageId" : {
          "documentation" : "<p>The image ID associated with the failure.</p>",
          "name" : "ImageId",
          "c2jName" : "imageId",
          "c2jShape" : "ImageIdentifier",
          "variable" : {
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "variableDeclarationType" : "ImageIdentifier",
            "documentation" : "<p>The image ID associated with the failure.</p>",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "setterModel" : {
            "variableName" : "imageId",
            "variableType" : "ImageIdentifier",
            "variableDeclarationType" : "ImageIdentifier",
            "documentation" : "",
            "simpleType" : "ImageIdentifier",
            "variableSetterType" : "ImageIdentifier"
          },
          "getterModel" : {
            "returnType" : "ImageIdentifier",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "imageId",
            "marshallLocationName" : "imageId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.*/",
          "getterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@return The image ID associated with the failure.*/",
          "fluentSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The image ID associated with the failure.</p>\n@param imageId The image ID associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "simple" : false,
          "list" : false,
          "map" : false
        },
        "FailureCode" : {
          "documentation" : "<p>The code associated with the failure.</p>",
          "name" : "FailureCode",
          "c2jName" : "failureCode",
          "c2jShape" : "ImageFailureCode",
          "variable" : {
            "variableName" : "failureCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The code associated with the failure.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "failureCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "failureCode",
            "marshallLocationName" : "failureCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ImageFailureCode",
          "xmlNameSpaceUri" : null,
          "idempotencyToken" : false,
          "setterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@see ImageFailureCode*/",
          "getterDocumentation" : "/**<p>The code associated with the failure.</p>\n@return The code associated with the failure.\n@see ImageFailureCode*/",
          "fluentSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
          "varargSetterDocumentation" : "/**<p>The code associated with the failure.</p>\n@param failureCode The code associated with the failure.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImageFailureCode*/",
          "simple" : true,
          "list" : false,
          "map" : false
        }
      }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfigFactory" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : null,
    "renameShapes" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customServiceMetadata" : null,
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null,
    "customErrorCodeFieldName" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "customSignerProvider" : null,
    "calculateCRC32FromCompressedData" : false,
    "customFileHeader" : null,
    "convenienceTypeOverloads" : [ ],
    "skipSmokeTests" : false
  },
  "examples" : {
    "version" : "1.0",
    "operationExamples" : { }
  },
  "sdkModeledExceptionBaseClassName" : "AmazonECRException",
  "fileHeader" : "/*\n * Copyright 2011-2016 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "clientConfigFactory" : "ClientConfigurationFactory",
  "exceptionUnmarshallerImpl" : null,
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.ecr.model.AmazonECRException"
}